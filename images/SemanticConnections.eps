%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: SemanticConnections.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Bram van der Vlist
%%CreationDate: 12/4/10
%%BoundingBox: 0 0 823 558
%%HiResBoundingBox: 0 0 822.3032 557.6108
%%CropBox: 0 0 822.3032 557.6108
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2010-04-12T11:57:31+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-04-12T11:57:31+02:00</xmp:MetadataDate>
         <xmp:CreateDate>2010-04-12T11:57:30+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A63pfl+L8y3vdb8zSTT+W&#xA;BdXFpoXl+OWSG2eK1la3a7uxEY2mkmkjYoj/AAolNiSTiqzzX5A0nyXo1z5o8hxDQ9V0pPrDadby&#xA;NHZahHF8T2k1uxMRaVVKo6gOGpvir0jTNQt9S0201G2Nbe9hjuISepSVA6/gcVROKuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjX5l6/qHl7yFretacVF9ZWrSW7OvJQ9QASp60rXFXzEf&#xA;z5/O1xCbLV7fUPVhWeT6taQP6Rev7qSsa0cU3GKsg/KL8+fzK138x9J0LW7uK4sb15YriE28UTqV&#xA;idwQyKrAhk74q+k/MOpPpeganqcaCSSxtJ7lI2NAxhjZwpI8eOKvkeL/AJyd/N+5lZbc2rsasIor&#xA;TlQewqxoMVZH5L/5yC/M+980eX7TVZdPls9U1OHTbizEQjuUEskaM5QMGX+9+EnYkYq+pMVdirsV&#xA;dirsVeC63+aGo/k1rtj5Y1jSWuPKWo6ldT2Wuq5VYbS9m9cxUo1ZLaWWTkpO8fGmKsq/5yJ8nal5&#xA;z/Km8tdCR7vUraW31DT4YG/vvTajBSCA37qRmUdyBTemKsz8h2N5p/kby7YXsbQ3lpplnBcxOeTJ&#xA;LHbojqxFakMCDiqe4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWEfnd/5KfzP/AMwb&#xA;f8SXFXyj+WOqra2s8UtjdTxrKJhNagblaExsW8ab4QqYflNdtefn9pN01ubQy3k7fV2HFkH1eSgY&#xA;ePjgV9c+ev8AlCPMP/bMvP8AqHfFXxJ+Wuo2trfXMVxFOROg43FvGZWjIruQA3j4YQqbWWpWuo/n&#xA;h5cuLW2ktoRrGmoElXhI3G5j+JloKVwFX3DirsVdirsVdiqVeaPKvl/zVos+ieYLJL/TLjiZbdyy&#xA;7qeSsroVdWB7qQcVVLG0fSbG3sLaES6faRJBbqhpIkUahEXidm4qOtQfbFUfFKkqB0PJW6HFV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVhH53f+Sn8z/wDMG3/ElxV88eVo7ifyjpx0&#xA;Ap6qqBcKWVTyFOVS1P2q1ySEw8vtYf8AQwPlVLco10gcXjR9Of1eUgfP+FMBS+kvPX/KEeYf+2Ze&#xA;f9Q74FfJn5dwsfKRk0lEk1L1W9dTx5dTT7X+TxwhCb6nBax/mF+XrShF1dtVsPrKpxrx+sxVrT/K&#xA;6fTiUvrjArsVdirsVdirsVdiqF07eKYjZDPNwTwpIVbfvycFvatO2KorFXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqlHm7y5a+ZvLWpaBcyvDDqMDQvLHTmnLowB22IxV4paf84liz5fU/&#xA;OV5bc/t+jb+nX58ZhiqdeQf+cadN8p+b7PzK+vT6hNZGR44GhWINJIjJyd+chNA5PzxV65rOmx6p&#xA;pF9pkjmOO+t5bZ5FpyVZkKEivccsVfPNj/zid5j02Z5NO85C3LbcktXUsO3ICamKpl5b/wCcXtUs&#xA;POGl+YtT80fX2067hvGT6uwkka3cSInN5WoCyjt0xV9AYq7FXYq7FXYq7FVC9meOHjF/fykRw13+&#xA;Ju9PBRVj7DFVSCFIII4Y/sRKEWu5oooMVX4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;8P8AzH8reU7vzzeXmt+df0XDP6RuNJWNhMiRR28R+ryFiqtI00dWEZIPHjupOKo/XLDQLqVLmbzj&#xA;Y6fqep+YBfWl0kxnAt9NtSEtyOcaq0dvEZHaWoSRjvyKnFXaZ5V8xJAsc/5pi7v7hporbi9EaRzx&#xA;SNUW5q3All2+L/ZAUVSLTrXVJtSj0xfzlmlvY0uVBa1dPiVTMxlLyCEPDEktUb+U1FUNFXaho+k6&#xA;AbOxb8yrXTNXjt3ikuuMjvL+kNYa5FHNwfTBM/pSMjB+Pxu3ELxVRb6brFlq82kXf5vGHUoPXfhd&#xA;x+krQXFskcQ5tLHE7o0qSn091LCgWoxVdN5Jnsk0v9CfmLZ2V7Z6bFY3MomRWlgeU3M06mSWfhS1&#xA;leSOi/EwRmagBCqFg8m+YJNQW0tvzk/0tpYZr0JuZlMSwCNa3JTnS1evD4qnkR9nFXq/5eaffWPl&#xA;e2ivPMH+J5GLSLq4oRIrdQrB5eQDA/tbdO2KskxV2KuxV2KoX+81Qg9LeEFR4mZiCfoEX4nFUVir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYn5k/KvyJ5k1j9Mazpi3Oo+ksAuOciMERZ&#xA;lA+Bl3pctv7L/KtFUquvyG/LG4u/rjabLHci4F4JYrq5Qi4SNYo5fhkpyjVfh8CSepxVfp/5EflZ&#xA;p2qWuqWGii2vLGaC4tJI55x6b2wpHxHqfZ7svRv2q4qmVh+VfkOyur27j0tJbnUIpbe5muHkncx3&#xA;NfrAVpGYp65dmlK05MSTucVSCz/IL8pklkWHRWiNs8UbEXVz+8ELi6j5/vPiAkkB368R2GKp5qP5&#xA;SeQNQkaa60pWuW9P/S1eRJwIbRrGNRKrB+KQSNRa05fF9rfFUrvPyC/LC8mjmuNNlkeGKSCLldXL&#xA;BUmt/qsmxkIq0Y3Pc74qo3H/ADj1+WDx6gYLCe2utRjeN7xLq4eSNmdpBJGJXkQMrsWHw0PeuKsx&#xA;8n+WLTyt5Y03y9ZzSXFtpkKwRTT8fUYLvVuAVa7+GKpxirsVdirsVQse2qz125QQ8ffi8vKny5Cv&#xA;zxVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULZf703/8AxnX/AJMR&#xA;YqisVdirTuiIzuwVFBLMTQADckk4qtMqNAZY2DoVLKymoIpXYjFUp/T8X8wwqui1tJJUjB3dgo+Z&#xA;NMCpvirsVULmF24SxUE8VSldgwP2kJ8Gp9Boe2KsV8+fm35I8i2NvdeZLxrZ7p2jgs0jaW4ZkAL/&#xA;AAJWgUMPiJ47ihNRirCI/wDnLr8mXkVWu72NSaF2tJKD3PHkfuGKvXtL1TT9V0221PTp0urC8jWa&#xA;2uIzVXjcVVh9GKorFXYq7FXYq7FXYq7FXYq7FXhfn7S7XV/zfvre/DXEFro9o1vCzvwRnml5EKCB&#xA;U0whUpuvJWgrXjZqP9k//NWFCUXXlTSVrxt6f7J/64qlF15esVrxiI/2b/1xV6d/zjQZY7fzVamR&#xA;2ggv4fSjdmYLzgBbjUmlcil7JPBLIQUuJIQOoQRkH580fFVP6lc/8t8//Awf9UsVeaaz+Ry31/qc&#xA;9vqEUMOrS3Eswe25yQmeOIepB8YjEnON+RZCpVyABvVVfrH5QeZG1S0uPLnmqXR7e10+HTWdkkuL&#xA;qRIQQjNMZkUFGpIFRVRiKOpXFUou/wAkPzFnt5o0/MO5t5L2aJ9RkhimBmjjiMMgLG4L8pV496Lx&#xA;+GgxV6xoGlzabpkNtcXLXdyI4hcTuSeUkcKRMQWLPRvTr8bM2+5OKpjirsVSnUrkG4IZuMELKvOl&#xA;QsgRpnYrvyKRKCm1OR702VSjzb5lbTPIvmG9t3aK+0yCSKr8mMdxJGrRfHIoSQj1kPw1Wvw9sVfK&#xA;X+P/ADn/ANXe4/4If0xVWs/zI862t3Bcrqs7NBIsgViCDxINCCCMVfaMM0c0KTRnlHIodGHdWFQc&#xA;VX4q7FXgn51+XtK1783NAsdTtY7u3Gh3cqxSjkvNbmMA/Pc4QrB9V/K3yjFX09Ht1+SYUPbf+ced&#xA;vya8tjssU4A67LdSgD7silnE+qUgkNrBLNchW9CKSKeJHenwq0hjbgCdi1DTFXl9n+fs13baVJD5&#xA;cae41Wa0hi063uxNeAXdidRWQW6whzGLenxkBeVasEHMqoqb/nIryXZarqOl6nFNDfWF3NaelAUu&#xA;OQiqEdnUrGpk4NWjMI/92MmKoew/5yW8k3mpJpMVtcSak1wIWSJoWhWNr4WSSmZnRdy6vSnQ7VFG&#xA;KqJ1P/nJD8utO/SH1hb9hprFZ2ituYKrIImcFWoAsjorB+LAulRviqI8y/nromh2Gn6m+lX0+m6j&#xA;NdwR3CoKg2MyxzOUXmeAUyOK0JCHbpiq7yb+c0XmPXrrTJdJbToLW5ks2vZpiUM8MKzSKKxIvwh1&#xA;B+Ou+43FVWf/AKW0r/ltg/5Gp/XFVeG4gnTnBIsqVpyRgwr4VGKvGvMrAfnTqoPfRrL/AJPTYQqL&#xA;mhV198KEnvLPrtiqR3ln12xVln/OOycLjzkvhf2//UOMiUvZcVdiqRWfnvydeW7XEGsW3pKWFZJB&#xA;ESEk9Isok4lk9Q8Qy1UnoTirrXz15Pug7QavbPHFB9Zmm9QCOOPkF/eSGiRsC4BRiGFemKomTzX5&#xA;Xi5errFinBBI/K5hFEPGjGrfZ/eLv7jxxVAWn5jeR7vVJtLh1i3+v273UU0Llo+L2DpHcgs4Vf3b&#xA;TKOu+9K8WoqiYfO/k2e6ktIdcsJLmJo45IluYiQ8pZUT7X2mMbDj12xVRt/zB8kXOrxaPba5ZT6l&#xA;OKw28UyOW2DABlJWrBqqK1O9OhxVPTDEXLlFLHqaCuwI/USMVecf85Dah9U/LO7hBob64t7cfQ/r&#xA;EfdFir5PxV2Kvtn8u9QOoeRNAuyavJYW4kJru6RhHO/+UpxVkOKuxV8y/wDOTnmjXvLv5n+U7nQl&#xA;gfULywlso1uVLR/v7lAK0K0+IDfFUp/MTzF5m0bQNXv9N1rT9XvfLd1DY+YrY6dcWyRy3AAU28rT&#xA;MJQr1U1APfDavaP+ccpGk/JbyxI32nhnY06VN1KcCvSMVWCCBX5rGocAAMFFaCoAr7VOKrTaWp5V&#xA;hjPPly+Eb86c67ftU38cVd9UteXL0Y+X83EV6g+HiAcVba1tmVlaJCr15qVBB5GpqO9aYquMURFC&#xA;ikb7ED9rr99cVcscamqqASSSQB1PU4quxV2Kvkv83vPMep/mFeXmlKIhYr9RjvYZJopJVjPxcmid&#xA;OS8+XHbpirFP8ZeYf+W25/6S7v8A6rYqtbzdrrfau7g/O6u/+q2KqbeZdWb7U8x+dzdf9VsVew/8&#xA;40+bLNNS1Py/NFHDcX/+mQz1kaSaRBSRXaRnJPHdfkcVe/T2dncEGeCOUrspdFYge1Riq2PTdOjc&#xA;SR2sKOu6ssagg+xAxVhEH5FflnFrs+u/o2SXVbohri5murmQyMJkmBblIakNEv0dcVXaf+R35b6d&#xA;p17p9np8sVvqEvr3FLq45+oHjkDK/PktGhTp4Yqp235B/lTa6paanbaIsV1YuklsVmn4q0dwtzH8&#xA;BfiQkkY4jpx+H7O2Krrv8ivy0u7+51CfTpTeXdxdXc0y3VwhMl7IslxQLIAFdk6U6VHTFULbf847&#xA;/lLbWs1pBpDpa3LiS4hW6uQslPU+FqSA8aTEEV3FK9BiqY6X+S/5eaZfQX9rp8gu7Z45Y5XuJ3Pr&#xA;RzCcStyc8nLgVJ6gU6Yqy46VpbEk2cBJ3JMaVJ+7FUp86afYXmhizurWK5t2kQCCWNXQcQSDxYEb&#xA;UxV4rpfljy/qd3eXs2nWyQpK8UFvHDGiqiMVFQq7k0qTkkI+Hyn5btdWtkGmWklveVjaOSCN+LBS&#xA;ysvJdulMVe2aDHDFo1lDBGsUMMKxxxIAqqqDiAFGwApkUtW3mHQLq6W0ttTtJ7twSlvHPG8hAUMS&#xA;EVixopB+WKtJ5j8vPFHMmp2jRTRpNFIJ4+LxyOI0dTy3VnPEHuduuKsD/Ob8l/Ln5kNpRvNTk0fW&#xA;rJpF0+7h4MzqaO6emxUvx4chxYcd8VYl5k/JXUPNiReVNe/NE3pgdJrnS47WziupWRBSScRyerI4&#xA;jpRpAfHFXsvlTyzpnlfy5p/l/S1ZbDTYVgg5nk5A3LMQBVmYljt1xVNcVdirsVdirsVdirsVdiqW&#xA;eZ4dVn8u6lDpNP0nLbSpZ8m9MeoyEL8ZDcfnTbFXy4fyJ/NE7ny6K/8AbTtf+aMVd/yoj80P+pdH&#xA;/cTtf+aMVd/yoj80P+pdH/cTtf8AmjFXf8qI/ND/AKl0f9xO1/5oxVMfLf5O/mzpOv6fqVtoa201&#xA;rOkiztqNsyqAd+SqnIrTqB1GKvqXFUL9Suf+W+f/AIGD/qlirvqVz/y3z/8AAwf9UsVWRrcQ6hFE&#xA;1zJNHJDKxWQRijI0YBBREP7ZxVG4q7FXYq7FXYqhNRsvraInZTXFWD/8qxvrbVLq506+SO0unMrW&#xA;siFuLsavxYEbE79MNqjNN/L+7i1Rb++u0n9FSLaGNSiqzAhmJJNTxNBjasxsrf6vbrD2WtPpNcCv&#xA;IIfy0/LTyrrg0xNentfMl7bTjQmvmDJbTXMc0frxhFhjeXeUxrI9acguw2VU77yd+Sfm3U7DUbfz&#xA;METy/YWNhAlrdQR2xtbSeT0Ks6FZFMxAqrU5Kv0qoWf8uvyw01tMS889XrG8M1vaSPc20sMkls0t&#xA;1L6rCF0VI1mZWVmVCDxapK4qq+d/JH5QvdX97qXmu6sb7VfrDT3Vrcq/FbWK1jnUpHHJEhQW6g1U&#xA;MTIVqaqoVV/IX5YeR77VZNSsPNGo6zPpswjntpJXMISG6EttHJHcKzN6cdusDsD8RRujchirNfzA&#xA;/LuLzXLZXMdwlpeWCTLFK8Rk5eoFoj8XjPpniQ4BqVJoR1xVjc/5I3f6G1OG01oWuqancWs4kWFj&#xA;ZWotFpGILX1Pj4saj13kFAB2BCqFuvyd/Mm5W3Mn5hTtcWpE1vM9vI/pTgSKWRTcAESLJ8XKrLuE&#xA;KrRQqqaJ+Vn5gweX7q1fz/dT6nd3MTz6q0cvqAW0c1s6KnrcRQmOQEU5slJOSscVRui/lh+YVn5m&#xA;t9Q1H8wb7UtHi9My6W0fo+p6LsUBeNx1Xj6n855V2oAqlFz/AM4+ancXl5JL5tuZLK5eYQ2UkfJI&#xA;YpQ0SqtX4kpBHbqCV6ox/bIxV6N5X8rXOh6OumjU5pkjuLuWJxHClI7i6lnjQjg28aShKigNK0HT&#xA;FU2+pXP/AC3z/wDAwf8AVLFXfUrn/lvn/wCBg/6pYqiUUqiqWLkAAsaVPuaADFUB5hvb6w0HUb2w&#xA;gW5vba2lmtrduZV5EQsqkRq7mpH7Kk4q878mfmb5+1jzlaaPqnleax0m5tFnbUHtrmHg7QtJ8Zfm&#xA;i0ZeHGvVhv8AzKvVMVdirsVdirsVQsn/AB1bf/jBP/xOHFUi/MbzH5h8veXDqOgaU2sX4mjj+qIk&#xA;kh9Nq834xAv8NO2KpFo3nbz1d/o631LR4tMvNU1iS2tFkV+X6NtUeW4mkjLEoxEXBGY7l1PCnVVK&#xA;NP8Azn85S3K29z5C1QCa64Q3CQXCottLWSCRw8W7CIfGKij/AA7YqhbD88fOotrZ778v9VmlksUn&#xA;mNrbzIguVSdpkX1VLUrCoVSOQ+Ld/hLKo+8/NrzpFpN7fDyfdQywXCwwWrRXU0jpJpk10j8VhSo+&#xA;uRLBUfzb8TSqqTp+fvmzUr7VE8v+T57+ws5IbS3ukE0o+s/WWjnM5ijfgqwgPxHxDr8SsMVTPQPz&#xA;01K81DQNK1XyneaRqOuyNFCb0vbxn0h+9ZQ8Zb7XRd9iN64qh7P88PNrwJZP5I1C41zgzzrDHKkC&#xA;CQyrauUKvP6cslvIvJlGy8qCoGKoq0/O3zNNFbufy/1cmSd4JWVJgAI4ll9VQ0Ctwep48gp6VpXZ&#xA;VmXmv8t/KXmk3MurWYe8ubVbH68tPXigSUzUhZg3pkuallFengMVeFT+ZPyWvrWa8v8Ayve29+fr&#xA;bJC13MjFJit9c0KOH4PEysnpo3wtx+HFUys/MP5Kap5Y1jTdK8vXk7eWJ0mGm287q5kkuo9Pja3n&#xA;SQ/Gwt4zQbeBINcVQuneavyr8zz6J5Wj8sT2+kWd5HDpqreXEMUR1YuUmWJFHN1cjiN+AbcqA1FX&#xA;unk/yF5W8n281t5ftDaQT8eUZkklAVCzBV9Rm4rzkdqD9pie+KsgxV2KuxVC6Z/vM/8AxnuP+T74&#xA;qisVdirsVdirzDXfKH5vT+crq90vzHHD5ad+UOnyPKJQDECRyUEAeszdP2QMVSpdB/5yU+uJcya3&#xA;pbmG1mgjVSUjaSaaF1eSMW5QvGImHKn2DxUBizFVNtO0v8+hfxjWNT0q60sfWI7iK15208kfoOsD&#xA;iX0nMbtMyk8acabeGKqWi+TfzksYr++uPM8Vzqy2RhsbabnJaTXYmMnrSghViR1HELHHVQ1OR4jF&#xA;Usk8o/8AORUsk9zL5msvrZT1LeGEtHaLcwiP0+UZhZzHLRldeVOppU7KpnrWkfn+3mK/fQ9W0u10&#xA;G6lZreO45TTwp6sS1QtCVBMCOwXdQzGtdjirL/I0PnuKx1Aecp7We8bUJ2002Yoq2BC+iknwR/GD&#xA;y8dqb1xVkmKuxVCyf8dW3/4wT/8AE4cVRWKuxVLfMk2sw6BfyaJALjWPRddOiYqEM7DjGXLEDgrE&#xA;M3sDirzb/Ev59odNE3lyIpAzjUvRMDPP9XtPiIYzhVWe5JMfFQ1AAeO+Ku/xZ+f8MUT/AOEba5ae&#xA;BJZozNEGguHpWEUmQOin4a1qK8qkLQqrdV80fn9pus6jFp/k+01Gxkv4DaencxenHavbJ63GZjav&#xA;IxnDsS8QKGo+NSpCq2381fn7fapYWt35QttOsvrelNdanHNDK6wyNE2oosbytxAT1V57kDYAswZV&#xA;Xr9BUtTc7E96D/bxV2KuxVT+rW/IN6SchsDxFQKAfwxVyW1uhJSJFJpUhQOhqPuOKuW1tlYMsSKw&#xA;PIMFANePGvz47fLFVTFXYq7FXYqhdM/3mf8A4z3H/J98VRWKuxV2KuxV2KuxV2KuxV2KuxV2KvOP&#xA;zI1783NI1qGXyXoX6fsTaL6trI9vBEsxmIZzI7iWRvToAi8APtVfoqqVP5i/P9tfNkfLtumkz3Eb&#xA;jUo3grDCJIeUYR5XLVT1OTMO/wANKYqv1bzb+fMR1Gaw8k2VwbYyDTjJcorvGsqoyUEp5c1ZZFb4&#xA;KhGBUHjVVHa5qn50NbW7WGnRQXFwLsSJAkEwt/RuU9BpPWnj9Qy2yuV4sAWIB49cVVfys1L827vV&#xA;NWTzvYfVNOSO2Olu5ti5fhSWpt6VLH4mqvwnYU6Yq9GxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxVDaejpbuGUqTNOaEU2aZyD9IOKonFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULJ/x1bf8A4wT/&#xA;APE4cVRWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5F59/5yg/LfyX5kuPL19FqF/f2lBd&#xA;mwhheON2Ab0y000NWAIrxBA6VriqB8sf85cfldr+vWWjJb6nYTX8qwQ3N5DAsAkkIVFdop5mXkxp&#xA;XjTxxV7XirsVdirsVdirsVdirsVdirsVdirsVdiqHkjc6jBIB8CwzKzdgWaIgf8ACnFURirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVfO0vlzS9R8x+cri4s4J5hrlwvqSRo7UEMNBUgnvhCsJ8&#xA;7eXNPsYbOeC0ihddRsAHSNVO93GOoGJQ+v8AAl2KuxV2KuxV2KuxV2KuxV2KuxV2KtSSJHG0jnii&#xA;AszHsBuTirHT590UH7FwR4+mP+asVSf81PMWpWvky2udDvGs5dTvbO1F5GqmVIriQBynMEK9Nqkb&#xA;fPFXms935wiNR5o1YgdjNH/CPDSFTzpdea9J1yeysfM+riCJIiDJPG7EyRLIakRL/NTGkpr+Svmz&#xA;zVeecr/RdV1SfUrNtPN5F9a4s8ckcyR/Cyqpoyybg+GJV7ZgV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;vkxfMXmWX8+fOHlq21A2WiwXF5qt76Nqt3dMsECF0gQglnbiABirH/zJ13Wl1PyYsd5LNofmdrS+&#xA;jtb+1jtr2FortQVk9OilSygqwFCMVfaeKuxV2KuxV2KuxV2KuxV2KuxV2KuxVC6r/wAcu8/4wSf8&#xA;QOKsWN3pz2aSCZeCqAzb0Bp0r0wqkvnmKGbyN5bjlfhE+r6eGcb0HrHelRXAqFm0LQHcB9UYAncf&#xA;VyP+GL0H05JC7zpoflq91ZruXWRZyTxxl4HgklK8ECCpj6bL0OBUv/LTStJsPzOf9H6gNQEuizmR&#xA;xG8PAi7govF/i+nEpey4FdirsVdirsVdirsVdirsVdirsVcSAKnYDqcVeX+ZP+cefJ2s+dW86W2o&#xA;6roOvyENLcaTcRwhpAvAyESRTUZl2ahAPcdcVQ8X/ONvk6Tzfaea9a1jWvMOqWTpJCNUuYZYuUR5&#xA;R1WOCE8UbcLyp4jFXrGKuxV2KuxV2KuxV2KuxV2KuxV2KuxVTuYBPbSwE8RKjISOoDCmKsSTyprc&#xA;enNYq9sy8XjWUySj4HYMSYwhUttscVSX82bePSvIujrNIBBY6rppuLhvhRVEwBdj+ytT3xVIzrGi&#xA;SDj9ftiT0/ep/XJIUfMeoaPJqEsgvrcq9OJEsZBooHj7Yq1+U0lvN+Z901tIk6R6K6yvGwdVZ7qI&#xA;qGK1AJCmnywFL27ArsVdirsVdirsVdirsVdirsVSTzr5cm8yeWL3RYb59Nlu/TC30Q5SRenKklVF&#xA;V3+Cg3xV5JoeheTdL03U7GXzlbTtFqdovmhbhms4Y7fT7hz6EEMhct6lxH6LyFzVQyhvg44qhz5M&#xA;t7m81HzNpH5qRWSarJfXmm+oQi2gvLpHm4h542+BFjjIYCh7CtMVTnR7N7LzzqH1/wDMqG5ms41S&#xA;+02dGtwI5TcXMJ9UzqkrRxT/AGRUItKjZDirEJPLVv5WdLTy3+aBstQsoaXdu8MrxXN3aWZnq7p6&#xA;qC3WvOULG3EN8RMh5Mq9T/LPyzr1rw1i8853PmjTLlJWsVmRogFl9IIXHLdo/SdaMg3Y7A4q9BxV&#xA;2KuxV2KuxVZO7xwSSIvN0VmVB1JAqBt44q8i0T81/wAyJrC61XWfK36PsLTSjfTpJFNDKt27TpBb&#xA;p6rAymUwx/CqfD6nxMKDkqjtf/Mz8wNC1a50g+UZ9Xkg0xLmPVLSOdbWS8W0mnmj2SaoMkIRFVq1&#xA;YA9cVWw/nT5geQrJ5C1iNUvYLJm4O1fXklT1o6RfEkawksTTcqO9cVQUX51+dhqjLL5C1F9NkjU2&#xA;3ow3Pq8ykDkSNJDGo+KZ4123cblVq2Kphqn5l+fZvKFpr2jeVprW7e4niudJv7e4ln9KKxe9SRBF&#xA;6LDmY/R3X7bAfNVPvy887695ikvrPWdAutIutPS3Y3MsbxW9wbhC5EIkHKsdKNud8VZddWtrd28l&#xA;tdQpcW8o4ywyqHRlPZlYEEYqw/X/ACr5RsRAlj5U0iaeYsfjs7cAKgFf2B/NiqX6XoflubUYba+8&#xA;oaNHFMSoeOztyQ3EsOqnwxVnGl6HoukxvHpWn22nxykNIlrDHCGI2BYRha4qjcVdirsVdirsVdir&#xA;sVdirsVS3zL5gsPLuhXmt6gJDZ2MfqziFfUk41A+FB9o79MVYa35+flmFg9PUWma4M4jRIySRbo8&#xA;hYE0VgyoCOJNAyluINcVYj5jb8hJ9PtvMQt5LvTpb7VVub3TkIP1+7/e3L3ExKSl+R4whWO5VUBH&#xA;EYqlllB/zjzqk1sy6HqChrrT409RpxGJqD6vKwWcgiLnRmFf7w05AmirIbi4/Iy81aaTUUuLS+sJ&#xA;prSSOY3Sh5LO3S2lTjEzrJ6cVuFFepBK1NcVS3zDff8AOM2vajca/qGoLql/dRsaxT3jMyRB1EUa&#xA;ghU+KEsi1G6hhtTFWXeVvza/Ki20ZbPT9SNrp2nQBo3uBI3JBbLeSnmfUdnjST97y3D1HUHFWV+V&#xA;vO3lzzQt0dGuTcGykaG6HBgEdXZOPKnAn4K0BqBSoGKp7irsVdiryfVfMP5+RXWrx6f5etpLR2uJ&#xA;tLuGeFpUg9SO3t4RGJowZuPqXLcyVpRK12CqpD5l/PL17Bf8MxGNLme1v3mkgAa3iSNo7oBJQQ8p&#xA;DoANhWpXbFVO/wDNH5+LaabfWnlS1eUrcC70714wztzX0jIrPSDigJThPJzNQypsQqpxedvz+L2w&#xA;l8j2wjkic3LrPGTHKtikqgKZxyrdFkp4CnKpqFVeXXfz4j06ws4tBt57ifShLeas0kKyQaiYnb02&#xA;txIEb44qHiePxrvs2KobTtQ/5yFu/L99Bc2VtZ6zI+mmyuj6CJH6gjW/RgPrIKRkOwbgx32rtRVH&#xA;f4q/PKLVIbaTypay2RlZZruKRKLGJGWNgGuQSZAort8APP4vsYqlVl51/wCci7v04rvyPb6estvK&#xA;ZLiK4hkaOZY5vTADzkfE6x/stsT4jFVax/MP83Z7+50XUvLH1DUP0MLqG4t4Jp4k1G6uFggi9QM8&#xA;JSASc5fiOyk7CtFWd+YJns5tIR+d3KweDkeIZ3IQcjSiip3NMVQMF2ja7p0QQESOzpKjBlIVXVht&#xA;vUHFWZYq7FXYq7FXYq7FXYq7FXYq7FVK7s7W8t3truFJ7d6c4pFDKaEEVB22IriqQN+Wv5fNz5eX&#xA;NOPqOsj1tYt3UEK32eoDnFV8f5d+Q47KOwTy9py2MUsk8doLaL0VllULI4j48asAK7dh4Yq3bfl7&#xA;5FtpI5bfQLCKSKSCeN0t4wwltQVgkqB9qMMeLdcVWt+XXkZtTTUm0S0N3GrqjekvEGSnN+FOPNgA&#xA;C1K02rTFUOPyp/LMMGHlbSuSksp+qQ7EsXNPh/mYnFURL+XHkGUqZPLunEr64X/RohT60CJ6UXb1&#xA;Ax5YqjdE8qeWdCeZ9F0q001rgKJ/qkKQhxHXgCECii8jTFU1xV2KuxV2KuxVjvn3RfMWteXjp+ga&#xA;kdIv5Li3LXwMgZIFlVpuPptGxJQHbmtelcVYDZ+Wv+cgH1azvrjzBb+jbTwo9tKI0SSG2kubeV5I&#xA;4IyrfW4Winpy+FzQceK0VTGLS/zvbTLxdT1C1nMunzotvZukdwLv14zGYZhFbBS1v6q1JWjcfdsV&#xA;SOD8uvzzWzufV82c7pIlWypdThS8kollL/B+wtUXkGr24D4cVZp+Wuj+edMbUo/M1w88L+gbBZLk&#xA;3hSnqeoolcI7fCYwSyj4q9ftFVm+KuxVA6ro1nqYh9curwNzikjbiyn8fDFVG38u2UV/HfNJLPcR&#xA;ArGZWBC8q1oFC+JxVNMVdirsVdirsVdir//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999787</stDim:w>
            <stDim:h>209.999929</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Calibri</stFnt:fontName>
                  <stFnt:fontFamily>Calibri</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Calibri.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Calibri-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Calibri</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Calibri Bold.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">SemanticConnections</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811973FD6F1E56CDCE6</stEvt:instanceID>
                  <stEvt:when>2009-11-16T18:08:18+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118DBBE7EE22D9C5C3</stEvt:instanceID>
                  <stEvt:when>2010-04-12T11:57:31+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b3fce127-9d5f-9f49-95ae-3499ef55a555</stRef:instanceID>
            <stRef:documentID>xmp.did:F77F117407206811973FD6F1E56CDCE6</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:F77F117407206811973FD6F1E56CDCE6</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>xmp.did:F77F117407206811973FD6F1E56CDCE6</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:01801174072068118DBBE7EE22D9C5C3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:01801174072068118DBBE7EE22D9C5C3</xmpMM:DocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -557.611 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 557.611 li
822.303 557.611 li
822.303 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: Calibri-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Calibri-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /g415 putdup 47 /slash putdup 66 /B putdup 73 /I putdup 75 /K putdup 77 /M putdup 80 /P putdup 83 /S putdup 84 /T putdup 97 /a putdup 99 /c putdup 101 /e putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 121 /y putdup 202 /space putdef/FontBBox {-493 -194 1239 952} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings23 dict dup begin/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F119478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D19042FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28AEC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF43A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FFE381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF19D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EAE508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF1599689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB398CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787220FBA75DA1E45C945> |-/g415 <1C60D8A8C9B7F2A7F3C11AF4241E1279326AB1F41F6C2B9FD290E688D5EB5738ED5633D6EF9F66B835BA65537C83BE93CFD36D45A0F30F682697E2DE7837BEFAFEE66DC2929847539ED16AD9332494258163CBA409675A129CA9F3F81BE070D1296B4A88E24186D2813B19DF3B25CFDC9E6BCB99BED09D79D567A8A30FEBF73E3C989CB9B2CB8783EDAE7449685D770CF2005FAAC8E58219E4137413FD7842F9EF6494F0EDAC1DE05DFDDAC60C9B8C93D9E364E8713F17949D3536C3DA55725CA2FA7A21CA029B8CE2382BFF5442B2EAF17E6D606FE0153B4946195D46996D7A5725E3E81BAD0C90D23A67C6A0B07C1B0E5E56273C445761D42EB22B6D8DFAF58654E91E736A2ED239FB1AE96C3320F6A016EB934FFDC1C8FF63B06CC42406884D6603A31FD1536050C489E2484A0DEEA82E0D286D94D837284C2016DDBE7DCEC610A45662AB1AB9AD7E2186CDACC11AED266B7D00C0055082B63FBFF2923AE5C7E1153DECBD16F3A186311197DA52C75A6C5800F6B640B4E4C5D272ED222923116C09D636AC471445625B5086259876F1A79BC73D8D9E> |-/slash <1C60D8A8C9B76D61A1F2AB94A632CA6825D8F24716738462E05984A8E34251C24346CB1E07A54B8E590EED139871F52788626392359BC1ED972A4FF1A448BE428DE057C6009F48E6CAC1C81A01079D8FA91251F9FD3E2FEF5119F2EA1B647EA86385928A0B8D60CCC59AAC67ED8244C5E0E4365F3837CB1C2E7B688A9AD75871A2739035> |-/B <1C60D8A8C9B7EA3AB4AA72EA6C9D5822C36DC52B7506387C94A1506AC7A86F6C6E817505B93D6B1F29709160B4EF452103E7352B5CED61024312789493DAB3A1688AC39E6903EA4A00E3E139036273229653E5808447AFAAD391AEFC3F4C70E766347D8579A41765D38DA51DA0EF2D7BEB0451F92CB8E33AE964134753DEAE0E5BB106164A8A9354B1BB848EFABCAD33366AABBC777436C5EB334C583856A66F083B29A6362E3B41B25F7CC2F26283599EC14ED7CF660C2F0227F5936084018183304E87A47F24A572F1381D6556499F96458CF482730D853BA67111A38AC37D07C18A1AD81581AD700702DCBA687C421A9364E42F7A22415A5F2501C0767C28D0EDE5CB57305E2F8EECCFDB4F291D92B72F0299EC24C0738625586CCDA8E7BC7264AAD589C6D6C0DFC1333B66982AB1A07865F01153DF85CB0BF3> |-/I <1C60D8A8C9B861542AC637EE43C146C31BD9761A5744ABD275647292EE36CB498857E20832A31E32228C922B76ED9EB9B45B679D97EE58115E0910D7A6783C9D74B3C47A3C0DF89E3EE60E2849D5516E05FF3C845F308543415BCC2234298E4DCADDBC225A62EEFA2E410319810E3AE2C3346BA419C601347FC59380E9460C65AF6A> |-/K <1C60D8A8C9B79815F8E797B303BFCF535AF2EB4975308D6803E79621F21AAD704FD064C72866E1FB7F604B917E5063FA8A30FCD9F17374D2E195C1C2E49F58AD1B276B6695BD3F7D3FE4E33B47128D91F89264497228BFE22AC59F0E39D0FEC92823FC801B2007BC2CD5257B40918133F20F63DF6BF9501D5D57EE79A8CFBB5EF40CF29A8C9A1207C8EC9F03D4B39A9BC98194BFE29FF1752A9A646DBB19071D8191B8322D42853B579627FB60FEE1F71ACF22E7E2053A22AD62A0C978C09991290B0E312DC6671F71A799A85250B78892E2BC84D2B3AE0ED9D4B5EB4A032C84B28D996D2A85871289D23285E98612E025164E9C77066BD89908BBA4E0886DF5419C758B9B62C1EFF8C43FA36CCE48BF98CCB4DC5026E5632121E52C4C22587B> |-/M <1C60D8A8C9B69F2EDC57251C098CD494497F9B27194FB941BAEBBFCF67DA468CE7126865CFA25F226DFD40C157E80D1E6900C376BA8BC9DC47B3111C3A2CD936AC8EC362BD24ED74F642515609D1C548907C5A1CDCADA83FAA2E203936CD43067EFBE431C5F6A9F1C54FA865F37B94E12BAE34D11E926760BF310C17B2CE06E3D9CA51D2CDAE57290F2C0E51E689DD3CF7F162E13246FD68DE31ADED7654844D6F16DD1C60B43CBAAE0BADB905E9902A259EA8BD8FB7086C09F8F0B477B0A845988A188A5E96A72E7AD3EE7686FB5FCB80E70073858768D75997C754CB9C9D55A01464323F19DDCED74648DEA355AF857FC34746DE585A82906FDE1212C19591617D74A65399EEA7419B90CC120A94EF1CB8C35CC45B7CB54CC43612522AC61EB82DBCB150F072182572BD2E99E351C000C5A8C1DDE6C3EA6FE78C06CD77A518> |-/P <1C60D8A8C9B7876E7B6051918B0CB59DE076B64C8C49A5DA02FCDF071BDFFAD7C92735E6137051509AC8CB684E8479BF8D6E587DBA864F50A4E9968B900101533A81B7315E5635E910F633B3C8F74196CCCC1B0507109F1B1BB9A29E7D812E4438818B1C7D155075E4CD25D535EFA79BAE24E64D32CD5F9BC09B4F74C278A3C1BD035A40B815B3035706B0AD5FD304DCB7953E153A1AFAA729815057B9B918248D356F4E0C23746C525E6E30C1CDD3880B36A24277890D67A7BAA12BFDE85E896F0F4E0CFD215BEC86CD1A1AAEDF5027F5D656DD8EEF175D17890242268FCE601EE1354322C31F441CD975> |-/S <1C60D8A8C9B742B2428B22C58173B85783D75A797DBCB372A0CB326482474FAB61F063E0140601EC7FF01420397E5BDA67D4F9EDAE8E10230A79EC92A8830D2282FCE48C14D6255C2ED38A9227193C8E6C63D4DDC56C1677AD4EE7A081BF7E8A0FF7039F31DB9E38AA3D9C2EB519583088084AA15E2BB9360A4E499CAC66644008970F6456622973EBC19ABE9CB7A2E2E1E436FF7CFF17A456DD4F34C9425E8B0FD7DE46D10D79C35ECAF346DB73750038187DFDA7C08FA4F48F7113F63AFD0A79F7B60ED56D2ECBD0518AE5F6486AECEBC538DAAA88840DE9FD61A7C5CE810708E5D83B5B7C944D9C1E933328832CB2C1C15FF59A769DC54012A003CD2D939547D59BB8CA0EDD6EE29AE032391BAF39F38DA1EDFC771E0FCA4EC6DCF952E839737B2539E516D209F792B48305C6FAB4D747AEC9E9C287FF4145435610A8CE0D829239E17AD471B7D50F49EAEE2D4789B01FCDAE85BE94E4A248F072817ADE20C93B792AF7C1262529AB3872BFC67D038B73B9815822C383A38940639918361A4A73948EE1A93B0DB78FD9D96349705DBB9BAADC27C924FF385CADAA15DB528408E800871EF0C31C6F3F452B977A4424498006B5AFF12D057DDA48B3582FED5A4C> |-/T <1C60D8A8C9B7AC352685EBF0C70CC299C781505881750549B1329E325E48906D6144E4F2B8FADCE07AE09672A94B6042B3746FEC4270EC99DA196999FD36B24CF260547D3D85E1C92CEF863DA0F5138E37E3009356FCB5DEC98DF934326713DE1955741FD457C6A79D71D77EECD67D7BFD3D3EB12C39414487AF3B4E96135DE9D2C5920A006C6765D689980A7C77873CD78C6B4E821034B8E7EED35F6A2E87E34A17C1BBFC596185D90F9C080897916508E299FCE09F3295EF2CE5720E2B2D1B9374706152A4> |-/a <1C60D8A8C9B7AD0A34D5A33DA54D708C09070E3263DB3F8B204742934F45464C864E5219DC64C17C21334728C70A28136E97F8B50DED54E9169E494DCFFBE08054CD1ABEDFE9442047B18ABC511F07776D5525C7536F54A7020A4D06660444EA4587557797F3D30E946423D7B549AB2AE4911FA9B4137E2A2722357A506A6A05F91A214894E28FEC6B492CDF90F6872AAE0C40180F5DD11FF249C62B7437E3A71BA232F3D2872FD555E1C9AC4E7F4B48457EB6186F604DC3EE6103F0F881A966A4A53DB93C1C7AD28044A61CF0FCE7D40BA68015641BB746FB7DDE0D2F135B3E72C27DE147EB6127162600CEE2FE996BF71B8B39FDE57DFC392DDA09C4BF60254D74CA373499967C5100501D06A31B9AF30F8F868E5E3B054E309214BEED4F999B3B55712B0FD812D6575581ED3C4A080C3FC359594852C6FA23B784C4DB4B1AC424E90B4505E356F1C575F8C57FE52642AA261D219ED5B82760638581CA02> |-/c <1C60D8A8C9B719BD263F1C66E176AB1A9B9A5A3A8367D7DDD55624575D8330769E89EDE2B210CAC0C33466D934E07EE8C5D0A40F156D15CC57AF923B250573D6A3F9259B0A3431793F366C2A4E1951E4FEDD7CFAEAA854A72A9831B3A18934A1E3BA67B1825DD68D168A926FEDC2EA7260DFA821668535829AE8FBDD797481380CC39C4AF2C6ECADB05FF3DA8E4A111EB4A3E3B59FFB126A3A37C4B5A113868987F4611BA41E12178776F476582469050F58D9C2434F2F75015CEE522ED8E12899B67502531E8AB98B42F667383D35B65B55576BE7A1323FDACE70DEAB60FF6C739F5C1FBD6BC404A862F611E798DE5F7D20626F50E2F0A84DB6262D7AA298F592743052BB8FB5A0340AD9FF86B3B347A6731F17F7E35046670F71F40967A7BFAB9BA0179B380201FC6F3EA37CFED86A9E1255880201A87ECC18F17716BB9085A306CE> |-/e <1C60D8A8C9B7A4C86C545A4AC8A7D7F6C345E834CA1213E882E926387794826A205EEEE689D37E8FC5A261291E47A8EB37515D6AFF3E8D4C2927EEA10BDEE7B9C51B7C7E29EC21F969487478C80B6DD492C8CB06797735DBFAA0767835E16CF60557FF99669574049AC02AF815FE3A71EC95AE08115F25C3E55D5B1FD10CA1E741534F0E60416081D7FA16D9DFEF57FF91FD82FC7BA4FB9689D718D9A71DED1EF9DCA51AF0BBC79B40093EF91CBC3D8C48A3FDFEA41B5047A65EAFDD5AF1021F9C948AAB35D583226126C585E079DEB6D479075845CECA8ED7ED10944C11C924501DD381B71E2F7690C30AF54ADDDF92DD4099EA219A54E3CF84E276FA7871C8A6ED23473DBBAA6EDA7BEF929816C1760D14417F454980C243ACB7FEEE422DBAD62FF97870FD2250B1790169B64F76> |-/i <1C60D8A8C9B874A685BEE7073E3D9BEB2350BB486AC62AB5FFB3F3055796FFA7201F6E4CDF32059564C619C9CC449E2E13D3438C6F3A00A8C33DF67EED72B4A703E19615397FBD65B8F41AB93A2D076C7948B4D6A7E1920548D052C7AB1831CD8F1E6F01CDE398A3464141E18D2DB8A524CC3BE1885811A2FA4464E9BFA44F3B137A209AC07BC2D4DC8265BE2C3CDB96FC76B4E494C7989F89FD865B563D37857FCA1A5FB165B3A362BB87A93EC69254C2AAA91985E82347B6547083A306CE> |-/l <1C60D8A8C9B874A685BEE6A5E28F9948AE1E7D147199A7FD5C3385C67EA3BE0E4BDDEEBED94EEAEFFC708E6FBFBB110A4FD3B0B2C6A50B9DF51D26DA8F79E50A98C439853420902774615E5C4AA802BC14286E49C6715A4394D046A1685B7F2557950D872EDAE985E8B69D5B3A1679FE91E5F44DD94A755B4DC7CB2094A762633492> |-/n <1C60D8A8C9B78256DD09855002C1F642102EC28B82F48E21B28CD8D1161804F5A9A747AD2624D941564B1DAE90411653B58E89369C53390A39373C180E921901CFF6CB5B97D1E2F6881105A39AF049AF7BAB6A1217A5C2B8A9279563CA1276FC02BACD1EEE8432C4000AF8AC8B81C2B3B82F6968BF9741308293C4341FD8C1BF06F82527B4BB1BFEB05C7AAE16687F72280798047F2DE0F0B0C1A73D4FFEFAEDFA40DAB27F9393250746B607E6DD1B8488942E5E65DC28EF4BF61000038A490B102DA889E711AC446FA2AE5AF546DC759185DC2C75747BB2C76E9F900921B79B64F414F07BA72B97757066640FBFE321B86C7EC04E0E0AD1B078011E479036E3D4D1746C4387436B0F75E38AB678D2BFE9BAAAF021F8> |-/o <1C60D8A8C9B78181CF98F408291F4DD5CDCB6D065079E3C32B2DC7574F85010122317EAC4CB787C5DCCAEA2DCDF59718E98AB798D0A7C1D0A4AFDAF2898702DB340B4925E43E83E5146EC936D266F11A185F61F58114BA94B80C81D7D8DCD3FC28BA75D8A38DA3AC10DA8DE7F6935CAB2D98F05D04B7C0D79A2CEACAB661A11B789E89B6D4B148DC1A7CB3550A2956556AF6D6068A328964C77CAC19F98775B69DBB8B2282422672CD9527E49182094C282B5043D56AD150402E5BC1D0FBCC13812FC82AC63ACFCEEF5D77A3A595F46555D44C6632B4645C234C6CF48BE68F54878A59D4C863675CD2B4AF968FD7298C1FD09F77D9> |-/r <1C60D8A8C9B8096E3702EF2E87B058AE842B207DEF574BB847CCD95112A7D3AF2292BD58741562B9BCC6292F597F1D5EBCE0E807704FFEEE94A1C26C1217A6936D01C623E2C5895684B5E303EB80975424515B84C7D69EC348651F11929DBDB8CCFDA7B6F9C1B9009E28D94026AB5BD0038F56495AC64C32BF2B47869240B887B12AEF109BCAC343F49ECBE16F183F080759D157DB3263D01310CAAE2C54DDFFEC62D46A41ECF6143B8F31D2939D6A574F5434EA593BC099DA68B97E5EC7884FCC239BC4456DDBC4F814CD1EB45CF26D8A7ABC526080AD2183CF51F786640C20279AD04AC16902E6B89034C7C376D1FE7A7CD7A590466C8F02B429577E182F4F0EAD1CF88B5E7E78E67C50CD4796431188A92962F05200A8DB3D5ACE7A4B4F41560DE12E28A90ED4FC728B93C15758> |-/s <1C60D8A8C9B70C3961F94CC53AE3C44F5C46AC95D939CE1FE52948C4EEE785E0FF2F5DF6799D25AA3A56FE93A6DDD98DB4188430DEDDFD51DDDD0EC4FB2D10B9991F4B7C4CB67E794966F2D33D75FB1F2DDE6EFD4602642CFD9DACD32FA36EDA8C51397D987B567B7680BA36338AB94FBCABA34B92422BB4A6BB2CBE6206F57AA0A2A8A2C374FA199F756B8C6892CB5299CACCD25A505726792E9EDF44792CB8DB652BC2C1E7DA21138C5E5015116A1741E17007ED6C22C23344D4AB68621949E14CE8A88829C82C8B15CED1FB4CCBFE9D40DE0799FB0EF64F8A219CA309825B69AD031354812E61F884D22EE3AACEE031A6653B1519602284061900E2F827432CCC337FB59A551E141C30CC55CE4632D5C31E3FC4C5BA252294FEB6FD8075BB079C3F24431E8D5C774D59E09AC7C64BB8C53AB6E9F8C7BB53DE483CF4234705F7D8C8DAE52A381BB24528B826C29FDDB8CF4F5222BFD57751475957198351D7133DAADA661E1D1810802FDA79930F2C9526AA05D8290ED2102740497D7344C308314BA0C891CD0738B84DA16A83588E2CD4B55EB551DFD1259DA456FC9912D108BF1E0B750B68510C7DC36D8861FED79A1710E9E95C8C80B37227AD97F0B3CDDD> |-/t <1C60D8A8C9B811DA5D4543EFE763FE07FB96B6C57E1041B720B12395755AD170E1C95BCAF4A2E07F08B3527B85FB4B749D3F56190F68B968E525451C3AE3228733358D3B0A4C671159FB2D66F4623773F95AB53B6E5F82C4D1162EF1F1D4E57FDA1EEF70327DBE4F94D4CA953DA49B009A6CE451FDF5FD819F6892B657B7073F3DB90026C98348CDA83213F5FE3803287637443B9875961ADEC93A662F367D30B1D64FEC94C3B7D13A776301EC9C6F446E01C4556C7599D35348744BB4C07BEDF72B7B19A9909847F0BA47C222B2E533F87C4B7AA516B5A1E0E7365242B5879EFE81A74993AD272F8F9838C2A26DF98C12A45718CB59AC62E5107E8E34F27910F2367476C7C04E0E4233AFE86333074EFF0032ECDB6435F19DBFBCDB19D0579CF4055335373B7C3C1BD559B22725F49EA0166722B1401585> |-/u <1C60D8A8C9B78256DD14A9D4CFBED1BDC0F18C95C4082E386E4202EC316A773D8A30F080ADEC91D0110972258C98F99D057AA4BEADF7377C0737CBC02B0283A44BC0695ADE1B267F48E12CE2216B2E9CE1F46FA8F6A7E394206FAB10EC5A9623D4E38E3233F4B79961F3FC497A2341DE4C19EF987B2BBD60C6954F7C2A66BFAC441FC6EF5D70CAE4B9D18C6C234C845D9B5C1128E01D7EED3EBACBCEAA81555CE1104ABBEE3361A0DA732C15BFA88A8DC8AC2892954D8120CDA8D9F901B38677E84A025079FEBC3F90CA210E453321C393CC904D5039FFAB58A79ABCF1EF3103597A64D9EFE158B9CA965B63D2279CEC94C047DCAAE96F0583EF883AECBA4354D2178D47E9266659EB4ED782FE0D3BB7E0DF2E8F26E4> |-/y <1C60D8A8C9B741FC3342012EA60F1002BDD0438156B641629D59554CF7CB9EAD9463221AEC8B8F5B253729623B7A2EF0D3CFCE8A0130ACFED15CC8931C576C134F7B0DC6BA69FCC1D3B142D638D30211D94FC190C6BA94FCE9E281D4266EF1E1305A6F90C18351A8F4A9A33B5818F8EC054C92678D4BE0D61C5CE294403BEE15CA5325E2AAAD3AEB808F7725DFC94D606CACC435FD59BA7C1EA17757FE45E337025587E49E7B457DFA96B9D8F7AF852A0E6D6A474CF9C7627B8F6CD7158A8A50DC613ABA1515C2> |-/space <1C60D8A8C9B888C146> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZIUTOU+Calibri-Bold /Calibri-Bold findfont ct_VMDictPut/ZIUTOU+Calibri-Bold*1 [32{/.notdef}rp /g415 14{/.notdef}rp /slash 18{/.notdef}rp /B 6{/.notdef}rp /I /.notdef /K /.notdef /M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 80{/.notdef}rp /space 53{/.notdef}rp]ZIUTOU+Calibri-Bold nfZIUTOU+Calibri-Bold*1 [17.5298 0 0 -17.5298 0 0 ]msf407.115 304.717 mo(SIB)sh%ADOBeginSubsetFont: Calibri Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Calibri def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 47 /slash putdup 48 /zero putdup 53 /five putdup 54 /six putdup 56 /eight putdup 57 /nine putdup 65 /A putdup 68 /D putdup 70 /F putdup 73 /I putdup 74 /J putdup 77 /M putdup 78 /N putdup 80 /P putdup 82 /R putdup 83 /S putdup 87 /W putdup 88 /X putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 107 /k putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putdup 121 /y putdup 202 /space putdef/FontBBox {-476 -194 1214 952} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings42 dict dup begin/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C692334252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11AF573B17CF9F38> |-/parenleft <1C60D8A8C9B83D5FF27DA8D8E6046A27BA23CC1486AB72A59E47AACC8161CC74CDD95CC2A654D5856D60A8DC5F8C184EC1ABC4D1D2160575FE6D70949B41A6CABCFACD73360CFC5DA53716AD56E7BCBA30E5CBADDBCE536F92B4EFC10AF93D5AA400F7912003F9E093421F683C28EAAC53C2248A1C92A4ADDC6F6F189A13C295B6CA124F9A4CA4E40FBBF41FDD3287A0301EBE9D805D7A4030F818C18B05D8592B2DBF59F7F26BA45EDE7B24A816E6CC3105B053A64C91913E22DD3F66D2B695F53F3F722E2F8096827FF689C16601C625CCC1> |-/parenright <1C60D8A8C9B83D5FF29F44B652980D05B9EE187D926BB2CE034E7CDFB42233F20EA0B6A7D3053EB0C035C6C189F4DA6B49B40A0EB0636B7ACA2CF42792FC2164693E9F6F7B6636D9708884EE48CE23B1AFB94FA912772ABED4AB22E20E0410244F282681ABF0BF3F1FF921D275AD5C6D7F8F439D5D0B2BAD1CBD8078F961EB6B7FB4BFFE77692BCE19880B8A84987A61F63B3F03252C231FCBB5CB61DBA6789BB581DA0ED1802F2C6AAE0EF2092080B688E21E45FC07A90B21EAB8701889CC58EAA06C962B> |-/hyphen <1C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55CE7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |-/slash <1C60D8A8C9B73970ECFF33C8794ADF6ECA4BDE6CBC6F362931A7393A58A31FB8AFCC53F9909901D043FE92B77A70C3A11DA61506A241F8FB5ABEC56EEC96004310454C4533A7D23DA2B357D0B71077117E4A27404E742BFD16308FA239825DD88391066370CF83F2F1DD1F460836DE7726CE9298647FF0566CA387CE1764DD6DB86A4798> |-/zero <1C60D8A8C9B7A0860A0ABA2698AC8E090156BBF2C9C30ADDAE7DCB3D97848CC5D38A5C6D85B8937F2533AAB8D6BFA0DD62B7BCE11E4F148006AA53F16B7661785227AEDEF098A1104625EF68DF52BAE87BC71C0E793E6FAD1A965E4D38BA9CF4CEDAADD0504EE4CE20EF80FE3B0F494717869AEF9FD48C1A316DF08ADA9E5D4CE0C25CB68B43C1EB2B9FE55F89B0B22C758BDED5FDD580CE702C559F6E1F276FBE929DD9A2C3557CE4E2CABBF3EDF814307556BE2579995A57ECC922B3376DB39CC4DC2518F12025BDC7A3EE507BE357864FDBF8F62FBD571913B865713255C738D4AEB39D8820C2AC5F5D7DF55CB64B7CD192349742D481F16CF80095A893636D91177B06233710432F07D42A84BDDC> |-/five <1C60D8A8C9B7A0860A2FEF2204D5F6595F7308551A6818CDF94E88E3B51B4BFE590C6C493EDCD8FEAF219DF0A81427DD4448B9AA3D521907C381F007F90EAA6BC6813C5ECBAAF3D43E8D7ECD68BE462C6609F3ACF35A15EAD8FA724A39F8FF3985AE57C3EE7F2468EE63E1FB60462E54FAAE1AC468FACAB638834339178434A5708D879091BB754334B9583D4A5B182F7341B7C5532CBD4850F827BD47C22464ADF744DC69CDD73CE1B847A119D178326C1D936B2671B4F66DB4C82ABBF0998D204C6B2C54A8D1373452768F53CE9B8820F53D8324A8C20B1220EC9CC36BAB88FC34DC3CEFE67B448F164F98C88B484017D4F4837C386AA9084C555745CF40FCBA2F2E48A2601177A6F7710FB1E609D9618B1B59141D82B990F422233CFE27E6C13ACAEB970E79830DB3E2D7CCF772EC4469F50BF2745AF6F98962532A3064E83D5AB1B0D7166D20C01E1963E937E8AD71B78DC8903FAA6A9997FA20C8> |-/six <1C60D8A8C9B7A0860A364A1C4BD4224B64164DA02FBCB4B7345339E2A852FD73E42DE7B33A3E7CFB23D9B5B8828A7C7D03CC2719F783D654783B633B73A159EC40ED3395FD8B11AAD632B5F29C41331F1B36125BA7D1997B676C8B10E4336915C40AB6B715EB23A1290DE9BC0FC782B3F347C05ADDB685745560E028E6D97D9B35BCB3F2E559B2DC5C5BA08FC08878230072154C5ED21DC85222CEE603D2207BBABB8920C302B640B67339B888C31AFFCD44289945C30BE18E4BB99D4A64979385EA488C3253806E2D6260691D0C13654DD70C80A76BBEC3A015B5ED353B26EFCFEEB6FE090864A2CDC657CC530BBBC6E4432DD73860472AE853F0A442CE33C314B6FB1A984BFFA8B424295E2E940122AF725F7E4DA2F35898F6EE04DBFD7E3B4D0DE9D4BE8784F49E3C23BC8B8AF125653EE8B0C9AAC11F53D23578DB44B0D0AE9BFCADB8B50F9B84D1369F9276D7D311EED812EA2436CC31922AF348437A5A953DC50D5D5FA6A0F3539C2875F47124A85A390502719CA13B7915270792BEC2AFCFF9F604488CC0865FE1B7A6F72DFBD2EEA384F569C8F80EFA751CBA37C08B0FB2064FF9BEB6D7BCAD5976B48494092CB6C87915EF1610> |-/eight <1C60D8A8C9B7A0860A34D75BA8453DBFB814014C0C4728DA471D5EF3791FA4240EB1CC5BF59A5FA3487E2F0E763DAE46F0DA05A89110163D83524D7EA404AA647CFB8B0BF18B885098268812056B970352E34734EFB8EA99DA80F13C7EFBAAE9ADBB45CD604BFF3A39C9CC7A0A83927D7D5A4B2E75D06E370927DFBA451037A06D79A6A428CAC7E4423B70CA5D5D84E759135799161CA6E3C2209FA72A04B7CEE79D2AC2B53CAC28C9C6BE5E7D7175AE6E2CDBF62577563D698630ABA357964D6FFA816FE517BCC518B9BCEDB14F7DE18A518BCAEFF1096D5DA42B503A93BE53FF4096FBA3F5C24B50D0262930A71DE4A30874070C74699A09A6A24794006AC9B7A896C548D6B8A51F3AEA75D328845EEB09204FA41C0B74E70ABFB1182501534524562F70E09292D6FA1A2C8E6C1FD060E3FBD2AF40CE1DF48002A14BE258ED46D903FA50D027660F585DE036DCF220923D5C07205E776E7E63A9645C94249B49895A3F8BA08BA0FB2447F849C17ADA529360F3F87B59DDD9C8CE3F87CCDE20932F0C0C3CA7CC03F3A3737BDDA3DE2F37B11A6A44911E362A1E35F43EA93B84A7F7> |-/nine <1C60D8A8C9B7A0860A301EA0CDD1E6614C5B4820FB68F7520C96ACBDA5F5BAFFB43C2A40F5694CD0DF6C758BC4B27D6CA50AE28575E858E493E8EE95751B2967F5BE904EB042AA54C454E869DDE0E5ECB98D962A79A94218E6CC99EC94CA8492476CEFACC72947B34D71483EF4A3F9FBD6098F9E6D0F9802BC600368B96C45A928854D685E5F703C8552927ADDA55A7F6845FF94EAA937AABC9BBC958B4C081275431EC73E38483911A0885AD9592E2DC6E2A46F9C6114077BB266957E6E28F6602B8DDCA0BEF1FC2E85630EED478837B476664D493FE7C9C39460D3A452FBB2694BD1646270493EF025BCD287C17FAB57AADFEC6BBBB276DCBDEDD8429C79E3F0B7AE72D2AF69E31859788B91D84A6A02C4F5ACED217B45DF2B39CE36418F76E74AA7A90E0A131831180D8D1C02A132AF63FCFF40837B44B674B76E48FD0C7367BC67F41C69D179A9D8F36F3A84B3AE05F25F56032B04AB8A96049A1F3B6B46B1ACDC441EDFD8013BADDD572E9DB08526455C6B9FAA1650BE8922CF3F0574F6C4F7DFD3E1A3A0FBB1E99FF4319B> |-/A <1C60D8A8C9B7F88C2B6CB105045FB5B2B32CEE3D567021E87FFA3A108F22F0AD769D89AF310F9FA2A63D83B348F1CD4D9158D831C2637A040F2E3D2AD1E0C1265C252DE42DC685024335218B88110082607887337A49D14691BEEC919D91764E7A708708CD55D39F5C43F91BAAAD2C1BF631413626FEAC47C21B08151BEA5901545C7204664D0C76E7A812FB56764BAC701D80F5CBA63A3746A10BE794CCB8FEAE9714EDA1C180ECED7E77C8C4917875CE0D099349356F25861C18102A308F1467786491B4C86DDD6D90CF5B29B935592B1FC4BC1C> |-/D <1C60D8A8C9B7D4743405E233890E0A55534F43CA9133B29299791AB3DBBE2A168EA78A7CB17DB0B060289D007AE138DDD7A874C20C0D1520156DF13FACE49220AECA91409AE8B52232B88DA851C2DCC83FF3926F0A798122A50015C04B7E00C749CF9804781F643848BCD8EE92B57CB757A23284ECD5E56D8CA18327E98454C09854624F1CB0E6F9646D20C4617F03B71EB8405F3505A5816E6439DF15D91294CE077BD16B66305872E9E54213ED4B2F> |-/F <1C60D8A8C9B770DA42EB776051437272AB3109214F2F5AF299B91EDE1F768C5024668BC49B69066FA908CF8FE87EDFDF17A758EE488BEC994A194C62BD1C9426343C7C81CA3B3F963FDAD914A0EC9F4FE665084402A52314B863A06B82A12C3F91EE9C0F2B145AA7D2782C4C7297D5A7A4C8227440D2EB6A6858EEAF3E8D5172513D85C8059F336BE8B10563AA3DFEF476A6E0B2054B979D1F9B4679850776A59C7497BC538F93679A65B973B2A534700FFE8CC98CDC2940E7759A9043FA0F4AD602EBE420E53281F2FA075E541FDAF915055861D63FE68E0F45> |-/I <1C60D8A8C9B86ED904793239D5A87846341C6685DE5ABE7704D2C21702B19492F988F7BDB944EF3CF61808A6DB9D1F22BBD335BB859C853102ABDC306BF0344F58C180F59706796F6A9C1DD4450E8611E916B0A530128C4C5E0E96FFF301F980705D57CD45F3B705E62B3216F34902178F51AC490CA8AF3698463F806A35B46CD69D> |-/J <1C60D8A8C9B82D66F3B663D5F3A263026CE29E60D9171DE5EF9A6BD50833521897805975ABD20B7AB2AC8C2498D759E0F691C80B0632F8904BB591D0A6C84FBFE5250E673D4D8E904E24392D30EA658816085D56868000084A8A336B903D6DFBCB42BDF6F7A3273A5737A7DD0066008637C9E0AB52F25D60001917D947827A997A3F83E0FD6FF4F167B79F805A47E8C44D82534F07CC8A57B6C4CBF355A6D5E232AFB4F8249E480BFE5C211AE2EE7A5A4B991C9D4F1480A3E94AAFEDBB0467476348433FB4F92FFDD597D3D3574C6C6B6C250BB91F2B4EEFA965DDE2B423C2CEFDB0B395AA51C0E4E2E55E2D0572A6B283B1> |-/M <1C60D8A8C9B68A39A0A3DD2F1EDB806B8EBA2991979DEC8D258B1A02A1906FD2B1CA205517F0A68C4C6A5BF2AC6E6CDCF7977F45552A42319D772D0594959118289EBC1461685C8CF4E5DD263C4C1910B7D8FD4E5500044A8F06771B257FC21C3072148523EDBD4AE8CCE0BCF86532F61410F6C0201E2ADF6D872A8FDBBE97EA7C8789A51927AEAFFA42E03A39CC922DAB964B6BCFFA4430A330843D8297EBD008ACDDBEFAE9E40226AF265DABF6CE80E6C4FB13353BC50063552BC667360325D0B42F7528AA00A89119A771AE5A7A3F69D8025BCAB7EBC18E2CEFCB7A52A1D8652FE7D376D9B1F2CA62FEF82187CF27562517F2AA24976B64146E2D4DD287500E273B12ACFFC0C2B592A5CFA9E9511593BE31B739BECC693D9698B175F68FEC3CF86BC604ABD82815EBA74C3E98930057A86AF494D184AB704B672B8745> |-/N <1C60D8A8C9B67B16EC17A11C9303513193038382E210A42B5CE850AFC118B8F8E20755C8A90C95C89303B8AF97DF2083371B19301E0DB8111A384A8E035C8C8FD179B5FF5DEE9371CE5D28447AD71E5F20621DEE2C342616335A1AAB1669E519E232E79C4980DE37E3F1E4DCD25C4506A181A5E635190DDA595BDDE1573CB44863FF5A83BD7D7E515B71492920EF87FE789C8908736F38EB074EA06C50C8F913E2E6E48D5D36311F7C911CB6784E303E758C4B3B979518975255BBF01EB8B827E2459ECECE07A833BA1FB2794232A02C9AD337BE827A573B5E9CE89F5D6EBE26850BF2926DF1667989BD0A0C14BF6B80D7EA27888CC10DB4AF2B2A5C69A8F8245C9A4E02EC85AC1422B48B35F04B8FEAA16155CD67FB40B03E773C1C5BCA284053C42517C1397CDE066EE439C5025920AAC2AF0AA2792D9E710F7897AACDF305> |-/P <1C60D8A8C9B7B6440707B4051A5DBE562555C57029EE089BD9C0449CBA1CDE15C4825E58F476AE98F4F477E10D3D9627118D612BA7F36DE667A502083FA2B5A87FB2329B4599145D540EE26CB50F350F1C24FBA25930C404B0478F3C579C4E768F279D098F515881442D0DB18015E7A9640759CC77EC73BBCCD8C1932872FD5A8725311BE90CFB90EBC81A1F03816E32CEC0A4E1DB1A22099D4FCE02BD53A243FE7B67435108D6337E9414F0B3B9D88A863DF0DD8EDB216F3428E1C8EDADF4A32D7B4C28D91BCF9108C9794A650A0922E44EBCE859C2D94676859E04DBB6727B1AB10957F28903A4930A> |-/R <1C60D8A8C9B79C5FEE44F314FFC38CE4EF87FC1BC5BA498FDD47672E37A5F29CF58ECF31C007FDE4A3817F15E647D623C8D6D1F4A73D7B6832B4D42989C1A55BCD585ED57C222CC2F78A215F05F4E9A80BA1FCD1DB376BCE47D9921733E44EDE5BEAEC1D2153F2FA8A2E1C22E242D6C1A4BADF7B3C9D6692C8957849B7C757134864A498CBD963474EEA254A542992BCD7D23FC8C03B24B3B32CB8DE36B1F672A455AF821729B85730506FEACB3392B97578F79A301DEE39865FDBFD8731B3029E0DE4CAFE78BFA5CB852575D437DF1324ED582E9AF5A0234A2594A744CBD8A820BF84E58BCFA0173DA6F4633F9CBE6F24B1E9A9AA3FBA2EC97D071CB6D5A774FEB91C9639FD6744C0FCD372B9710A9F8B9537B94D2F3171FFE5B971995351C2AE63C69CA08EAE162057803FEFCA06736258DDA27C02FD926DA3B7BF59E5B7BF6347045A4700726CA8EDCBC532E0E356415CE7BCA89E1BE403BD462A4226BC0587B5B955AD2652D9A4B9A806727D8110> |-/S <1C60D8A8C9B770DA42E8D37F1E32882D4AD6464D850106A0DE7A83B47F0EC65143E84B8F9887D8EF560BBB7DAED9582F38B6974AE06071D74243DE04377A9E38C603D44A0AA623BF84EDE575A39EAD4593C4B3F424F5317061A5AEF0FCBD5198E5F9AB43FD8C228E541FA391BADB0ACDBD5FBBD08EBCA2700B6A1105DB45395D242F8C44AC433C3725A9D5F6A91B5DF820F4E2F6E66101242BAA426ABA584BF91A7E8CBD825612324F28F3BB6B5F4B6A98D5678C5683C423898401C97DB6AEBB3B08F0E49015B8C09294559F0324646775C30687BA8725A301A8E7ACA559E180CD1BA525300AD3D8DFA8A8C34309FA6E01CA0BA9F33D60D410C3785C9A35A4D33DC4DA697FAAF83556B3BAF038631153B21CFA05AC7F6B965B6C9DD580ECDAA5E19D631487362428CB6C15F8951776CB9C454AE2ECDA7CED1F00599F60578050870FD9F672ABB02F7641BFFDFC908D98DE75282B9085EDCE585EED996ACD325E186C6CC942676730FDB64EACBC2CC9670AC8631DB84FE5F13182767EAE21F9BC28BA89B244DFD720C9DF35E92F57747BB59E5AF5F4663BAF9B03DC716D74DBD0D4D1BB2703443369B43A50F5B2916833184106C2158995BEF98CEF08C3DF5A6182> |-/W <1C60D8A8C9B59C1010CD6DE510D8E88403DDDCE882F1AC7D165B8C14E05CD3E52F9320567E3515D0AEBAF4F8B245451AF9B039B3C0D154BF663C02801384FB41D3B0A978B89351A95F33C6B07F4E867FF418B4DA8644FB59D063C472223843674822014F7AFDDB012DC03C8B95191E00381FA3AEAE43A10A87EE59876999DCD54ADF7C28072901B72989402F130B22ACFF69FAA4EC941A59DEAE071310E6E07660CFB4C9D8C0A6C6CFB36AE30EE4A8215D9C95C1B1C50E4A19F5E49920B8469BBDC4C918E728AB0C706159DF9B41E918B58FDF609A022499AEF6D11660C9F78D19FF461D056CEDC8E040EA7A6AEC4E74E921FEF28CD7572CD683133F7595FBE79122E9ABACC3B6A2B81236A36A2781652DA4A3F0A36E7672763E65392339C7D4D8BA4D82CC4447ADD1F7AA7FB01EFF306694F7657082271F405466DE99F9C9065E9946587234E7DCDE6A1DC19FE9> |-/X <1C60D8A8C9B7B4A13FE37E4E4AE04CF732416FFB07F139E9B6EAA7B7A06C56BC443C8243C0872DFE8DE982665F349E067F9BCDF9A17BFCF97EA8B46B493395B6C89AC20C2ACC789E366FAD93C3071E155B72F03931241212B5C0D191B4032280EB645610365C15B95D2EFE06379A73B9B2931A2D760F2D77F1F0D4D5B2504E6CD2AAA4282B5F952495D15685BBA33CCBE04563FC243AF6735203379D1EDA256ED162ED6E48E34CE5D89848BEEA0CFD753E753082613C45B883A7DDA2623866FD3C8FEF001DB63359A63BFBC48DFD4D9E1D57F1A66ABB39147803190CC473A3DB82F8DE0E20AB3D37464C54B02D48B1DF503BD5E2EA36788457810607FF07A03016E8AA1841002139BBC107D275FB831B0A9C> |-/a <1C60D8A8C9B75CBB53379352952B97D633633CE49B1F5650B8155AFDFA57F94D359804093E4912F3B89577762AB5877203F1CDAD240C521DE74183EDA10501967DB6487C182138B12C453C5DB9629F7EF021028117511EFEAB941896E32D9CC68D6E66540771999A4E30C4826A52D7536EDDF7E00016C895CE43408B44BE33E2D9A6163827E05AB8B1144BC909A74F6D7828DE6E08164A25E320920E354020A41D59E9E3B008A20EC107F9E18745DE21F9AF293EB0F319B529D840D8BA9319522EDDCACA13336C059581181C082BF0D7F4117FAEB429D871E099AEE4394FED2FB3A1C712D1799055BA832AD846B95DA8BB4E63B103C908FA309FAA3B78140CE2A22AE06B2A1EA5BD3AA13DD1ED75DA4AD37493780FE662EF5D1B53C4AF41845C0C77655CE94F0C9DEBE29248A1EAAF3A6EA79D5BB5C090457B818DD62F70E197CEA94F90229AB4FD685A1ADB5E4E4C1DBDB28AA3854323EE2FD22692EC70> |-/b <1C60D8A8C9B78E05EA9D9733F4614DDE4F3CCBD772458631C06B9585CEC3067196C085285D4EBCA830523DBA980A7903E7CCB9545952E933EA287D3095500A08B5FF1250FB2472C48AA643F9948B713834174A32233FFD00CE8E2A02CD92CD0EB36D86747ABA3C4EE4A7096B26460185FCF827CE5E1862348B87101A5C9D384541120A40C8C71F0748956E48EF5E095EAD17FBE5B28249366E6BEAFC298EE015C31B731D6166501448A2851B390CD5E1032DCB65F726222BA5085B034CFC917DC36E2C73558D1FCD108B1B305D16C97136B39697A594C46D2F068CC61EBC8B61EEBACA2E9B9971F359DB93A6910B3669C04870AE086A03B453BCE1E9F2C924C2B94631466A458EB1B3FD708C18C058A8B05845E2D231DD130E2BCA4DCE6CA2C90256ED106A2B8A867758EB2E1D464AB1AA657324F30AFED658994E772592420FD616D7BD6885B5350E3F2A59010B037CCEDD5B3D83A476690BED59BBD82DD2D74F> |-/c <1C60D8A8C9B714A578818061920CBD3BB0F0FEC7EB28869C0269DBFC02625554E339FA8F23FF202BF6BBA51F73386176CF41E41162B391BD65C46864E1EDBE38C4A175836382F89D1B282918F37F6A98A1C310371E84DC05CA4D214BBF40D0904F28663CAA2B1AF41B75D4680E3731D792C10C395648F8CE6283B6D2EA4EA25EB0077385CC26E37C0D4F9F091C8BC196661820383DC1CFC26D318A92B1398AE8D24532A475AF0A93A6DC660BFF9F07C9678F9C3412071B0DAC612FC7D6B5FAE3214E7C7AB18E3145411FCE0CA8B75D2C8C25C05252A375257E1693A2B9D11EE377C95BA1746CBCD896C9D8284A96EC1B8BEF12D6460B6828EC26350E91CC593B47372BD95FFBF8C2322BFC435A5494ED398AAAE3E6E4293369CDCFAC01478225F7C60BA6A2722907E6FF92F4B9457F52836FAB37F27C55593B43AB457EA291D6DE23> |-/d <1C60D8A8C9B78E05EAA3CECCCC7ABA6A35E55F211820F669BFFF2D107F3F003F84456D947B5557966A2009812B81B51372EB70EB729C8C82B63A473DB5161C83385AAD04B71C9D388B2F86E7C2E91E06E59E76C532F8A600B530589A218BCA1E889366120C885033631C7850C65A7F9274D24F9BF6FA89E174B53B0E1A2CF6D783F32D4C0BE4ACD3EEAF66A8BEC8DB7AC7ADBF3C9CDF5485D002662D310ACCD320AD0234A2F2251E7C0B1667BFFC7E10EE40C7CB623518E3E168137CE699E133B767C86E16CACCA64A58BD9D7F6E66BED6D6FE5D80E0381141549FFB2FBF94ECD2D262EB097909F9092B71E3573FC9B4FD273505C685B327AE9095A2A15545986A397AE2796BDB3888D16AF3DD82BF32621BC8C1393814540227FC926F77872F2FAF5DD33717EB461ACFE3EE5C279294EBB5AADC09C8B10C3F2CB25CCD97C6> |-/e <1C60D8A8C9B7A9C0DC897A849B356D31E2254DD2E5BDA9320580C3E0839C715C00D9D27B634D4BEEF0FE1F6AD3CCFBCCE9FDE38A84A563FB744619F62FCBF09ACBF7337FE050BE068BCA744FAC4471C4195B7CEC353B3CAECCCEC91AAE22E8955469041D97A8837F9398CE520ABB35C688EEF4229957FD92C79439BF99D24AD4D8B3CAC5B975D966AB01856E8FAEAE3BEB03E1CC76DF299391134BFB02DD61F6D73B2AAAA0D725ABCA9FE504FB3A1EC1E2449C5D921F0DE45A9278013CF0832F39E3771D2B318D27AFF5849066ED5A64AA8E3E404B520DE5F08BE74DD8D58BD1B0FA461EBCBB4DC632B680CFAE62B61DD4FC04FC017D59147CB2E0FBEAAFA402B5BFBD0C4F13F4BD9227D1353527A23B3EF7CA3E7F599CB51DDAF43A567478E4C81011D9D8D5DAD9CB1F948F5FCE67> |-/f <1C60D8A8C9B83BB8632FB1D3D91BD66E5512F6DD2CCB59074315803E2F430B096626F50C9126DF15B1D22935F28B97AB5D3B7DB8B1B8EC17F9868DFC8B9BA6A909CA8727D3C9D8FCF13C3B6D5F4F33EA07DFD158F20416D4C6EEC8FD3EF14FC86346A94355FA1C2B6FA55C0124FFA9705858D4628EE39DA0E3A156A386DF00613D8189EFFC0AEADC5BE3915D9C022BA6356303A46539775608C62B3D24CB372AF4E663162E7C4ACC81D2F2C5F206BB702A5D73C1A974C0BFD7875757B79AA73010AE51501D97B980E0F2ACE1EF1ED3F60A9C6E02B8D29057E3D98A68500306E46C9A2B914F56A55773A150BF63B33B5E351FC714462135973FE682DBCBC0C1B38B7A71A2F4C684D75344384C54C140B13A70313E2F4EDF68E127B4C55F26525A530E7BB82AEC944EFDC27B6BB93FA6C499E5069AA3B6387EF0576DB7B6BEE15BB0B269E8ACB562> |-/g <1C60D8A8C9B7445140600976780BBEB6A3D2658D3A4C7F919C88C52D412C8E364C5F7636792196FD221C121AC8A143979AFAA3A09359F0F2A21E651450F6F05ACC0E82C2760ECA4A653600DE52AE0D5358458AF930D6BDEB0904E4313A0CBCA78B5C6EE35CCCF928264F350C0A023EDD3B664C736748E408C524202A3326D95C7DCABC59764E7D97C53C3E04189FF055F0A0F707215CE9EBCE6A5429EBED17A701726A8DEDD69C85101530BFD06F1546D47732DA28D5440C29DB9FD392812122E25828F7402340CB2AAD1BBC054F22EBE3B4068E1189E1BBFDEDCE3380BE2A1BC64D61665F8EA89BD12E55203D2F412C82771F2C0ABF3E56A249110A5F4DFD7E943B7CBB3957D78564ABEBC14037C62116307C9CC2770007504568A496F0E371B5E27EA91CE4ED6B158CDD56E512A87B38DA763ADE44907E57CB7229D283C8A7D867519E31285088BE518A70B9193ED1297DE2FF3E929169124C3A44E72EDA1A3B2C0E0DA57F0E79BC1C7BEFED8509DD8CC00683DBCDE9C2A776B95D5831197913BF75A301F1EB13F5C4E48D99B31FDB0B54BB7B640060AFF7A1619C4EE7C3CA0DE734198387C7205D8F2F952A1BC7A9DB628AB7F298888007AA604549FA9EA5ECD6ED4A814A52FD636085B1A8D57F31E70472C30EB60858254A7B95E2F6778797B84C60B2ED0823FE7265B0CE1B1A64D8F159C443134DC16E39D207947A0FD5903276> |-/h <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4C30D8A20FB7C70B167834EB7C5767A7762DBDEADBE99BB9DD1507EDF7CB5B44CFB5AE7F50CE798A09AFFC2F8A1E21C8BA96A3248C2464366A8BF234A7465BA6B08C9AB7474ED94583744D778660448C601BC1D9C2E8788B65F173F45C272BBE3CD6AC55E870CEE94D478E3D51C8A2E608A02982A9D048914B7569407A83B9D3CDA9FE7ECB2AF4F7816F117CC85330A774976280DEB1A8C317A8A170186F61B3F5FC1D130A0DA1A6A5AE24C0FB08191CD76F47EDEDB0EAC8DE369D515B3B14661497F94A2412A37D63D31ABC4AE50DD37B3DDB58CFDBCD2A17246A6058BA85E12DAD2711083774A128264C809F70CFC31D164703798D4642E5D> |-/i <1C60D8A8C9B887F0644B8F9A77200B5B21E7A46843656F48CC872DF3AFB58D86B9B1B70DF0F8BF4F1A9D845350075385C2FAC40F64A57A633024956B42D2D155265D68692B1DD96FCB1CFEA6F03B67B191D75D9251636A71B366F484AC7DD61A648087A690F42FCD56728047D5F145B28180BC49A70304D616C17E08688BC2AB34D235D029750826D6A02D57888DCAF080A15DCB2D8AE91CB7938E088D7426B3BCAD6531F243F29763FBDE3F087E3965B6148DD52590D1BA20021D15293CFC> |-/k <1C60D8A8C9B7741C17C040FAF49715AF86267B27DBAE3194A95B5AD38B89D87080BE0BB58EB11BB1E803576225E95586AD26F7B3D48F1476D58A2A86ABCA434890634DF0C762F9C7E8BF973278771D68A2AB608CE3A494AF06CB6B758E3092B2656DD102F8A88BFE70D0C2C45E36E8C5A354AE77BB4C9BFE5EBC116B51C4E77B42DAC17192DF74E54FF0A0E8E65A4C44D1E8C03486D513E268A349A6666B8D2CDEA67E5546A4296B6217CED1A53C88AEB021F8A41388EB02CAFBBF0D008975299F905C6726B8AA428B45A937A574480AA1CF753F93A4428CB2EBA39311914898272650C4BA4DDD9656B5AC379C0EC3487701AF2D0DE9556D9F04967DEABC542665F11772DF361C1B5D5C1660B923FBE08FB5DD4C469DDCE72B7887844550CCFC42576B209CD2E7> |-/n <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4C30D8A20FB7C70B167834EB1FCB2A451DA55CBA774B9C40CA48F3B7AD8E41B3F0C2665E2AF85619561E070ABE3E4EFEC9983825210D2A0599E48D162F31337982CE0D843D2D41F1F7924A343E37439CC75937984C88A0080C28B8BFBFB8F444AFA11CBAA4BCF4C8D3087770F88F26B0A8B30E46AE29C6BF9720949C50E19D6248BB58DE961D63651843F9B3B8EE9AA75CDE28D1F95D7703116FE7AA23945B5808B97F9947888D114BE2523F872057145410E975A2CA83D430B49A7CAE26619012C2444BEBF6DC1397EFC38FADD0435CE6D4A1478744BC983827B31CF502C4487AF1E48BBC2EB6153C1C5367B96A212BCD3FEE3B9DEC12C4E> |-/o <1C60D8A8C9B78C66ECF3075BCC0F7D87F2E9EA9E473D66D53E6D1735C12EAC0562A2F6FB428E7F7051A3A7B2D4CA6ED90F77808579359B7E539B5388F6F54555E1422B5F329989100C1CD5239E87FECD85E14E914ADC27391A1F5624B31EE69A68B9016D73D6A01A100E004523AC53318A2FC2260E74BA80D4ABD1433EC67800CC9F77763DCF8156EA5CA478ABF1FAF7864EAD55939BE7FA4A9E8660CE98DDE8CBC35F3FFF4E5C2DA4A292CE30D82057E70A8562AFB17C90FC331A4C46B48C7BBCED55DB7F94D559D534C59FF211B5A85F0207876BD8D6B2C7BBBC06964A16F72BBAE841F001B71209E6C81DC64817ADE625E8FF> |-/p <1C60D8A8C9B78E05EA9D973060387C73D1F6FC5283CF49F42B90E35722532C0305E99FC2B2F5E8253F0317294CB5BA6F51657EA79E1841CF363B43BBE54B9E5F683986378119A60103220843BA6B4E1CF012F4407937B0EDEEE409EED971ED71424C1DE9F58B3C06F2342302220C155C0C840BFB4693FFF8A2CFEEF274FFE1F4AFBE9757FB2568EE33B9D585CBE0600A7110E1A53D85847EA919EFD9BF18F44D7EE9518AE64D9DFE7C7267D6429C8F5FD0EF0AF9ABA737132F4E330A330877D5AECA1F6DF97EC1ACF219E33EDD988EC9A670EC23A43243C991A099EEE9430EF67488C01ED11E3C4B1CEB11239FEDA600217AC3F2A3708004F1E2E90E296730C207690B19E7D8BB6E1920E2F46C4C2E0CC81AE0ED43696970A1FBC9D409BB55BDECDE83A356A07B210C4055759107919A9C98A0B1493E8E6816D87FE47A8C1A70E30E74BD97D6D39D9D984A0D52D9B81565B3C3A0B773497C465883E3095964CC84> |-/r <1C60D8A8C9B80F37F21112BA81A46E1A1A16E843530DEF66F6901DB9A722A358478F1B0799F6041BFFF7D05EE602307D474F1DB84BF73C4EC1FF13A4D2D5B370042C9A314A700782F944BCE36786AFBD72FA62259FABABA90F1F2BE008B7993D5E1813324C60BD953524A1040FB1A790007846FA5DED6ACE6C7D436FF1C0B97E4BBDDDA28F066E204B37F8321753E1473DDD8EE76C12A0011B04832F5C47D3FF30EE31FE70EF82623D628622FAE52A70984ACD43F9718BC02CE5AA3F5832FAB343FD6D53F2375C811D54E6B415E257D8BB3A2542930D7E0D6DF96FAA0688822B6655966904164F87FA904C272BFAD51FAFF11CA14EBB5F6472235CA20889D111211CF90F83807D99EF12B3B6827C1CA4720D03729BEEEA22A1313C4BDCE878453F5E6DCAD449D1F3B7D54D32C49DA0> |-/s <1C60D8A8C9B7347873EC11B675AA6F6B461106EA2C61A0AE571750A082679294B529694EFA74202690239BCD02BDE93B33BD8DE0F0F0056B04093EE6C4E83D6F00E22E61E0A53509E628E3614EF2EF2CA3A8502F22A560E46ED3E4AED0BFD271CCE464114B6332D17C4A046EF74FFF1283283A642C8C06B85A0D72357B5665CD862A8E3D30EFFEE242F88B9C12DF917A74252DB462B499704749747869638F8FD8E70AF4405F95B11DFD154B7101933A31068AA1E65CC021277CCB9EC0EAA7B978A081D1A4252A6693984AAF2CEC4413666DCF8B310A71A67C6E7B1DB954E186EA16C83551DD0516966C156876A3DE36ED7253FFBBC1504668DC98301370300A04E6753189718288CD7EF0ED409765A888272FDB25977C8A74BC113E188B3DF6A69F7851A7E60496291AA0B15532572787EAC7F32F09F1E72589E0E74E0349313472D872E64E7DB78BAB05598FE04B70E52D818F2F7B0B56A5688299352E62F16B011595A7D7701FD641BB2FCFCADB2E33263B8A208C4183E753AD5C25861BF542F2009EA70BB7A67B3BE61085D37469DCDCB97CB2B41A0E2B4DB3BE67C2BA9A1482E51611AB708AAB8BC978B06758006F3287DD3A3CABA09A9F59A21B0D386F88> |-/t <1C60D8A8C9B81D89610FFBFD2F87712D18AB3F2201A6640C86A2CD8B533C9E9613B748962BD3321D998A13FF4A410946A55D4AE3CDBD806BF0BBD38F8435DE762245288A30426FF012946D0E2E36D4EBD7E81C44D06926164FB6F91AA67EEAF9AC4BC77C470E117D4634F7F90C1771292F30769DD575DD5B3F0D104730DECDCF41E7D59747B6A2D0EF143B06FA6BBA4F9E744BD6E4827C627C66195714151061BE64BA6B45A36E91B80557E1CF613697CA2B60F02790B7CBE3BBB5ABEC190F88D2844D8139B7D141D834706D11BA3108576C531B823977B908AC9FF80DF322060C351BA43A8EA770319D1AF8085E209B940EDEE1B85419EF87F01EED1C4E0307B2BC95989AC0998A9EA8A0DFB99539E7D0B836F4EB9E9D6147AFB55082A1E63F64D57A8E7F63465BA308FA03AEB2787221627AF8F99523DB260C> |-/u <1C60D8A8C9B78E05EAA3CFED1A062DA00ACB6556B6D2C444D52FE211DC3688D13631F07F87D2F0851361DDE2CB13BAE303424A55D9BD107D56D22322818FC76F125ECA1DADD7E1E8164E2DF3A65B67CFAE338C319FC7D07BDCC1CF896B708E125021996E87E6805D1416B537CED172F9478027FB9FD1A978C49E725968E2F5FFC6B56799F9B1D16FFE2085471316923AC7BFBC4E3BBEBA71950AD60EAA4BEA84B8EB89079B6BEAD01C4E2BC5BF11F5FD2CB41D465D8AD649D765F2A952E22AC4EF1DF8297E4E5405180477A9E4F70BB10D787681535F61379438A6888E4F660E2B1CD68547F69ECDD808A3CD50B9FBBDA239A40EE62332FADD878CD5F875BAC27E0BDDA94455E030928A249A166F13D134EF255F5783> |-/w <1C60D8A8C9B63EE6FBAC6FE430D4C472A6935E9E4E2C9D9C4ACB16C71B032F18FE575C6256D49A59D28FA55A64B8F4250FF7EF0F6440082EA55E50C72515DB779850B563F18307F56C5AA0381D53908E3AA5F7BCF9144924A2084F07EBED39B22484214EF3445C58E2A31D32B14DA61C85069056233A7D69EDE7D6EAE9095E582A487ACDCAAEC9B696D9F56177DFCBED54097D97E802545B35B3AFF093952061133C2164E4C99E14CC43C1C5FB57627E18AF07CB58B73BD1200A30349006897A1314704F9560B7EE765A767050BD02ED4C3CB6891E5FA019219CAF9310B124D9AF8C5E5547F89705BF1E11BA18C8C6F80D46BFB4F08BBC66AE29B2E81702937C5AB98472DEAC74C8794C288DBFA220B7F896E2B36F9ECF06883A45930B940AFF017D9F3C209761AB734C6F3F199505CD5974FFC0917AC4E2B317FA15146D5F8C2D8B2A0366984D71D35A1EAF824F2AB69DDEEC3EC469FA5796A63F524D8EC40E97981C19E148BD51BA03455ACA08443ED8962BD3AB9091> |-/y <1C60D8A8C9B776A06C625D9575F6DBFFEE93EC1CB9A335325BD9E365428EEA1BD5B7A305D96437BF24D2E59BF0DFE2360EDCA01120D4DA769624265DE9866EA970971BD84B20E81D769B1F13D7A21674FB5E8C4844518680BB1DE710B7438090302965C932285C6A137B1923CFCED74D1C71B686BDF1263BE348B2F06F534EDA8A2856376F820F03A76FD878686946B3B179B9CD823AA55541A535E0CCC6D2D21B3D6A73597DDD43BBEFD829B55A26664F2F8221FA6814449CF6D0CFA13492A2A7CF82E9D18F6E0413> |-/space <1C60D8A8C9B888C146> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZIUTOV+Calibri /Calibri findfont ct_VMDictPut/ZIUTOV+Calibri*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /zero 4{/.notdef}rp /five /six /.notdef /eight /nine 7{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 2{/.notdef}rp /I /J 2{/.notdef}rp /M /N /.notdef /P /.notdef /R /S 3{/.notdef}rp /W /X 8{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /.notdef /w /.notdef /y 80{/.notdef}rp /space 53{/.notdef}rp]ZIUTOV+Calibri nfZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf338.485 325.753 mo(Wind)sh376.523 325.753 mo(ows\312XP\312with\312Jena)[9.17578 12.377 6.85596 3.96289 9.09912 9.05566 3.96289 12.5313 4.02344 5.87109 9.20996 3.96387 5.58887 8.72168 9.21094 0 ]xshZIUTOU+Calibri-Bold*1 [17.5298 0 0 -17.5298 0 0 ]msf147.946 500.861 mo(KP\312/\312Music\312Player)[9.58643 9.33008 3.96289 7.53271 3.96289 15.3213 9.40723 6.99268 4.30566 7.33545 3.96289 9.33008 4.30518 8.33691 8.10596 8.82471 0 ]xshZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf156.942 521.896 mo(Python\312for\312S)[9.15869 8.02002 5.87207 9.20996 9.24414 9.20996 3.96338 4.98145 9.24414 6.11133 3.96338 0 ]xsh243.975 521.896 mo(60)[8.88477 0 ]xsh122.555 542.932 mo(Nokia\312)[11.3154 9.24463 7.96875 4.02295 8.39697 0 ]xsh167.467 542.932 mo(5800\312)sh206.969 542.932 mo(Xpr)sh231.158 542.932 mo(essMusic)[8.72217 6.85645 6.85596 14.9878 9.20996 6.85596 4.02295 0 ]xshZIUTOU+Calibri-Bold*1 [17.5298 0 0 -17.5298 0 0 ]msf0 292.533 mo(KP\312/\312Music\312Player)[9.58643 9.33008 3.96289 7.53223 3.96338 15.3213 9.40674 6.99316 4.30566 7.33545 3.96289 9.33008 4.30518 8.33691 8.10596 8.82471 0 ]xshZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf9.99756 313.567 mo(Python\312for\312S)[9.15869 8.02002 5.87207 9.20996 9.24414 9.20996 3.96338 4.98145 9.24414 6.11133 3.96338 0 ]xsh97.0293 313.567 mo(60)[8.88477 0 ]xsh25.4956 334.603 mo(Nokia\312N)[11.3154 9.24463 7.96875 4.02295 8.39697 3.96289 0 ]xsh81.7231 334.603 mo(95)[8.88477 0 ]xshZIUTOU+Calibri-Bold*1 [17.5298 0 0 -17.5298 0 0 ]msf435.014 512.139 mo(KP\312/\312Interac on\312Tile)[9.58691 9.3291 3.96387 7.53223 3.96289 4.67383 9.24414 5.86328 8.82422 5.84668 8.65332 7.33594 10.2627 9.42383 9.40625 3.96387 8.67871 4.30566 4.30566 0 ]xshZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf387.711 533.177 mo(Arduino)[10.1426 5.87207 9.20996 9.20996 4.02344 9.20996 0 ]xsh444.623 533.177 mo(-)sh449.988 533.177 mo(based\312with\312Processing\312)[9.20996 8.39648 6.85645 8.72266 9.20996 3.96289 12.5313 4.02246 5.87207 9.20996 3.96289 9.05566 5.8291 9.24414 7.41309 8.72168 6.85645 6.85645 4.02246 9.20996 8.25195 0 ]xsh611.371 533.177 mo(/)sh454.25 554.212 mo(Python\312)[9.1582 8.02051 5.87207 9.20996 9.24414 9.20996 0 ]xsh508.926 554.212 mo(\()sh514.242 554.212 mo(RFID)[9.51855 8.05371 4.41699 0 ]xsh547.018 554.212 mo(\))sh127.849 227.744 mo
342.761 228.728 li
342.96 228.729 343.122 228.568 343.123 228.369 cv
343.124 228.171 342.963 228.009 342.764 228.008 cv
127.852 227.024 li
127.653 227.023 127.491 227.184 127.491 227.383 cv
127.49 227.581 127.65 227.743 127.849 227.744 cv
f
151.789 216.865 mo
301.588 216.865 li
301.588 237.9 li
151.789 237.9 li
151.789 216.865 li
cp
0 0 0 0 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginZIUTOV+Calibri dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B786996D057DD9ECF9C9FE8F34FA37C423F5980BE7D786896E9EA4586FE497E33F39AB964ACDD89D26E486E7ED8F0DC4FBA51D700DEE7B191A63C96E17E766A2327A1204635F41F9C49078958E183EEFB6984182E65EDA1F8B441B6E4AB84D91335816B7734083F4F4FD892A7BCA407D109F62E4EE67EE6C6C391D2BD510DDC6B5D5CC22D17AC103A7D2131E72C317F3BAC05393ECDC293B2ECAB1568ADB4263F35E5423335599179483E82F60A5AD75F98D7415F42E948543DCCF85D6B636864749244B612B22564859487973200635BA3DA904CEFECDBCC8B01666891D22D161E426CFA4178953236E0C0CC024ABFD25C62F85F4D9DE2FD93AA1C37E4CC144A605E56698682CB24FC97AD3BD836F4B14863B5FD90FDACDF515F988F6144041EE6DE72D3696AC15A7CD39C4F2A134E2CF9BC30D1C6766E73FC3D1AD93F0B1FE898AB1ACC306D4BD68327F6E0E6DF2C6B68065348695779B77D4> |-/T <1C60D8A8C9B7544E0B190CCF17AC40FC5FB79E17D90F4D9996E4640AEC720DEE3DD9AB43080A2A2747E4FEB9D27010F0C393805606540F888AB7849F19EB2260FBF5614F1BF356A0D83CA6E9E401826D12829CB1B7D4D1A2437297EAD434CA7A5112006DA550CD6F8ABF5CB7D09F31273FF39DA8643484195F09918F574C6BDB08CEC3EACB50E1F97A19618B6DB73370B0F21CA3B501ECD63174F03F4E7B6D0BF229F39E4FEFE132F59B547C9249B01AC066ABD268352D20498D98E847669D322216405EAED7> |-/v <1C60D8A8C9B77771B09AD302B4CB2C18543FBB2E7E6342969838CF2C334035065E921A40A75882974808107F0F5C3AC1CD7A10BA6075C83F1DE48B37CB4A8C976EF88D75006F44747CDCEE5069475B014DB29A6BE7A1F25A9ABA2642AE0B12F169B7C26C5BB2C6831FDDDADD15DE53220C2A354D3DB65E39662BC3F52DBE3E6F55BA2941DB48175EDD867619C5C4F72AF6BDE0336B64DD708A70A9B3043446299A2061A5B31F71BCE056DDAEEEA357563374E361165ED57E4A9861B82CE26F9B6BF6D6DD8B8E105752A19647DA81C937CF2BEAF032E992A09CE082764919EAB1094210448A121FEB79BB41C951E6B43D3384AE29644009EB9FEBB553A8B95EE31D86> |-systemdict /gcheck known {setglobal} if end {end} ifendZIUTOV+Calibri /Encoding getdup 67 /C putdup 84 /T putdup 118 /v putpop%ADOEndSubsetFont
/ZIUTOV+Calibri*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /zero 4{/.notdef}rp /five /six /.notdef /eight /nine 7{/.notdef}rp /A /.notdef /C /D /.notdef /F 2{/.notdef}rp /I /J 2{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 80{/.notdef}rp /space 53{/.notdef}rp]ZIUTOV+Calibri nfZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf151.785 232.643 mo(TCP\312Socket\312over\312WiFi)[8.18311 9.34668 9.05615 3.96289 8.0542 9.24463 7.4126 7.40381 8.62793 5.87158 3.96338 9.16699 7.74658 8.72168 6.11182 3.96289 15.5952 4.02295 8.05469 0 ]xsh209.794 382.177 mo
209.794 289.858 li
362.644 289.859 li
362.843 289.859 363.004 289.697 363.004 289.499 cv
363.004 289.3 362.843 289.139 362.644 289.139 cv
209.434 289.139 li
209.339 289.139 209.246 289.177 209.179 289.244 cv
209.112 289.311 209.074 289.404 209.074 289.499 cv
209.074 382.177 li
209.074 382.376 209.235 382.537 209.434 382.537 cv
209.632 382.537 209.794 382.376 209.794 382.177 cv
cp
f
140.746 278.979 mo
290.546 278.979 li
290.546 300.014 li
140.746 300.014 li
140.746 278.979 li
cp
0 0 0 0 cmyk
f
0 0 0 1 cmyk
ZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf140.747 294.759 mo(TCP\312Socket\312over\312WiFi)[8.18262 9.34717 9.05615 3.96289 8.05469 9.24414 7.4126 7.40381 8.62793 5.87158 3.96338 9.16699 7.74658 8.72217 6.11133 3.96289 15.5952 4.02295 8.05469 0 ]xsh581.23 406.087 mo
581.23 265.456 li
581.23 265.361 581.191 265.268 581.124 265.201 cv
581.057 265.134 580.964 265.096 580.87 265.096 cv
514.241 265.096 li
514.042 265.096 513.881 265.257 513.881 265.456 cv
513.881 265.654 514.042 265.816 514.241 265.816 cv
580.51 265.816 li
580.51 406.087 li
580.51 406.286 580.671 406.447 580.87 406.447 cv
581.068 406.447 581.23 406.286 581.23 406.087 cv
cp
f
508.182 338.171 mo
655.122 338.171 li
655.122 359.208 li
508.182 359.208 li
508.182 338.171 li
cp
0 0 0 0 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginZIUTOV+Calibri dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B79B8E992413FDCA75477B9D7B9A04CD6123BB6F56A9FDECC00D9728A7991DA2934283AC0CEE01FC1FAAD5EB3AB0B14B54FBF8D20FFC398F5961BF67E7A7D450EE96781B748894F7B28CFF64B6593527AFD517F2D837CA22127DD5B8B5DB428B5B30E96423884A9CB2092018BDE5D89DBC68D24BAE5CC3C4CA2C637AD8EB033D5467D7A9D9BAF78FE973C94976565C5D2795A0EC3A3D0ED4B239AE94024C38DD5873724B970E93378B9D3D02710DDE1A505B0750256D4041960A6F260BE121BC86BDB3FAD0FD5614281E7C400CB879F57DCE47C8620F9E041532988A66665B85DB89629C041308B88332F00521D970DDDCE6253C763E0D70216AA72D02079885B99C4A6EC9DBDE6F226727E35DA85B8B692471F60F36D72376FBB59FD143F405DF154BEFC61E6D3D4E9DA3C9684B5A0AF0E5428EF3B3A4> |-/U <1C60D8A8C9B677ECC2D761C908DB90C47A92800E8DA9F580AE95DF3036F3660C02232DCD6E66BA74E64BCFF08FC69541BD1ADF528637E7F048CA5FC0AB911EBFD42B9E8671A2AA23DE68C399177D223C5833F931D4B1D26350A985298765460954328F76A286CB6F3EB98D05D1D02FA99091438D6A70CDAD1BD0B7EAC0209E113AC49242A65FCE3FE16DD39B5FBB080521F00CF4EC25D97E8AB7617F9F8753D0683EC16C7483F3F827C65A33CB62EC6035151C9ED285A449D64D70D55E975B6FDE8BD5D93C1FC1CD7F52373AAB43F261624B7081D091DB595365DB519E652118E1DAAF0D73DA6FEC04B26239B5A2899D37EAA1FDE91EB5E7> |-/l <1C60D8A8C9B887F0644B8EDF7E394B2B17D648B60040EB6DBE2B8847CEEB752ACB6F5AD37E1FA4A050E94786AD18088ED8DC4464B0DE1BE6F00A802A61F4A34EAA84659717045B37042963C71284B8AC29AE9E0F8305F213AE4489E2DB55EC12AFE94E44F64596D135D1BEB997D5B9A0BB5A35AE0E0CE05B7B1F893729319FB81429> |-systemdict /gcheck known {setglobal} if end {end} ifendZIUTOV+Calibri /Encoding getdup 66 /B putdup 85 /U putdup 108 /l putpop%ADOEndSubsetFont
/ZIUTOV+Calibri*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /.notdef /slash /zero 4{/.notdef}rp /five /six /.notdef /eight /nine 7{/.notdef}rp /A /B /C /D /.notdef /F 2{/.notdef}rp /I /J 2{/.notdef}rp /M /N /.notdef /P /.notdef /R /S /T /U /.notdef /W /X 8{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 80{/.notdef}rp /space 53{/.notdef}rp]ZIUTOV+Calibri nfZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf523.44 354.142 mo(Serial\312over\312USB)[8.05469 8.72168 6.11133 4.02344 8.39648 4.02344 3.96289 9.16699 7.74609 8.72266 6.11133 3.96289 11.2471 8.05469 0 ]xsh721.68 231.079 mo
499.542 231.079 li
499.343 231.079 499.181 231.241 499.181 231.439 cv
499.181 231.638 499.343 231.799 499.542 231.799 cv
721.68 231.799 li
721.879 231.799 722.04 231.638 722.04 231.439 cv
722.04 231.241 721.879 231.079 721.68 231.079 cv
f
535.236 220.92 mo
695.229 220.92 li
695.229 241.956 li
535.236 241.956 li
535.236 220.92 li
cp
0 0 0 0 cmyk
f
0 0 0 1 cmyk
ZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf540.44 236.698 mo(Serial\312over\312Bluetooth)[8.05469 8.72168 6.11133 4.02344 8.39648 4.02344 3.96289 9.16699 7.74609 8.72266 6.11133 3.96289 9.53516 4.02344 9.20996 8.62793 5.7002 9.24414 9.24414 5.87207 0 ]xsh%ADOBeginSubsetFont: Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginZIUTOU+Calibri-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B7DDB68920BA932172B1499148A182E4E0E2EF78DBDBEEC6F52E0937C43799EEBB71FF689B6131266A457C81FF30F7FF7EBB30E51863467DCBD28FE4B4C2B7091BA20F48D775B52AE015A417726578FFFF7D58968E5C95765443C585F178FD6D4723D9DFE9FEC3370FED8ED508CCCBE152BC072DF4C5CBB9326B03E214DD8865FCCF7DE5BAAD07E33C38BE3B0335D636FC50CFF6E14700E2A660D3C165A16A200BC57B83572B62314C80450F3226D83F7916F54AF40AF7E0FCE1174C5501685FDA117D5A2044E5CEA0B3948A52353199CC> |-/L <1C60D8A8C9B714A578A8068F50E5B4EDB2372212B01CAB615DB07C103904450BB5A8997C47AEC5DB24EF14BA90F3927F72C67B88B43920C02E453732113C7AE410216CD5FC3658BB4C98F6B562D30FF248875FAB34B29D29E23CEEA2E8B3B0EA7C8373FDB3F234B4B4B3B9E0E79270793676089616B54592E9AC3C2CD0646989D88E0723A4348B40E2DC928EDC31D0F94BB479449D0B6C60> |-/b <1C60D8A8C9B78256DD05CEB67EA576F242E1E09B8FF4CD6597B4A1978F8C3D7D9591E9451F99CD2F9E32091F272E48DE0475CF46C2E1428CF2FC44BA68C6DA0A7F0AAD1BE72907652BFC67A722215241381BFDF1C093AD0820621CC2A001D2D212BC7964D67182088F33D8BF8BE98D1E65507504D6E130AA9E26FF69C7C493D47231E51CA2F9FDCDA375AF76DEB0CCA68196B78C825A90FC3D6D2F4199474D0C566ED67167704B8AB3BCD22DF7ED28527AEDEC2297FBA002E3EA0A9EC18FC33181FD469DD81655945433A7CF2159E4FE23B2BEBAF86BE1F9D52B75DB472557195EC5BF898BDC623C3860298D26571FEBA6B01C5DE0216055DE638AF812AC5812A48E568FF7B1C02A4ED2AB191E834B3238CC12E86813CFE332D7802256B66D9F1D7497F8256457B3AC9E9573A620866BE1DD16E9CF20D364033B706289CDD5EDD4B2509BB3DF182021EFE8E5932911769AEDECCDB234C821848DE9EE2711B5B8BA8E> |-/d <1C60D8A8C9B78256DD14A89B5C5761E51CC6D0784EB7F41BE6BDEA5F8255D1FE24990FE1D15D28EF8F0C7762E519633FBA92FD296338DBAB81155F27C91D1316EB09C02392CC558827E85C7882426438ED0C996E6AF5FBAE3E4865B83761EF22FDB1EFE24248D3B29570D3BD8C05EE4D4D69B81EDAFB096EDC81F156276853B908EFB15EC41828B5226E127DAF4B807D256A2E4F1FA53CE3C1E83FC9F599D0D693317C924E42F44A22D2B6AE0DB64F8C1AF35225ECB5B9AEAA2C23E515F95B653AF3AAC6CA0651281FD546D48B6A07C75CDB334548DE80447540B253826671E04C7BA03594D53214958E122B2F845054AC5F5E297C0C37736732726AA3C727298E5B49D9D588DF2AD7FFFA7F426D61B6C814687C386CB5C77EDDB4A48CD16C454E1C3DCC2832833F01D8523A139255C5F9D553BFD44D8DB07E9C0CCAE08F8D58> |-/g <1C60D8A8C9B741FC33483764299A12FECF5B424B921F1638B418D49AD8CC9963C63B3AA219A5D4BE1E61602E0A46D9B7EFE172316C6D5B892D6ADDE5D2528F58404262014692776607ED9FEF376902580B8C02BD731773D6FB7F2B7E8EB85C23FCC5E1AF9DFBBC90E2E61912ECD90630A69F23FF0B8C4EE724E61487824F0AD0E39D6070F4E4045884E75A2063D1947EBCB0E10D1BE681823C4CDB758BE763EF892DC6733924007429A4A2787F28FEA57B2FFB5ABDDFA7D9E9074D9F3756D6F34C0CF43B19360B382394D183AF45B0B3B98FC3F1D24257EBFF530F2F277B17FA1E0C87E667FD5F85997B524610195116A8FE72672B292B06D63E095A2E86A919F48751EA4D1B00566804965EA47D6EEDA872F76C4297F60EB4DB86C215A3ABBA39D53700A0373989904046CD6FF12E13667085134B6D432AC6DF8D6B8D4A1E48A3CB9A9B89F04E1FA7F186F4239393424E4D2D80048B3B74D449F9056EFDA684BFA5A5756929753C434B4ECBD6DA1C66BD87629F33C7FB19CC2BFD3906732A4B9F90C757E2A2AD993D4CCBB93191D5606033A5FB35BDD63214D3B0478ED8768EC2FD124C41DB78452CEBD65904535C9E7E425B9032F384103F708FC89C6168EB599D175B46EF0FF68E2E1C705DCAA4668D7FE56C29AE86E26C1109490736A57C4139D482B4A559434FC9EA8FE3D7CF06BDE7DB76036EF6D4AD6F172AEC1AB158F9> |-/h <1C60D8A8C9B78256DD098552A13EB08FA6FA0D6709438B3D102551767CA1A9E996A468589FBA293078984D3CE935CE0231F88F2DC01EAD3D4D7C30F367B4FF8590AB3DC282E07D2BBA78BF8F6BA1A9D28C699F2490709333B2A7C7AB58F9879C4857A63288F65938A4C40EF9DE33C4B5617CFAAAA9D228423A38CF0BAF30AE63C9A38E0A50BB8D2C76240754A3BB0D75EA5E0E60276B334DD25FF24277F3E187BAF4700B1AD1BCB29E368AE110915D56F0FC3F4CD7DD4385E5BCA564DCE492FAE459FD4A2AF8DF2CF0ED2C290B57C2260C120EFB0A6113A9C2037BAB7076D8E7A3A0B41FAD04D3C3848E3E5A113E98F22BCEA62166624A15F5EE45C801EAEAC69B6F067944425A7B9C87F60A063958733EC34ABF5DA43D> |-/m <1C60D8A8C9B6A0FC22F7FDE4D70269FAA3ABCE84D83E02588B58324048A29EDA3366025ED35011C3387E67BBE9855BC9117A7F78166278323249BA674DCEE9AE9196653285F341F22A75D7A524C07ADB322A3968B0FE8E6C4637BB81D36C67F8701364C2FC3DF17B599D67F1171C1AE68C5656E14227198F5B75BDCAA6CB9FD5CB83960FD443FF0E2A9347589D2B52A0B502D664A1FECF415B888C78C95332B5951EC5EFF92616EAE4ECA8B9D3B943C765E7EE8E2867E53EC3D42AA7F4F367795C4524B73E7FBC0DDC9EDE4B202217BC4D75DCBFB156273EF107894CBB2461A6FC49EDD928715F2DD04BBCA7A926AC7B68321CAEFE4FB87B0610008516F3EA45AC0B8E9A606F2C7B0F442EF2AC478DB2CCA5A9E3A06A53FFBF5FE74008C53ABA0EB809A9BDD336F369692EDD0748FD400455C74E743F57DE4D0ABD30AF90BB658997874F6FD991BF214F0044AF0FD83B05E8FBB85B5F594B2318479B4B46D9C72FE71135EC8E0CEF9B75ADDD8FA2549A36F4C5A3BA0E174F8F9933BCFE927331B75B263902852A8C7A8E55AF4AB72C3603BE325B0C76C762D28397C0100D336270F43AEAB0947E477C82A82BD10036213E1512830E77> |-systemdict /gcheck known {setglobal} if end {end} ifendZIUTOU+Calibri-Bold /Encoding getdup 65 /A putdup 76 /L putdup 98 /b putdup 100 /d putdup 103 /g putdup 104 /h putdup 109 /m putpop%ADOEndSubsetFont
/ZIUTOU+Calibri-Bold*1 [32{/.notdef}rp /g415 14{/.notdef}rp /slash 17{/.notdef}rp /A /B 6{/.notdef}rp /I /.notdef /K /L /M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 80{/.notdef}rp /space 53{/.notdef}rp]ZIUTOU+Calibri-Bold nfZIUTOU+Calibri-Bold*1 [17.5298 0 0 -17.5298 0 0 ]msf608.033 306.447 mo(KP\312/\312Ambient\312Ligh ng\312System)[9.58691 9.3291 3.96387 7.53223 3.96289 10.6221 14.2607 9.40625 4.30566 8.8252 9.24414 6.07715 3.96289 7.41211 4.30566 8.31152 9.24414 10.2627 9.40723 8.31055 3.96387 8.03711 8.19141 6.7959 5.86328 8.8252 0 ]xshZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf663.146 327.484 mo(Arduino)[10.1426 5.87207 9.20996 9.20996 4.02344 9.20996 0 ]xsh720.057 327.484 mo(-)sh725.424 327.484 mo(based)[9.20996 8.39648 6.85645 8.72266 0 ]xshZIUTOU+Calibri-Bold*1 [17.5298 0 0 -17.5298 0 0 ]msf520.765 114.806 mo(KP\312/\312Surround\312Sound\312System)[9.58691 9.3291 3.96387 7.53223 3.96289 8.28516 9.40723 6.23145 6.01758 9.42383 9.40625 9.40723 9.40723 3.96289 8.28516 9.42383 9.40723 9.40723 9.40625 3.96387 8.03711 8.19141 6.7959 5.86328 8.8252 0 ]xshZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf521.063 135.842 mo(Windows\312XP\312)[15.5957 4.02246 9.20996 9.20996 9.17578 12.377 6.85645 3.96289 9.09863 9.05664 0 ]xsh613.128 135.842 mo(with\312Processing)[12.5313 4.02246 5.87207 9.20996 3.96289 9.05664 5.82813 9.24512 7.41211 8.72168 6.85645 6.85645 4.02246 9.20996 0 ]xsh625.416 142.683 mo
625.416 188.578 li
499.542 188.572 li
499.343 188.572 499.181 188.733 499.181 188.932 cv
499.181 189.13 499.343 189.292 499.542 189.292 cv
625.776 189.298 li
625.872 189.298 625.962 189.261 626.03 189.193 cv
626.098 189.125 626.136 189.034 626.136 188.938 cv
626.136 142.683 li
626.136 142.484 625.975 142.323 625.776 142.323 cv
625.577 142.323 625.416 142.484 625.416 142.683 cv
cp
f
542.559 178.414 mo
620.743 178.414 li
620.743 199.449 li
542.559 199.449 li
542.559 178.414 li
cp
0 0 0 0 cmyk
f
0 0 0 1 cmyk
ZIUTOV+Calibri*1 [17.5298 0 0 -17.5298 0 0 ]msf542.557 194.197 mo(TCP\312Socket)[8.18262 9.34766 9.05566 3.96289 8.05469 9.24414 7.41211 7.4043 8.62793 0 ]xsh681.292 483.444 mo
681.292 486.253 679.016 488.531 676.208 488.531 cv
616.028 488.531 li
613.219 488.531 610.942 486.253 610.942 483.444 cv
610.942 423.265 li
610.942 420.457 613.219 418.179 616.028 418.179 cv
676.208 418.179 li
679.016 418.179 681.292 420.457 681.292 423.265 cv
681.292 483.444 li
cp
level3{
gsave
clp
[67.3718 -67.3718 67.3718 67.3718 612.431 487.041 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt
6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6T$Ru6T$Ru6o?\!6o?\!6o?\!6o?\!6o?\!6o?\!6o?\!
6o?\!6o?_"6o?_"75Zh#75cn$75cn$75cn$75cq%7Q*%&7Q3+'7Q3+'7lN7)7lN7)82rF+82rI,8NAX.
8NA[/8iem290,!39KP369ftB8:-:N::-CW<:Hgi?;*R/C;F!AF;aESI<C/nM<^]4R=@GOV>"1m[>Y%9`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~6SpLt75cn$7Q3+'82rI,8NA[/905'49ftE9:-CW<:d7#A;*[8E;aNYJ<'rkM<^]4R=@PUW>":s\>=h6`
>t[Zf?qa,l@89Dp@o#_uA5Q&%Al;A)BN%\-BiIn0C0"46CfaO:D-0a=DHTs@E*HBFEElTJEa;fMFC&,R
F^J>VG$nPYG[aq_H"1.bH=UCgHt?^lI:m!qIV<3uJ8&O%JSSg*Jo#$/K5G63KPkH7L2Uc<LN$uALi@,D
M/mDIMK<VNMf`hRNHK.XNd#F]O*GXaOEkjfOa;'kP'_9oPC.KtP^R^$Q%+!*Q@O3.Q[sB2R"BT7R=ff<
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.263736 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.3718 -67.3718 67.3718 67.3718 612.431 487.041 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?Y-0<Dudm:ej_Z9M7uM8OuBB7n,s:77BU46psF26UO4.6UO4.6UO1,6:+"*6:+"*6:+"*6:+"*6:+"*
6:+"*6UO7177B[97n?0A8P2TJ9MA/T9hnJ[:f'tc;GpFl;cHas<``@)=]np3>$G6:?!^lG?smDP@UinX
A7]=aB4kmkBPD0pC27U$Ci!s*D/O91E,]c9EH-#?F*)MGF`hhMGB\:VG^4R[H@(!dI!g?jI=?ZqJ:N0$
JUrE)JqJ].KS>,7L5(J=LPUbBM2@(HMMd=NN/`gVNfK-\O,oBaOHGZfP*1ulPEV5qPa.N!QBmi'Q^=),
~>
<~7n,p86:!k$5!;"i4$#A^3B/uW2`<QP2Dm?L2)R6J1c.$G1c.$G1c.$G1G^gC1G^gC1G^gC1G^gC1G^gC
1G^gC1c.'J2E!KQ2`NcV3BB2_4$,Pe4?Ykl5<h@t5s[h(6:4+-6q'O67Rfm=84cEG91qoO9heAX:/=\_
;,L1g;GpFl;cHas<`W7&='&L+=BSg2>?b<:>[1Q??!^iD?XI/J@:<VS@UinXA7T4^AnG[gB4tslBkhBu
CMRa&Ci+$+DJj?1Df9Q4DfB]9EcQ2AF)uGFFEMbMGB\7UG^+LZH$Xd_H[C*eI!g?kIXcisJ:N0$JUrE)
~>
<~6ps@-5<_4m4$#A]2`EWQ2Dm<J1G^gB1,:U>0ekC;0ek@90JG170JG170JG170JG170JG170JG170JG17
0JG170ekC<1,:XB1c7-J2E!HP3&ioY3BB2^4$5Vg4Zttm5!M:t5s[e'6UO706q'R77n?0B8P)NH8kViO
9he>W:/4S\:Janc;GpCk;c?Xp<)lt"='&I*=BJ^/=^#!4>?b<:>[1Q??!^lF?smAN@:<VS@UinXA7T4^
AS#IcAnPahBP;'nBk_<sC27U#Ci!p)D/F0.DJsH3E,]c9EH-#>EcZ;CFEDVIF`hkNG'A.SGB\7UG^+LZ
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!WiE)!WiH+!sA`0"9\i2"U,&5"
U5/8#6tJ>#RC_C#mq"H$O[=N%1NdW%M''\&.fBb&eYik',2,p'c%Q$(Ddo+)&aD3)]K_9*??1C+!;[K+
X/*T,U=Z_-7:/g-n-Sp.k</&~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
681.292 483.444 mo
680.792 483.444 li
680.792 484.712 680.28 485.856 679.45 486.687 cv
678.618 487.518 677.475 488.03 676.208 488.031 cv
616.028 488.031 li
614.76 488.03 613.617 487.518 612.785 486.687 cv
611.954 485.856 611.442 484.712 611.442 483.444 cv
611.442 423.265 li
611.442 421.997 611.954 420.854 612.785 420.022 cv
613.617 419.192 614.76 418.679 616.028 418.679 cv
676.208 418.679 li
677.475 418.679 678.618 419.192 679.45 420.022 cv
680.28 420.854 680.792 421.997 680.792 423.265 cv
680.792 483.444 li
681.292 483.444 li
681.792 483.444 li
681.792 423.265 li
681.792 420.18 679.293 417.68 676.208 417.679 cv
616.028 417.679 li
612.943 417.68 610.442 420.18 610.442 423.265 cv
610.442 483.444 li
610.442 486.53 612.943 489.03 616.028 489.031 cv
676.208 489.031 li
679.293 489.03 681.792 486.53 681.792 483.444 cv
681.292 483.444 li
cp
0 0 0 .873276 cmyk
f
675.697 418.179 mo
616.442 418.179 li
613.405 418.179 610.942 420.641 610.942 423.68 cv
610.942 424.79 li
610.942 421.14 613.899 418.183 617.549 418.183 cv
636.872 418.183 li
640.521 418.183 643.48 421.14 643.48 424.79 cv
643.48 444.113 li
643.48 447.762 640.521 450.72 636.872 450.72 cv
617.549 450.72 li
613.899 450.72 610.942 447.762 610.942 444.113 cv
610.942 462.504 li
610.942 458.856 613.901 455.897 617.549 455.897 cv
636.874 455.897 li
640.521 455.897 643.48 458.856 643.48 462.504 cv
643.48 481.828 li
643.48 485.477 640.521 488.435 636.874 488.435 cv
655.263 488.435 li
651.616 488.435 648.657 485.477 648.657 481.828 cv
648.657 462.502 li
648.657 458.853 651.616 455.895 655.263 455.895 cv
674.59 455.895 li
678.238 455.895 681.196 458.853 681.196 462.502 cv
681.196 481.828 li
681.196 485.477 678.238 488.435 674.59 488.435 cv
675.697 488.435 li
678.735 488.435 681.197 485.973 681.197 482.935 cv
681.197 444.113 li
681.197 447.762 678.238 450.721 674.59 450.721 cv
655.266 450.721 li
651.617 450.721 648.659 447.762 648.659 444.113 cv
648.659 424.79 li
648.659 421.14 651.617 418.183 655.266 418.183 cv
674.59 418.183 li
678.238 418.183 681.197 421.14 681.197 424.79 cv
681.197 423.68 li
681.197 420.641 678.735 418.179 675.697 418.179 cv
cp
0 0 0 0 cmyk
f
587.297 477.91 mo
571.428 477.91 li
567.133 477.91 563.653 474.427 563.653 470.132 cv
563.653 435.934 li
563.653 431.639 567.133 428.157 571.428 428.157 cv
587.297 428.157 li
591.592 428.157 595.075 431.639 595.075 435.934 cv
595.075 470.132 li
595.075 474.427 591.592 477.91 587.297 477.91 cv
579.363 459.654 mo
575.097 459.654 571.638 463.113 571.637 467.379 cv
571.638 471.647 575.097 475.106 579.363 475.106 cv
583.63 475.106 587.09 471.647 587.09 467.379 cv
587.09 467.379 li
587.09 467.379 li
587.09 463.113 583.63 459.654 579.363 459.654 cv
567.61 435.726 mo
566.942 435.727 566.403 436.267 566.403 436.933 cv
566.403 457.492 li
566.404 458.159 566.944 458.697 567.61 458.699 cv
591.117 458.699 li
591.783 458.697 592.324 458.159 592.325 457.492 cv
592.325 457.492 li
592.325 436.933 li
592.324 436.267 591.785 435.727 591.117 435.726 cv
567.61 435.726 li
.333227 .267308 .272038 3.0518e-05 cmyk
f
591.117 457.699 mo
567.61 457.699 li
567.494 457.698 567.403 457.607 567.403 457.492 cv
567.403 436.933 li
567.403 436.82 567.496 436.726 567.61 436.726 cv
591.117 436.726 li
591.232 436.726 591.325 436.82 591.325 436.933 cv
591.325 457.492 li
591.324 457.607 591.234 457.698 591.117 457.699 cv
level3{
gsave
clp
[23.033 -23.033 23.033 23.033 567.848 458.731 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L
&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L&e,6L
&e,6L&e,6L&e,6L&e,9M&e,9M'+GBN'+GBN'+GBN'+GBN'+GBN'+PHO'+PHO'+PHO'+PHO'+PHO'FkTQ
'FkTQ'FkTQ'FkTQ'FkTQ'b:cS'b:fT'b:fT'b:fT((UoU((_#W((_#W(D%,X(D%,X(_I>[(_I>[)%mP^
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e,6L&e,9M'+PHO'+PHO'FkTQ'FkTQ'b:cS'b:fT'b:fT((^uV((_#W(D%,X(D.5Z(_I>[(_I>[)%mP^
)%mP^)%mP^)A<ba)A<ba)\Wkb)\`td*#'(e*#0.f*#01g*>K:h*>TCj*YoLk*Z#Rl*u>^n*u>^n+;bmp
+;bpq+;bpq+W2-t+W2-t+rV=!+rV@",8qI#,9%O$,T@[&,T@[&,odm),odm)-6+!*-64*,-QO3--QO3-
-lsE0-lsE0.3BT2.3BW3.N]`4.Nfi6.Nfi6.j,r7.j6&9/0Q/:/0Q/:/KuA=/KuA=/gDP?/gDS@0-_\A
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.263736 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[23.033 -23.033 23.033 23.033 567.848 458.731 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~(`4&*()@W"'bh>r'GD,n',)#l&eYfi&eYfi&eP]f&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te
&J5Te&J5Tf&eYfi&ebol',)#n'GM5q'GM5q'bqGu'bqK"()@Z$(Ddl((Ddo*(`4),(`4)-)&X;0)&aD3
)B'M5)]K_8)]K_8*#oq<*#ot>*??.@*Zc@D*ZcCF+!2RH+!2RI+<VdL+<_mO+X&!Q+sJ3T+sS<W,9nEY
,U=W\,UF`_,paia-71&d-7:/g-RU8i-n$Jl-n-So.4H\p.4H_r.Olnt.k<,#.k</%/1`>'/M/P+/M/S-
~>
<~&J5Qc%hB0]%LrsY%LijV%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OR%1NaU%1NaU%1NaV%LrsY%LrsY%hB0]%hB0]%hK9`&.fBa&.fEc&J5Te&J5Tf&eYfi&eYfi
',)#m',)&o'GM5q'GM5r'bqGu'c%Q#()@Z$()@]&(Ddl((Ddl)(`4),(`=2/)&X;0)&X>2)B'M4)B'M5
)]K_8)]K_8*#oq<*#oq<*$$%?*??.A*Zc@D*Zc@D+!2RH+!2RH+!;[K+<VdL+<VgN+X&!P+sJ3T+sJ3T
~>
<~&J5Qc%hB0]%LrsY%1NaU%1NaT$k*OQ$k*OQ$k*OQ$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=M$k*OQ$k*OQ$k3XT%1NaU%1NdW%LrsY%LrsZ%hB0]%hK9`&.fBa&.fEc&J5Te&J5Tf&eYfi&eYfi
',)#m',)#m',2,p'GM5r'bqGu'bqGu()@Z$()@Z$()Ic'(Ddl)(`4),(`4),)&X;0)&X;0)&aD3)B'M5
)]K_8)]K_8*#oq<*#oq<*$$%?*??.@*??1B*Zc@D+!2RH+!2RH+!;[K+<VdL+<VgN+X&!P+X&!Q+sJ3T
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
591.117 458.699 mo
567.61 458.699 li
566.944 458.697 566.404 458.159 566.403 457.492 cv
566.403 436.933 li
566.403 436.267 566.942 435.727 567.61 435.726 cv
591.117 435.726 li
591.785 435.727 592.324 436.267 592.325 436.933 cv
592.325 457.492 li
592.325 457.492 li
592.324 458.159 591.783 458.697 591.117 458.699 cv
567.61 436.726 mo
567.496 436.726 567.403 436.82 567.403 436.933 cv
567.403 457.492 li
567.403 457.607 567.494 457.698 567.61 457.699 cv
591.117 457.699 li
591.234 457.698 591.324 457.607 591.325 457.492 cv
591.325 457.492 li
591.325 436.933 li
591.325 436.82 591.232 436.726 591.117 436.726 cv
567.61 436.726 li
.287022 .225925 .231144 3.0518e-05 cmyk
f
579.363 474.106 mo
577.505 474.106 575.826 473.354 574.607 472.136 cv
573.389 470.917 572.637 469.238 572.637 467.379 cv
572.637 465.521 573.389 463.843 574.607 462.624 cv
575.826 461.406 577.505 460.654 579.363 460.654 cv
581.222 460.654 582.901 461.406 584.12 462.624 cv
585.338 463.843 586.09 465.521 586.09 467.379 cv
586.09 469.238 585.338 470.917 584.12 472.136 cv
582.901 473.354 581.222 474.106 579.363 474.106 cv
579.363 463.12 mo
577.011 463.12 575.104 465.027 575.104 467.379 cv
575.104 469.733 577.011 471.64 579.363 471.64 cv
581.716 471.64 583.623 469.733 583.623 467.379 cv
583.623 467.379 li
583.623 467.379 li
583.623 465.027 581.716 463.12 579.363 463.12 cv
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
579.363 475.106 mo
575.097 475.106 571.638 471.647 571.637 467.379 cv
571.638 463.113 575.097 459.654 579.363 459.654 cv
583.63 459.654 587.09 463.113 587.09 467.379 cv
587.09 467.379 li
587.09 467.379 li
587.09 467.379 li
587.09 471.647 583.63 475.106 579.363 475.106 cv
579.363 460.654 mo
577.505 460.654 575.826 461.406 574.607 462.624 cv
573.389 463.843 572.637 465.521 572.637 467.379 cv
572.637 469.238 573.389 470.917 574.607 472.136 cv
575.826 473.354 577.505 474.106 579.363 474.106 cv
581.222 474.106 582.901 473.354 584.12 472.136 cv
585.338 470.917 586.09 469.238 586.09 467.379 cv
586.09 465.521 585.338 463.843 584.12 462.624 cv
582.901 461.406 581.222 460.654 579.363 460.654 cv
587.09 467.379 mo
587.09 467.379 li
587.09 467.379 li
.333227 .267308 .272038 3.0518e-05 cmyk
f
579.363 470.64 mo
577.564 470.637 576.107 469.18 576.104 467.379 cv
576.107 465.58 577.564 464.123 579.363 464.12 cv
581.164 464.123 582.62 465.58 582.623 467.379 cv
582.62 469.18 581.164 470.637 579.363 470.64 cv
f
579.363 471.64 mo
577.011 471.64 575.104 469.733 575.104 467.379 cv
575.104 465.027 577.011 463.12 579.363 463.12 cv
581.716 463.12 583.623 465.027 583.623 467.379 cv
583.623 467.379 li
583.623 467.379 li
583.623 467.379 li
583.623 469.733 581.716 471.64 579.363 471.64 cv
579.363 464.12 mo
577.564 464.123 576.107 465.58 576.104 467.379 cv
576.107 469.18 577.564 470.637 579.363 470.64 cv
581.164 470.637 582.62 469.18 582.623 467.379 cv
582.62 465.58 581.164 464.123 579.363 464.12 cv
583.623 467.379 mo
583.623 467.379 li
583.623 467.379 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
654.05 548.436 mo
638.182 548.436 li
633.887 548.436 630.407 544.954 630.407 540.659 cv
630.407 506.46 li
630.407 502.165 633.887 498.683 638.182 498.683 cv
654.05 498.683 li
658.346 498.683 661.829 502.165 661.829 506.46 cv
661.829 540.659 li
661.829 544.954 658.346 548.436 654.05 548.436 cv
646.117 530.18 mo
641.851 530.18 638.391 533.639 638.391 537.906 cv
638.391 542.173 641.851 545.632 646.117 545.632 cv
650.384 545.632 653.844 542.173 653.844 537.906 cv
653.844 537.906 li
653.844 537.906 li
653.844 533.639 650.384 530.18 646.117 530.18 cv
634.363 506.252 mo
633.695 506.253 633.157 506.794 633.157 507.459 cv
633.157 528.018 li
633.158 528.684 633.696 529.224 634.363 529.225 cv
657.871 529.225 li
658.537 529.224 659.077 528.685 659.079 528.018 cv
659.079 528.018 li
659.079 507.459 li
659.078 506.793 658.539 506.253 657.871 506.252 cv
634.363 506.252 li
.333227 .267308 .272038 3.0518e-05 cmyk
f
657.871 528.225 mo
634.363 528.225 li
634.248 528.225 634.157 528.135 634.157 528.018 cv
634.157 507.459 li
634.157 507.345 634.25 507.253 634.363 507.252 cv
657.871 507.253 li
657.985 507.253 658.078 507.346 658.079 507.459 cv
658.079 528.018 li
658.078 528.134 657.987 528.225 657.871 528.225 cv
level3{
gsave
clp
[23.0333 -23.0333 23.0333 23.0333 634.601 529.255 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[23.0333 -23.0333 23.0333 23.0333 634.601 529.255 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
657.871 529.225 mo
634.363 529.225 li
633.696 529.224 633.158 528.684 633.157 528.018 cv
633.157 507.459 li
633.157 506.794 633.695 506.253 634.363 506.252 cv
657.871 506.252 li
658.539 506.253 659.078 506.793 659.079 507.459 cv
659.079 528.018 li
659.077 528.685 658.537 529.224 657.871 529.225 cv
634.363 507.252 mo
634.25 507.253 634.157 507.345 634.157 507.459 cv
634.157 528.018 li
634.157 528.135 634.248 528.225 634.363 528.225 cv
657.871 528.225 li
657.987 528.225 658.078 528.134 658.079 528.018 cv
658.079 528.018 li
658.079 507.459 li
658.078 507.346 657.985 507.253 657.871 507.253 cv
634.363 507.252 li
.287022 .225925 .231144 3.0518e-05 cmyk
f
646.117 544.632 mo
644.258 544.632 642.58 543.88 641.362 542.662 cv
640.143 541.443 639.391 539.765 639.391 537.906 cv
639.391 536.047 640.143 534.369 641.362 533.15 cv
642.58 531.932 644.258 531.18 646.117 531.18 cv
647.976 531.18 649.655 531.932 650.874 533.15 cv
652.092 534.369 652.844 536.047 652.844 537.906 cv
652.844 539.765 652.092 541.443 650.874 542.662 cv
649.655 543.88 647.976 544.632 646.117 544.632 cv
646.117 533.646 mo
643.765 533.646 641.858 535.553 641.858 537.906 cv
641.858 540.259 643.765 542.166 646.117 542.167 cv
648.469 542.166 650.377 540.259 650.377 537.906 cv
650.377 537.906 li
650.377 537.906 li
650.377 535.553 648.469 533.646 646.117 533.646 cv
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
646.117 545.632 mo
641.851 545.632 638.391 542.173 638.391 537.906 cv
638.391 533.639 641.851 530.18 646.117 530.18 cv
650.384 530.18 653.844 533.639 653.844 537.906 cv
653.844 537.906 li
653.844 537.906 li
653.844 537.906 li
653.844 542.173 650.384 545.632 646.117 545.632 cv
646.117 531.18 mo
644.258 531.18 642.58 531.932 641.362 533.15 cv
640.143 534.369 639.391 536.047 639.391 537.906 cv
639.391 539.765 640.143 541.443 641.362 542.662 cv
642.58 543.88 644.258 544.632 646.117 544.632 cv
647.976 544.632 649.655 543.88 650.874 542.662 cv
652.092 541.443 652.844 539.765 652.844 537.906 cv
652.844 536.047 652.092 534.369 650.874 533.15 cv
649.655 531.932 647.976 531.18 646.117 531.18 cv
653.844 537.906 mo
653.844 537.906 li
653.844 537.906 li
.333227 .267308 .272038 3.0518e-05 cmyk
f
646.117 541.167 mo
644.318 541.163 642.861 539.707 642.858 537.906 cv
642.861 536.106 644.318 534.649 646.117 534.646 cv
647.917 534.649 649.374 536.106 649.378 537.906 cv
649.377 537.906 li
649.374 539.706 647.917 541.163 646.117 541.167 cv
f
646.117 542.167 mo
643.765 542.166 641.858 540.259 641.858 537.906 cv
641.858 535.553 643.765 533.646 646.117 533.646 cv
648.469 533.646 650.377 535.553 650.377 537.906 cv
650.377 537.906 li
650.377 537.906 li
650.377 537.906 li
650.377 540.259 648.469 542.166 646.117 542.167 cv
646.117 534.646 mo
644.318 534.649 642.861 536.106 642.858 537.906 cv
642.861 539.707 644.318 541.163 646.117 541.167 cv
647.917 541.163 649.374 539.706 649.377 537.906 cv
649.378 537.906 li
649.374 536.106 647.917 534.649 646.117 534.646 cv
650.377 537.906 mo
650.377 537.906 li
650.377 537.906 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
637.613 451.678 mo
643.133 451.678 647.624 456.169 647.624 461.689 cv
647.624 488.233 li
644.624 488.233 li
644.624 461.689 li
644.624 457.823 641.479 454.678 637.613 454.678 cv
level3{
gsave
clp
[10.0107 0 0 10.0107 637.613 469.956 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N
2('^N2('^N2('^N2('^N2('^N2('^N2'sXM2'sXM1aXLK1aXLK1aXLK1aXLK1aXLK1aXLK1F4=I1F4:H
1F4:H1*n1G1*e(E0dItD0I%bA0I%bA0-VP>/g;G=/g2>;/Kl5:/0H#7.j#i5.NTW2.39K0-lj9--6*s)
,o[a&,8h@!+W)$r+;Ydn*YfCi*"rtc)A3Y_(D%,X'FkTQ&e#0K%giXD$O6n:#R(A3"Tni,!W`<%!!!!!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~2('^N1aXLK1F4:H1*e+F0d@nC0-VS?0-VP>/g2>;/Kc/9/0H#7.j#i5.NTW2.39K0-lj<.-la3,-QF'*
-6!m(,oR[%,T7O#,8h@!+rD-s+W)!q+;Ygo*u5Ul*YfCi*YfCi*>B1f*"rtc)\Wkb)A3Y_)%dJ](_I>[
(_@5Y(D%,X((UoU'b1]R'FkTQ'+GBN&e,6L&e#0K&ISsH&.8gF%giXD%LEFA%1*:?$j[+=$O6n:$3pb8
$3g\7#mCJ4#R(A3#6Y/0#6Y/0"p4r-"Tni,"Tnf+"9JW)!s/K'!W`<%!W`<%!<<*"zz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~2_$6V2_$6V2_$6V2_$6V2_$3U2_$3U2_$3U2_$3U2_$3U2_$3U2_$3U2_$3U2^p-T2CU$S2CU$S2CU$S
2CU!R2(9mQ2(0gP2(0gP1aj[N1aaUM1aaUM1FFIK1F=CJ1+"7H0dS(F0I7qD0I.kC0-_Y@/gDM>/Ku><
/Kl5:/0Q,9.j,o6.N]]3.3BT2-lsB/-QO0,-6*s),o[d',8qI#+rM6u+W)$r+;Ygo*YoLk*>K:h)\`qc
)A<_`(_I>[(D%,X'b:fT'+PHO&e#0K&.8jG%LNLB$O@"<$3g\7#R(A3"p>&/"Tnf+!s&E&!<<*"!!!!!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<<*"!<<*"!<<*"!W`<%!W`<%!s&E&!s/K'"9JW)"9JW)"T
ni,"p4r-"p>&/#6b51#R(A3#mLS6$O6n:$jd1>%LNLB&.8jG&e,6L'FkTQ((_#W)%mP^*#'(e*u5Ul+r
M6u,odj(.3BT2/Ku><1+":I2_$6V~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.889571 1 1 ]
/Encode [1 0 0 1 1 0 1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0107 0 0 10.0107 637.613 469.956 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!!!$#!WrN-"U52;#RLhG$k3[W&.oNf',)&p()Ic()&aD4)]Tk=*ZcCF+<VdM+X/*T,:"N\,palb-RU;j
-n$Mn.4Qes.P!#"/1`>'/M/P+/M/P,/hSb00/"t30/#"50JG490ekC;0etL>1,:U?1,:U?1G^gC1G^gC
1G^gC1G^gC1G^gC1GgpF1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1bp[8.k)hl,9\-L)]9G,'+kcc$OI(C"9SZ)
~>
<~z!<E6'!s8Z0"U5/9#RLeE$O[@O%1NdW%hK9a&J>]h&ebrn'bqK"(Ddl)(`4)-)&aD4)]Kb:*#ot>*??.
@*?H7C*ZlIG+<VdL+<VdL+X&!P+X&!Q+sJ3T+sJ6V,9nEX,:"N[,U=W\,U=W\,U=W\,pai`,pai`,pai
`,pai`,pai`,pai`,pai`,pjrc-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&
d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-6s`W*uu=>)&F&&&ePZb%1ERM#6k;5!W`9$~>
<~z!<E6'!s8Z0"U5/9#RLeE$O[@O%1NdW%hK9a&J>]h&ebrn'bqGu()@]'(`4)-)&X;1)B'P6)]Kb:*#ot
>*?H7C*Zc@D+!2RH+!2RH+<VdL+<VdM+X&!P+X&$R+sJ3T+sS<W,9nEX,9nEX,U=W\,U=W\,U=W\,U=W
\,U=W\,U=W\,UF`_,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai
`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pOQT*ZZ4=(`*r%&ePZb%1<LL#6b54!W`9$~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
643.346 457.667 mo
642.077 455.861 639.977 454.678 637.606 454.678 cv
610.942 454.678 li
610.942 451.678 li
637.606 451.678 li
640.883 451.678 643.799 453.261 645.627 455.704 cv
level3{
gsave
clp
[-2.61799e-07 5.98926 -5.98926 -2.61799e-07 628.285 451.678 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N
2('^N2('^N2('^N2('^N2('^N2('^N2'sXM2'sXM1aXLK1aXLK1aXLK1aXLK1aXLK1aXLK1F4=I1F4:H
1F4:H1*n1G1*e(E0dItD0I%bA0I%bA0-VP>/g;G=/g2>;/Kl5:/0H#7.j#i5.NTW2.39K0-lj9--6*s)
,o[a&,8h@!+W)$r+;Ydn*YfCi*"rtc)A3Y_(D%,X'FkTQ&e#0K%giXD$O6n:#R(A3"Tni,!W`<%!!!!!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N
2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N
2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N
2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N2('^N
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.907975 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.61799e-07 5.98926 -5.98926 -2.61799e-07 628.285 451.678 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!!!$#!WrN-"U52:#RLhG$k3[W&.oKe',)&o'c%T&)&X>2)]Th<*?H7D+!;[K+X&$R,9nHZ,pai`-7:/h
-n$Jm.4H\q.Olr!.k</%/1`A)/M/P+/M8Y./h\k20/"t30JG170ekC;0ekC<1,:U?1,:U?1,:XA1G^gC
1G^gC1G^gC1G^gC1G^gC1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
~>
<~z!<E6'!s8Z/"U5/9#RC_D$4@4M%1NdW%hB3_&J5Wg&ebom'GV>u()Ic'(`4),)&X>2)]K_8*#oq=*??.
@*??.A*ZcCF+!2UJ+<VdL+<_mO+X&!P+X/*S+sJ3T,9nEX,9nEY,U=W\,U=W\,U=W\,U=Z^,pai`,pai
`,pai`,pai`,pai`,pai`,pai`-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&
d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d~>
<~z!<E6'!s8Z/"U5/9#RC_D$4@4M%1NdW%hB3_&J5Wg&ebom'GV>t'c%Q$(`4),)&X;0)B'M4)]K_9*#oq
=*??.A*Zc@D*ZcCF+!2RH+!;[K+<VdL+<_mO+X&!P+sJ3T+sJ3U,9nEX,9nEX,9nEY,U=W\,U=W\,U=W
\,U=W\,U=W\,U=W\,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai
`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
681.05 483.607 mo
679.05 483.607 li
679.049 484.353 678.753 485.011 678.265 485.503 cv
677.773 485.992 677.116 486.288 676.37 486.289 cv
615.624 486.289 li
614.877 486.288 614.219 485.991 613.727 485.503 cv
613.239 485.011 612.943 484.353 612.942 483.607 cv
612.942 422.861 li
612.943 422.114 613.239 421.456 613.727 420.965 cv
614.219 420.476 614.877 420.18 615.624 420.179 cv
676.37 420.179 li
677.116 420.18 677.773 420.476 678.265 420.965 cv
678.753 421.456 679.049 422.114 679.05 422.861 cv
679.05 483.607 li
681.05 483.607 li
683.05 483.607 li
683.05 422.861 li
683.049 419.171 680.061 416.181 676.37 416.179 cv
615.624 416.179 li
611.932 416.181 608.943 419.171 608.942 422.861 cv
608.942 483.607 li
608.943 487.297 611.932 490.287 615.624 490.289 cv
676.37 490.289 li
680.061 490.287 683.049 487.297 683.05 483.607 cv
681.05 483.607 li
cp
0 0 0 .873276 cmyk
f
27.7725 52.4272 mo
28.873 54.3413 28.2124 56.7876 26.2979 57.8882 cv
24.3823 58.9888 21.937 58.3276 20.8359 56.4126 cv
12.9888 42.7563 li
11.8882 40.8413 12.5483 38.396 14.4634 37.2954 cv
16.3789 36.1948 18.8242 36.856 19.9253 38.771 cv
27.7725 52.4272 li
cp
0 0 0 1 cmyk
f
46.6597 44.5073 mo
47.2544 46.6343 49.4614 47.8774 51.5884 47.2837 cv
53.7158 46.689 54.959 44.4819 54.3647 42.354 cv
50.126 27.1851 li
49.5317 25.0581 47.3247 23.8149 45.1973 24.4087 cv
43.0698 25.0034 41.8267 27.2104 42.4214 29.3384 cv
46.6597 44.5073 li
cp
f
4.99268 34.1753 mo
.176758 22.689 6.26807 9.18604 18.5991 4.01611 cv
30.9302 -1.15479 44.8301 3.96533 49.646 15.4517 cv
0 0 0 0 cmyk
f
6.83712 33.402 mo
5.82307 30.9824 5.34417 28.4734 5.34372 25.9732 cv
5.33695 17.7165 10.6216 9.52577 19.3724 5.86056 cv
19.3984 5.84967 li
19.3725 5.86051 li
22.3892 4.59565 25.4968 4.00043 28.519 4.00026 cv
32.7192 3.99982 36.7512 5.15278 40.1197 7.25509 cv
43.4896 9.35985 46.1955 12.3981 47.8016 16.225 cv
51.4904 14.6783 li
49.5548 10.058 46.2625 6.37052 42.237 3.8614 cv
38.2101 1.34981 33.4495 .000697136 28.519 .000261307 cv
28.519 .000263929 li
24.9715 9.27448e-05 21.3342 .70031 17.8257 2.17171 cv
17.8258 2.17166 li
7.64391 6.44417 1.35048 16.0131 1.34372 25.9732 cv
1.34327 28.9857 1.92466 32.0313 3.14823 34.9486 cv
6.83712 33.402 li
cp
0 0 0 1 cmyk
f
3.28379 35.2659 mo
5.35114 39.5936 8.4907 43.6321 11.2041 46.6523 cv
12.5624 48.1608 13.8124 49.4072 14.7877 50.3006 cv
15.2773 50.7486 15.6938 51.1059 16.0503 51.3826 cv
16.2312 51.5221 16.3922 51.6402 16.5816 51.7583 cv
16.679 51.8178 16.7808 51.8781 16.9361 51.9486 cv
17.0152 51.9836 17.108 52.022 17.2408 52.0609 cv
17.3753 52.0978 17.5473 52.143 17.8305 52.1456 cv
17.982 52.1452 18.169 52.1304 18.3924 52.0672 cv
18.6138 52.0048 18.8748 51.886 19.1114 51.6937 cv
19.9699 50.9987 20.1025 49.7393 19.4075 48.8808 cv
18.7126 48.0223 17.4532 47.8897 16.5947 48.5846 cv
17.8361 50.1182 li
17.2944 48.2208 li
17.0805 48.281 16.8259 48.3966 16.5947 48.5846 cv
17.8361 50.1182 li
17.2944 48.2208 li
17.8305 50.0988 li
17.8305 48.1456 li
17.6887 48.146 17.5103 48.1597 17.2944 48.2208 cv
17.8305 50.0988 li
17.8305 48.1456 li
17.8305 50.0271 li
18.3548 48.2191 li
18.2459 48.1897 18.0956 48.1481 17.8305 48.1456 cv
17.8305 50.0271 li
18.3548 48.2191 li
17.9335 49.6719 li
18.66 48.3417 li
18.621 48.3233 18.5616 48.2824 18.3548 48.2191 cv
17.9335 49.6719 li
18.66 48.3417 li
18.3689 48.8747 li
18.6869 48.3571 li
18.66 48.3417 li
18.3689 48.8747 li
18.6869 48.3571 li
18.6449 48.3285 li
18.5285 48.2475 18.2611 48.0362 17.929 47.7448 cv
16.7478 46.714 14.6801 44.6636 12.5797 42.1277 cv
10.4745 39.5916 8.32228 36.5475 6.89492 33.5456 cv
6.41985 32.5484 5.22634 32.1251 4.22916 32.6002 cv
3.23197 33.0753 2.80871 34.2688 3.28379 35.266 cv
cp
f
47.7826 16.1307 mo
49.6979 21.3502 50.2337 28.0812 50.2249 32.0049 cv
50.2253 33.0414 50.189 33.8876 50.1418 34.4228 cv
50.1196 34.686 50.0904 34.8811 50.0816 34.9191 cv
50.081 34.9221 li
51.2796 35.2009 li
50.1646 34.6906 li
50.0863 34.8693 50.0863 34.9103 50.081 34.9221 cv
51.2796 35.2009 li
50.1646 34.6906 li
51.8389 35.4568 li
50.4489 34.2516 li
50.2671 34.4668 50.2097 34.5991 50.1646 34.6906 cv
51.8389 35.4568 li
50.4489 34.2516 li
51.9191 35.5264 li
50.8764 33.8838 li
50.6714 34.015 50.542 34.1453 50.4489 34.2516 cv
51.9191 35.5264 li
50.8764 33.8838 li
51.9334 35.549 li
51.715 33.589 li
51.3709 33.6266 51.0783 33.7542 50.8764 33.8838 cv
51.9334 35.549 li
51.715 33.589 li
50.6172 33.7113 49.8265 34.7005 49.9488 35.7982 cv
50.0712 36.896 51.0603 37.6867 52.1581 37.5644 cv
52.5619 37.52 52.8919 37.3568 53.1068 37.2026 cv
53.524 36.8907 53.6379 36.6498 53.7359 36.4877 cv
53.8939 36.1815 53.9219 36.0321 53.9647 35.8798 cv
54.0261 35.6268 54.0564 35.4128 54.0874 35.1575 cv
54.1739 34.4106 54.2239 33.3543 54.2249 32.0049 cv
54.2161 27.7452 53.7119 20.7525 51.5407 14.7609 cv
51.1624 13.7231 50.0145 13.1885 48.9767 13.5667 cv
47.9389 13.945 47.4043 15.093 47.7826 16.1307 cv
cp
f
23.8827 53.8255 mo
25.5366 57.8293 28.3789 60.4692 31.7095 62.4842 cv
36.7069 65.5066 42.8131 67.163 47.8312 69.9912 cv
52.8492 72.8261 56.7725 76.7651 57.5398 84.444 cv
57.6219 85.2753 57.6611 86.1182 57.6611 86.9709 cv
57.6678 98.8023 50.0802 112.485 45.1608 122.625 cv
38.6458 136.069 35.1433 148.22 35.1429 159.418 cv
35.1386 177.384 44.1796 192.849 64.1029 207.12 cv
64.3942 206.713 li
44.549 192.485 35.6471 177.202 35.6429 159.418 cv
35.6424 148.326 39.1156 136.244 45.6107 122.843 cv
50.5144 112.714 58.1544 99.0069 58.1611 86.9709 cv
58.1611 86.1029 58.1212 85.2436 58.0374 84.3948 cv
57.5232 79.1698 55.5369 75.58 52.7531 72.9301 cv
48.5771 68.9551 42.6542 67.0684 37.1948 64.6868 cv
31.7285 62.3046 26.7511 59.4563 24.3448 53.6345 cv
23.8827 53.8255 li
cp
f
107.714 257.553 mo
107.714 263.628 102.789 268.553 96.7144 268.553 cv
74.269 268.553 li
68.1943 268.553 63.2695 263.628 63.2695 257.553 cv
63.2695 209.182 li
63.2695 203.107 68.1943 198.182 74.269 198.182 cv
96.7144 198.182 li
102.789 198.182 107.714 203.107 107.714 209.182 cv
107.714 257.553 li
cp
f
103.117 239.674 mo
103.117 240.227 102.669 240.674 102.117 240.674 cv
68.8667 240.674 li
68.3145 240.674 67.8667 240.227 67.8667 239.674 cv
67.8667 210.596 li
67.8667 210.043 68.3145 209.596 68.8667 209.596 cv
102.117 209.596 li
102.669 209.596 103.117 210.043 103.117 210.596 cv
103.117 239.674 li
cp
level3{
gsave
clp
[32.5785 -32.5785 32.5785 32.5785 69.2026 241.424 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[32.5785 -32.5785 32.5785 32.5785 69.2026 241.424 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
103.117 239.674 mo
102.617 239.674 li
102.616 239.951 102.393 240.174 102.117 240.174 cv
68.8667 240.174 li
68.5905 240.174 68.3672 239.951 68.3667 239.674 cv
68.3667 210.596 li
68.3672 210.32 68.5905 210.097 68.8667 210.096 cv
102.117 210.096 li
102.393 210.097 102.616 210.319 102.617 210.596 cv
102.617 239.674 li
103.117 239.674 li
103.617 239.674 li
103.617 210.596 li
103.617 209.768 102.945 209.096 102.117 209.096 cv
68.8667 209.096 li
68.0384 209.096 67.3669 209.767 67.3667 210.596 cv
67.3667 239.674 li
67.3669 240.503 68.0384 241.174 68.8667 241.174 cv
102.117 241.174 li
102.945 241.174 103.617 240.503 103.617 239.674 cv
103.117 239.674 li
cp
0 0 0 .873276 cmyk
f
95.7124 253.659 mo
95.7124 259.303 91.1362 263.879 85.4917 263.879 cv
79.8472 263.879 75.271 259.303 75.271 253.659 cv
75.271 248.014 79.8472 243.438 85.4917 243.438 cv
91.1362 243.438 95.7124 248.014 95.7124 253.659 cv
cp
0 0 0 0 cmyk
f
95.7124 253.659 mo
95.2124 253.659 li
95.2122 256.344 94.1251 258.771 92.3652 260.532 cv
90.6045 262.292 88.1775 263.379 85.4917 263.379 cv
82.8059 263.379 80.3789 262.292 78.6182 260.532 cv
76.8583 258.771 75.7712 256.344 75.771 253.659 cv
75.7712 250.973 76.8583 248.546 78.6182 246.785 cv
80.3789 245.025 82.8059 243.938 85.4917 243.938 cv
88.1775 243.938 90.6045 245.025 92.3652 246.785 cv
94.1251 248.546 95.2121 250.973 95.2124 253.659 cv
95.7124 253.659 li
96.2124 253.659 li
96.2121 247.738 91.4126 242.938 85.4917 242.938 cv
79.5708 242.938 74.7713 247.738 74.771 253.659 cv
74.7713 259.58 79.5708 264.379 85.4917 264.379 cv
91.4126 264.379 96.2121 259.58 96.2124 253.659 cv
95.7124 253.659 li
cp
0 0 0 1 cmyk
f
90.8101 253.659 mo
90.8101 256.597 88.4292 258.978 85.4917 258.978 cv
82.5542 258.978 80.1733 256.597 80.1733 253.659 cv
80.1733 250.721 82.5542 248.34 85.4917 248.34 cv
88.4292 248.34 90.8101 250.721 90.8101 253.659 cv
cp
f
90.8101 253.659 mo
90.3101 253.659 li
90.3098 254.992 89.7715 256.193 88.8989 257.067 cv
88.0254 257.94 86.824 258.478 85.4917 258.478 cv
84.1594 258.478 82.958 257.94 82.0845 257.067 cv
81.2118 256.193 80.6736 254.992 80.6733 253.659 cv
80.6736 252.326 81.2118 251.125 82.0845 250.251 cv
82.958 249.379 84.1594 248.841 85.4917 248.84 cv
86.824 248.841 88.0254 249.379 88.8989 250.251 cv
89.7716 251.125 90.3098 252.326 90.3101 253.659 cv
90.8101 253.659 li
91.3101 253.659 li
91.3098 250.445 88.7055 247.841 85.4917 247.84 cv
82.2779 247.841 79.6736 250.445 79.6733 253.659 cv
79.6736 256.873 82.2779 259.478 85.4917 259.478 cv
88.7055 259.478 91.3098 256.873 91.3101 253.659 cv
90.8101 253.659 li
cp
0 0 0 0 cmyk
f
229.191 461.044 mo
229.191 467.12 224.265 472.044 218.191 472.044 cv
195.746 472.044 li
189.671 472.044 184.746 467.12 184.746 461.044 cv
184.746 412.673 li
184.746 406.598 189.671 401.673 195.746 401.673 cv
218.191 401.673 li
224.265 401.673 229.191 406.598 229.191 412.673 cv
229.191 461.044 li
cp
0 0 0 1 cmyk
f
224.593 443.166 mo
224.593 443.718 224.146 444.166 223.593 444.166 cv
190.343 444.166 li
189.791 444.166 189.343 443.718 189.343 443.166 cv
189.343 414.087 li
189.343 413.535 189.791 413.087 190.343 413.087 cv
223.593 413.087 li
224.146 413.087 224.593 413.535 224.593 414.087 cv
224.593 443.166 li
cp
level3{
gsave
clp
[32.5785 -32.5785 32.5785 32.5785 190.679 444.917 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[32.5785 -32.5785 32.5785 32.5785 190.679 444.917 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
224.593 443.166 mo
224.093 443.166 li
224.093 443.442 223.87 443.665 223.593 443.666 cv
190.343 443.666 li
190.067 443.665 189.844 443.442 189.843 443.166 cv
189.843 414.087 li
189.844 413.811 190.067 413.588 190.343 413.587 cv
223.593 413.587 li
223.87 413.588 224.093 413.811 224.093 414.087 cv
224.093 443.166 li
224.593 443.166 li
225.093 443.166 li
225.093 414.087 li
225.093 413.259 224.422 412.587 223.593 412.587 cv
190.343 412.587 li
189.515 412.588 188.843 413.258 188.843 414.087 cv
188.843 443.166 li
188.843 443.995 189.515 444.665 190.343 444.665 cv
223.593 444.665 li
224.422 444.665 225.093 443.994 225.093 443.166 cv
224.593 443.166 li
cp
0 0 0 .873276 cmyk
f
217.189 457.15 mo
217.189 462.794 212.613 467.371 206.968 467.371 cv
201.324 467.371 196.748 462.794 196.748 457.15 cv
196.748 451.505 201.324 446.929 206.968 446.929 cv
212.613 446.929 217.189 451.505 217.189 457.15 cv
cp
0 0 0 0 cmyk
f
217.189 457.15 mo
216.689 457.15 li
216.689 459.836 215.602 462.263 213.842 464.023 cv
212.081 465.783 209.654 466.87 206.968 466.871 cv
204.282 466.87 201.855 465.783 200.095 464.023 cv
198.335 462.263 197.248 459.836 197.248 457.15 cv
197.248 454.464 198.335 452.037 200.095 450.276 cv
201.855 448.516 204.282 447.429 206.968 447.429 cv
209.654 447.429 212.081 448.516 213.842 450.276 cv
215.602 452.037 216.689 454.464 216.689 457.15 cv
217.189 457.15 li
217.689 457.15 li
217.689 451.229 212.889 446.43 206.968 446.429 cv
201.047 446.43 196.248 451.229 196.248 457.15 cv
196.248 463.071 201.047 467.87 206.968 467.871 cv
212.889 467.87 217.689 463.071 217.689 457.15 cv
217.189 457.15 li
cp
0 0 0 1 cmyk
f
212.287 457.15 mo
212.287 460.088 209.906 462.469 206.968 462.469 cv
204.031 462.469 201.65 460.088 201.65 457.15 cv
201.65 454.212 204.031 451.832 206.968 451.832 cv
209.906 451.832 212.287 454.212 212.287 457.15 cv
cp
f
212.287 457.15 mo
211.787 457.15 li
211.786 458.483 211.248 459.684 210.375 460.558 cv
209.502 461.431 208.301 461.969 206.968 461.969 cv
205.636 461.969 204.435 461.431 203.561 460.558 cv
202.688 459.684 202.15 458.483 202.15 457.15 cv
202.15 455.818 202.688 454.616 203.561 453.743 cv
204.435 452.87 205.636 452.332 206.968 452.332 cv
208.301 452.332 209.502 452.87 210.375 453.743 cv
211.248 454.616 211.786 455.818 211.787 457.15 cv
212.287 457.15 li
212.787 457.15 li
212.786 453.936 210.182 451.332 206.968 451.332 cv
203.754 451.332 201.15 453.936 201.15 457.15 cv
201.15 460.365 203.754 462.969 206.968 462.969 cv
210.182 462.969 212.786 460.365 212.787 457.15 cv
212.287 457.15 li
cp
0 0 0 0 cmyk
f
719.629 205.604 mo
719.43 204.783 719.336 203.963 719.336 203.155 cv
719.336 198.472 722.529 194.217 727.284 193.07 cv
727.049 192.097 li
721.836 193.358 718.335 198.017 718.336 203.155 cv
718.336 204.041 718.44 204.941 718.657 205.839 cv
719.629 205.604 li
cp
0 0 0 1 cmyk
f
712.141 207.415 mo
711.795 205.985 711.629 204.555 711.629 203.147 cv
711.63 194.988 717.19 187.581 725.473 185.579 cv
725.238 184.607 li
716.498 186.722 710.629 194.534 710.629 203.147 cv
710.629 204.633 710.804 206.143 711.169 207.65 cv
712.141 207.415 li
cp
f
704.422 209.281 mo
703.925 207.225 703.688 205.168 703.688 203.144 cv
703.688 191.402 711.689 180.742 723.608 177.862 cv
723.373 176.89 li
710.996 179.883 702.687 190.948 702.688 203.144 cv
702.688 205.247 702.935 207.383 703.45 209.515 cv
704.422 209.281 li
cp
f
727.016 199.951 mo
726.005 200.196 725.385 201.211 725.629 202.22 cv
725.874 203.229 726.887 203.85 727.897 203.605 cv
728.907 203.361 729.526 202.346 729.282 201.336 cv
729.04 200.328 728.022 199.708 727.016 199.951 cv
cp
f
804.557 275.013 mo
798.842 232.71 li
798.586 230.804 797.299 229.282 795.967 229.282 cv
741.442 229.282 li
740.11 229.282 738.825 230.802 738.569 232.71 cv
732.852 275.013 li
804.557 275.013 li
cp
level3{
gsave
clp
[-1.99899e-06 45.7314 -45.7314 -1.99899e-06 768.705 229.282 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3\)Z[3@cQZ3@ZKY3@ZHX3@ZHX
3%??W3%??W3%69V2^p-T2^p-T2CKsR2CKpQ2('aO2('^N1aXOL1F=CJ1F4:H1*e+F0dItD0I%bA0-VP>
/g2A</Kl5:/0H&8.j#i5.NTW2.39K0-lj9--QF*+,o[d',T7R$+rM6u+W)$r+;Ygo*YoLk*>B1f)\Wkb
)A3Y_(_I>[(D%,X'b1`S'+GBN&e#0K&.8gF%1*=@$O?t;$3g\7#R(A3"p>#."9JW)!s&E&!<<*"!!!!!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.99899e-06 45.7314 -45.7314 -1.99899e-06 768.705 229.282 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW
3&iiU2`EZS2`EZS2`EWQ2E!HO2E!EM2)R6K2)R3I1c.$G1c.!E1G^dA1,:U?1,:R=0ek@90JG.50/"q1
/hSb./M/P*/1`>&.k<,".Olns.4H\o-n$Jk-RU8g-7'r`,U=W[,9e<T+X&!O+<VdK+!)ID*??.?*#fh8
)B'M4)&X8.(Ddl(()@W"'GM2o&eYfi&J5Qc%h9'Y$k*LO$47+I#mgkC#6tG;"U,#3!s8W-!WiB'!!!!!
~>
<~.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Oceq.4H\p.4H\p
.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Gj-RU8h-RU5f-71&d-71#b,pai`,paf^,U=TZ,9nEX,9nBV+sJ0R
+X&!O+<VdL+<VdK+!2RG*Zc@C*??.@*??.?*#oq;)]K_7)B'M3)&X;/(`4)+(Ddl'()@Z#'bh>q',)#l
&eYfi&J5Te&.fBa%hB-[%1NaU$k*OQ$O[=M$47(G#RC\A#6tG;"U,&5"9\i1!s8T+!<E3%z!!!!!~>
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4?Sm-n$Jl
-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU5f-71&d-71#b,pai`,paf^,U=TZ,9nEX,9nBV+sJ0R+X%sN
+<VdL+<VdK+!2RH+!2RG*Zc@C*??.?*#oq;)]K_8)]K_7)B'M3)&X;/(`4)+(Ddl'()@Z#'bh>q',)#l
&eYfi&J5Te&.fBa%hB0]%LrpW$k*OQ$O[:K#mgnE#RCY?"pP89"U,&5"9\f/!WiE)!<E3%z!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
756.039 270.486 mo
781.569 270.486 li
786.961 266.545 790.469 260.176 790.469 252.985 cv
790.469 241.02 780.77 231.32 768.803 231.32 cv
756.836 231.32 747.138 241.02 747.138 252.985 cv
747.138 260.176 750.645 266.545 756.039 270.486 cv
cp
level3{
gsave
clp
[20.651 0 0 20.651 768.803 250.903 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt
6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6T$Ru6T$Ru6o?\!6o?\!6o?\!6o?\!6o?\!6o?\!6o?\!
6o?\!6o?_"6o?_"75Zh#75cn$75cn$75cn$75cq%7Q*%&7Q3+'7Q3+'7lN7)7lN7)82rF+82rI,8NAX.
8NA[/8iem290,!39KP369ftB8:-:N::-CW<:Hgi?;*R/C;F!AF;aESI<C/nM<^]4R=@GOV>"1m[>Y%9`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~6SpLt6T$Ru6o?\!6o?_"75cn$75cq%7Q3+'7lN7)7lW=*82rI,8NA[/8iem2905*59KY979g(K::-L]=
:Hpo@;*[5D;F*GG;aNYJ<'rnN<^]4R=%,FU=[tgZ>=_0_>Y7Hc?;!fh?qj2m@STPr@o,i"APl/&B2_S,
BN.e/C/n+3CK=@8D-0a=DHTs@E*HBFEElTJF'VrPF^J>UG$nPYG[aq_H"11dHY$RjI:cppIV<3uJ8/U'
Jnns-K5G63Kl1T:L2Uf>LiI2EMK3PLMf`hRNHT4YNd,O`OEkjfOaD-mPC.KtQ%!m'Q@O3.R"9N5R=ff<
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.515337 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.651 0 0 20.651 768.803 250.903 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b96=BAO'<E)mp;Gg:f:JOYZ9he>V9MA)P8kMZH84Z9B7n6'>7Rfj:77BX677BX56psF26psF26pj=/
6UO4.6UO4.6UO4.6UO4.6UO1,6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*
6:+"*6:+%,6UO706psI47Rfj:7n6*@8P)NH91qrP9heAX:Janc;GpFl<)lt"='/U/>?b?<?=.)K@U`hX
AnPaiBkhBuCi+$,DfBZ8EcZ>FF`qtRG^4U^I!pElIt3*%JqJ`1KnbA=M2I1KN/`gWO-#HcP*;,qQ'Rc(
~>
<~7n6$;779O26:!n&5X.Is5!;%k4?GVd4$,Ja3B9)[3&ilW2`EZS2E!HO2E!HO2Dm?L2)R6K2)R6J1c.$G
1c.$G1c.$G1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC
1G^gC1c.$G1c.'I2)R9M2E!KQ2`E]U3B9,]4$,Pe4Zttm5<hCu5s[h(6UO7077Kd;84cEG92&&S:/=\_
;H$Ln<)lq!='/R->$G39>[:ZC?XR;O@Uiq[AS,RgBkhBuCi+$,DJsK6EH6,BF`qtRG^4U^H[L6jIt3'#
~>
<~6psF16:!n&5<_7o4Zkhg4$#D_3B/uX2`EZS2E!HO2)R3I1c.!E1G^gC1,:U?1,:U?1,1L<0ekC;0ekC;
0eb:80JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170ekC;1,:U?1G^gC1c.'I2E!KQ2`E]U3B9,]4$,Pe4Zttn5X7V$6:+%-77B[984Z<E91qrP
:/=Y^:f1+h;cH^r<``@)=^#!5>?kE=?=.&I@:E\U@q9._AnPdkBkhBuCi+$,DJsK6EH6)@FEM_LGBe@X
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<N<)!s8W."9er5"pYA=#
RLeE$OdFQ%M'*_&J>`k'c%T&)&aG6*?QCI+s\H]-RgMr~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
740.688 150.099 mo
745.153 184.844 li
745.354 186.41 746.36 187.659 747.399 187.659 cv
790.01 187.659 li
791.051 187.659 792.055 186.41 792.256 184.844 cv
796.723 150.099 li
740.688 150.099 li
cp
level3{
gsave
clp
[-1.64181e-06 -37.5601 37.5601 -1.64181e-06 768.706 187.659 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzz!<<*"!<<*"!W`<%!W`<%!s/K'"9JW)"9JW)"Tni,"p4r-#6Y/0#R(>2#R(A3#mLS6$3pb8$O?t;
$j[+=%LEFA%giXD&.8jG&e#0K'+GBN'FkTQ'b:fT(D%,X(_I>[)A3Y_)\Wkb*#'(e*YoIj*u>^n+W)$r
+rM6u,T@X%-6*s)-lj9-.39N1.j,o6/Kl5:/g;G=0I.kC1F=CJ2(0dO2^p-T3%HEX3\2c]4>&/b4teMg
5VXnl68L=r6o6Y!7Q*('8N8U.90"p29fk?8:H^c>;*R/C;aESI<^T+P=@GOV~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.871166 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.64181e-06 -37.5601 37.5601 -1.64181e-06 768.706 187.659 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~='&F'<E)mq;Gg:f:esk^9he;T91qlL8Ou?A7R]a66UO1,5s[b#5<_7o4Zkhg3]]8]3&iiU2`<QO2)I*F
1,1L;0/"q0/M/P*/1W2".4HYn-mpAh-7'r`,U4KW+X&!P+<M[H*Zc@C*#on:)]K\6)AsD0(`*u)()@W"
'GM5p',)#l&eYfh&.f?_%hB-[%LijU$k!FN$47+I#mgnD#RC\@#6tJ=#6tG;"pG/6"U"r2"9S`.!s8W-
!WiE(!<E3%!<E0#zzzzzzzzzzzz!!!!!~>
<~6psC06:*t(5X.Is5!;%k4$,Ja3B9&Y3&`cS2Dm?K1G^gC1,:R<0J>(3/hSb./1`;%.k<(u.4?Sm-mp>g
,paf^,9nBU+X&!O+<VaJ*Zc=B*?6%=*#fh9)]BS3(`4),(Ddl'()@Z#'GM2o',(uk&eP]f&J,Kb%hB0]
%LrsX%1NaT$k*OP$O[:K$47(G#m^eB#R:S>#6tJ="pP88"U,&4"9\i1"9\f/!s/N*!WiE)!W`<&!<E3%
!<E3$zzzzzzzzzzzzzz!!!!!~>
<~5s[b$5<h=q4Zkhg4$,Mb3B9&Y2`EWQ2Dm?K1c$pC0ekC;0JG.4/hSb./M&G'.k<)!.4HYn-mpAh-7'ra
,U=TZ+sJ0Q+<VdK+!2OF*Zc=B*#fh9)]BV5)AsD1(`4),(Ddl'()7Pu'GM2o',(uk&eP]f&J,Kb%hB0]
%LrsX%1NaT$k*OP$O[:K$47(G#m^eB#R:S>"pP89"U,&5"U,&4"9\f/!s8W-!s/N*!WiE)!W`<&!<E3%
zzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
801.258 229.63 mo
801.61 231.972 800.696 233.907 799.209 233.907 cv
738.396 233.907 li
736.911 233.907 735.999 231.972 736.35 229.63 cv
742.657 187.569 li
742.879 186.078 743.995 184.889 745.149 184.889 cv
792.458 184.889 li
793.614 184.889 794.729 186.078 794.952 187.569 cv
801.258 229.63 li
cp
0 0 0 .736389 cmyk
f
690.42 84.0786 mo
690.42 87.4346 687.698 90.1558 684.342 90.1558 cv
646.59 90.1558 li
643.235 90.1558 640.512 87.4346 640.512 84.0786 cv
640.512 14.7959 li
640.512 11.4399 643.235 8.71875 646.59 8.71875 cv
684.342 8.71875 li
687.698 8.71875 690.42 11.4399 690.42 14.7959 cv
690.42 84.0786 li
cp
0 0 0 .873276 cmyk
f
685.602 64.6436 mo
685.602 75.6025 676.719 84.4863 665.759 84.4863 cv
654.801 84.4863 645.917 75.6025 645.917 64.6436 cv
645.917 53.6846 654.801 44.8008 665.759 44.8008 cv
676.719 44.8008 685.602 53.6846 685.602 64.6436 cv
cp
level3{
gsave
clp
[19.8423 0 0 19.8423 665.76 64.6436 ]ct
/7 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt
6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6SpLt6T$Ru6T$Ru6o?\!6o?\!6o?\!6o?\!6o?\!6o?\!6o?\!
6o?\!6o?_"6o?_"75Zh#75cn$75cn$75cn$75cq%7Q*%&7Q3+'7Q3+'7lN7)7lN7)82rF+82rI,8NAX.
8NA[/8iem290,!39KP369ftB8:-:N::-CW<:Hgi?;*R/C;F!AF;aESI<C/nM<^]4R=@GOV>"1m[>Y%9`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~6SpLt75cn$7Q3+'82rI,8NA[/905'49ftE9:-CW<:d7#A;*[8E;aNYJ<'rkM<^]4R=@PUW>":s\>=h6`
>t[Zf?qa,l@89Dp@o#_uA5Q&%Al;A)BN%\-BiIn0C0"46CfaO:D-0a=DHTs@E*HBFEElTJEa;fMFC&,R
F^J>VG$nPYG[aq_H"1.bH=UCgHt?^lI:m!qIV<3uJ8&O%JSSg*Jo#$/K5G63KPkH7L2Uc<LN$uALi@,D
M/mDIMK<VNMf`hRNHK.XNd#F]O*GXaOEkjfOa;'kP'_9oPC.KtP^R^$Q%+!*Q@O3.Q[sB2R"BT7R=ff<
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.263736 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.8423 0 0 19.8423 665.76 64.6436 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?Y-0<Dudm:ej_Z9M7uM8OuBB7n,s:77BU46psF26UO4.6UO4.6UO1,6:+"*6:+"*6:+"*6:+"*6:+"*
6:+"*6UO7177B[97n?0A8P2TJ9MA/T9hnJ[:f'tc;GpFl;cHas<``@)=]np3>$G6:?!^lG?smDP@UinX
A7]=aB4kmkBPD0pC27U$Ci!s*D/O91E,]c9EH-#?F*)MGF`hhMGB\:VG^4R[H@(!dI!g?jI=?ZqJ:N0$
JUrE)JqJ].KS>,7L5(J=LPUbBM2@(HMMd=NN/`gVNfK-\O,oBaOHGZfP*1ulPEV5qPa.N!QBmi'Q^=),
~>
<~7n,p86:!k$5!;"i4$#A^3B/uW2`<QP2Dm?L2)R6J1c.$G1c.$G1c.$G1G^gC1G^gC1G^gC1G^gC1G^gC
1G^gC1c.'J2E!KQ2`NcV3BB2_4$,Pe4?Ykl5<h@t5s[h(6:4+-6q'O67Rfm=84cEG91qoO9heAX:/=\_
;,L1g;GpFl;cHas<`W7&='&L+=BSg2>?b<:>[1Q??!^iD?XI/J@:<VS@UinXA7T4^AnG[gB4tslBkhBu
CMRa&Ci+$+DJj?1Df9Q4DfB]9EcQ2AF)uGFFEMbMGB\7UG^+LZH$Xd_H[C*eI!g?kIXcisJ:N0$JUrE)
~>
<~6ps@-5<_4m4$#A]2`EWQ2Dm<J1G^gB1,:U>0ekC;0ek@90JG170JG170JG170JG170JG170JG170JG17
0JG170ekC<1,:XB1c7-J2E!HP3&ioY3BB2^4$5Vg4Zttm5!M:t5s[e'6UO706q'R77n?0B8P)NH8kViO
9he>W:/4S\:Janc;GpCk;c?Xp<)lt"='&I*=BJ^/=^#!4>?b<:>[1Q??!^lF?smAN@:<VS@UinXA7T4^
AS#IcAnPahBP;'nBk_<sC27U#Ci!p)D/F0.DJsH3E,]c9EH-#>EcZ;CFEDVIF`hkNG'A.SGB\7UG^+LZ
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!WiE)!WiH+!sA`0"9\i2"U,&5"
U5/8#6tJ>#RC_C#mq"H$O[=N%1NdW%M''\&.fBb&eYik',2,p'c%Q$(Ddo+)&aD3)]K_9*??1C+!;[K+
X/*T,U=Z_-7:/g-n-Sp.k</&~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
685.602 64.6436 mo
683.102 64.6436 li
683.101 69.4407 681.165 73.7606 678.023 76.9068 cv
674.877 80.0491 670.557 81.9851 665.759 81.9863 cv
660.963 81.9851 656.643 80.0491 653.497 76.9068 cv
650.355 73.7605 648.419 69.4406 648.417 64.6436 cv
648.419 59.8465 650.355 55.5266 653.497 52.3803 cv
656.643 49.238 660.963 47.302 665.759 47.3008 cv
670.557 47.302 674.877 49.238 678.023 52.3803 cv
681.165 55.5265 683.101 59.8464 683.102 64.6436 cv
685.602 64.6436 li
688.102 64.6436 li
688.101 52.3031 678.101 42.3023 665.759 42.3008 cv
653.419 42.3024 643.419 52.3029 643.417 64.6436 cv
643.419 76.9842 653.419 86.9847 665.759 86.9863 cv
678.101 86.9848 688.101 76.984 688.102 64.6436 cv
685.602 64.6436 li
cp
0 0 0 .873276 cmyk
f
672.911 64.6436 mo
672.911 68.7559 669.579 72.0884 665.467 72.0884 cv
661.355 72.0884 658.021 68.7559 658.021 64.6436 cv
658.021 60.5322 661.355 57.1987 665.467 57.1987 cv
669.579 57.1987 672.911 60.5322 672.911 64.6436 cv
cp
level3{
gsave
clp
[7.44507 0 0 7.44507 665.465 64.6436 ]ct
/8 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X.#,_X-o&\X-o#ZWgJiWWgJiUWgJfSWL&WPWL&WOWKrNLWKrNJW0N?GW0N<EW0N<DVj*-AVj**>Vj!$<
Vj!$;VNZm8VNQg6VNQd3V3-U0V3-R.Ul^C+Ul^@)Ul^@(UQ:1%UQ:."UQ:.!U5jprU5jpqU5agnToF^l
To=UiTo=UhTSnCdTSnCcT8J4`T8J1^T8A+[SqqqXSqqnVSVM_SSVM\QSVDVOS;)JLS:uDJRtZ8GRtZ8F
RY6&CRY,uAR=fi>R=fi=R"BW9R"BW8R"9N5Q[sE3Q[j<0Q@O3.Q@F*+Q%+!*Q%!m'P^[d%P^R["PC.Kt
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.44507 0 0 7.44507 665.465 64.6436 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~WiE)!WiE)!WiE)!Wi;tsWMukrWMukrWMlboW2QYnW2QYnW2QYnW2HPkVl-GjVl-GjVl$>gVP^5fVP^5f
VP^5fVP^2dV5:#bV5:#bV59u`Unjf^Unjc\USFTZUSFTZUSFQXU8"BVU8"BVU8"?TTqS0RTqS0RTqS-P
TV.sNTV.sNTV.sMT:_aJT:_aISt;OFSt;OFSt;OESXl=BSXl=AS=H+>S=H+>S=H+=S"#n:S"#n9R[T\6
R[T\6R@0J2R@0J2R$a8.R$a8.Q^=&*Q^=&*Q^=&*QBmi&QBmi&Q'IW"Q'IW"Pa%DsPa%DsPEV2oPEV2o
~>
<~R@0J2R@'A/R$a8.R$X/+Q^=&*Q^=&*Q^3r'QBmi&QBd`#Q'IW"Q'@MtPa%DsPa%DsP`q;pPEV2oPEM)l
P*1ukP*1ukP*1riOcbcgOcb`eOH>QcOH>NaO,o?_O,o?_O,o<]NfK-[NfK-[NfK*YNK&pWNK&mUN/W^S
N/W^RMi3LOMi3LNMMd:KMMd:JM2@(GM2@(FLkpkBLPLY?LPLY>L5(G;L5(G:KnY57KnY56KS5#3KS5#3
KS5#3K7ef/JqAT+JqAT+JqAT+JUrB'JUrB'J:N0#J:N0#It)rtIt)rtIXZ`pIXZ`pI=6NlI=6NlI!g<h
~>
<~O,o?_O,o?_O,f6\NfK-[NfK-[NfB$XNK&pWNK&pWNJrgTN/W^SN/W^SN/NUPMi3LOMi3LOMi*CLMMd:K
MMd:KMMd7IM2@(GM2@%ELkpkCLkphALPLY?LPLV=L5(G;L5(G;L5(D9KnY57KnY25KS5#3KS4u1K7ef/
K7ef.JqAT+JqAT*JUrB'JUrB'JUrB&J:N0#J:N0#J:N0"It)rtIt)rsIXZ`pIXZ`oI=6NlI=6NkI!g<h
I!g<hH[C*dH[C*dH?sm`H?sm`H$O[\H$O[\G^+IXG^+IXGB\7TGB\7TG'8%PG'8%PF`hhLF`hhLFEDVH
~>
<~AnGXdARo=^A7K+Z@q&nU@:3JN?sd8J?X@&F?<piB?!LW=>?Y36>$5!2=]ed.=BAR*=&r@%<E)ps<)Z^o
;c?Rl;Gp@h;,L.d:JX_\:/4MX9he;T9MA)P91qlL8kMZH8P)HD7n6$<7Rfg877BU46psC06UO1,6:*t(
5s[e%5X7S!5<h@r5!D.n4Ztqj4?P_f4$#D_3B9)Z3&ilV2`EZR2E!HN2)R6J1c.$F1G^gB1,:U>0ekC:
0JG170JG170/"t3/hSb//M/P+/1`>'.k<,#.Olnt.4H\p-n$Jl-RU8h-71&d-71&d,pai`,U=W\,9nEX
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
686.242 19.8369 mo
686.242 23.6729 683.131 26.7827 679.296 26.7827 cv
675.459 26.7827 672.35 23.6729 672.35 19.8369 cv
672.35 16.0015 675.459 12.8916 679.296 12.8916 cv
683.131 12.8916 686.242 16.0015 686.242 19.8369 cv
cp
level3{
gsave
clp
[6.9458 0 0 6.9458 679.295 19.8374 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.9458 0 0 6.9458 679.295 19.8374 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
686.242 19.8369 mo
683.742 19.8369 li
683.74 21.0723 683.248 22.168 682.439 22.9805 cv
681.627 23.7891 680.531 24.2815 679.296 24.2827 cv
678.06 24.2815 676.965 23.7889 676.152 22.9805 cv
675.344 22.1681 674.851 21.0725 674.85 19.8369 cv
674.851 18.6017 675.344 17.5061 676.152 16.6938 cv
676.965 15.8854 678.06 15.3929 679.296 15.3916 cv
680.531 15.3928 681.627 15.8853 682.439 16.6938 cv
683.248 17.5063 683.74 18.6019 683.742 19.8369 cv
686.242 19.8369 li
688.742 19.8369 li
688.743 17.2365 687.68 14.8594 685.975 13.1582 cv
684.273 11.4529 681.897 10.3904 679.296 10.3916 cv
676.696 10.3903 674.318 11.4527 672.617 13.1582 cv
670.911 14.8596 669.849 17.2367 669.85 19.8369 cv
669.849 22.4373 670.911 24.8145 672.617 26.5161 cv
674.318 28.2216 676.696 29.284 679.296 29.2827 cv
681.896 29.2839 684.273 28.2214 685.975 26.5161 cv
687.68 24.8147 688.743 22.4375 688.742 19.8369 cv
686.242 19.8369 li
cp
0 0 0 .873276 cmyk
f
676.708 33.4814 mo
676.708 39.5283 671.805 44.4307 665.759 44.4307 cv
659.715 44.4307 654.813 39.5283 654.813 33.4814 cv
654.813 27.4355 659.715 22.5332 665.759 22.5332 cv
671.805 22.5332 676.708 27.4355 676.708 33.4814 cv
cp
level3{
gsave
clp
[10.948 0 0 10.948 665.76 33.4819 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.948 0 0 10.948 665.76 33.4819 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
669.867 33.4814 mo
669.867 35.7505 668.03 37.5889 665.759 37.5889 cv
663.491 37.5889 661.651 35.7505 661.651 33.4814 cv
661.651 31.2119 663.491 29.3735 665.759 29.3735 cv
668.03 29.3735 669.867 31.2119 669.867 33.4814 cv
cp
level3{
gsave
clp
[4.10815 0 0 4.10815 665.758 33.481 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.10815 0 0 4.10815 665.758 33.481 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
560.702 82.6636 mo
560.702 86.02 563.422 88.7407 566.78 88.7407 cv
604.53 88.7407 li
607.887 88.7407 610.608 86.02 610.608 82.6636 cv
610.608 13.3809 li
610.608 10.0249 607.887 7.30371 604.53 7.30371 cv
566.78 7.30371 li
563.422 7.30371 560.702 10.0249 560.702 13.3809 cv
560.702 82.6636 li
cp
0 0 0 .873276 cmyk
f
565.52 63.229 mo
565.52 74.1875 574.403 83.0718 585.362 83.0718 cv
596.32 83.0718 605.204 74.1875 605.204 63.229 cv
605.204 52.27 596.32 43.3857 585.362 43.3857 cv
574.403 43.3857 565.52 52.27 565.52 63.229 cv
cp
level3{
gsave
clp
[-19.8423 0 0 19.8423 585.362 63.229 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.8423 0 0 19.8423 585.362 63.229 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
565.52 63.229 mo
563.02 63.229 li
563.022 75.569 573.021 85.5701 585.362 85.5718 cv
597.702 85.5701 607.702 75.5692 607.704 63.229 cv
607.702 50.8884 597.702 40.8874 585.362 40.8857 cv
573.021 40.8874 563.022 50.8886 563.02 63.229 cv
565.52 63.229 li
568.02 63.229 li
568.021 58.4318 569.957 54.1118 573.099 50.9654 cv
576.245 47.823 580.565 45.887 585.362 45.8857 cv
590.158 45.887 594.478 47.823 597.624 50.9655 cv
600.766 54.1119 602.702 58.4319 602.704 63.229 cv
602.702 68.0258 600.766 72.3457 597.624 75.4921 cv
594.478 78.6345 590.158 80.5705 585.362 80.5718 cv
580.565 80.5705 576.245 78.6345 573.099 75.4921 cv
569.957 72.3458 568.021 68.0259 568.02 63.229 cv
565.52 63.229 li
cp
0 0 0 .873276 cmyk
f
578.209 63.229 mo
578.209 67.3403 581.545 70.6738 585.655 70.6738 cv
589.766 70.6738 593.1 67.3403 593.1 63.229 cv
593.1 59.1172 589.766 55.7842 585.655 55.7842 cv
581.545 55.7842 578.209 59.1172 578.209 63.229 cv
cp
level3{
gsave
clp
[-7.44507 0 0 7.44507 585.655 63.229 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.44507 0 0 7.44507 585.655 63.229 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
564.879 18.4224 mo
564.879 22.2578 567.989 25.3682 571.825 25.3682 cv
575.661 25.3682 578.771 22.2578 578.771 18.4224 cv
578.771 14.5864 575.661 11.4766 571.825 11.4766 cv
567.989 11.4766 564.879 14.5864 564.879 18.4224 cv
cp
level3{
gsave
clp
[-6.9458 0 0 6.9458 571.825 18.4224 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.9458 0 0 6.9458 571.825 18.4224 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
564.879 18.4224 mo
562.379 18.4224 li
562.378 21.0226 563.44 23.3997 565.146 25.1012 cv
566.847 26.8067 569.224 27.8694 571.825 27.8682 cv
574.425 27.8694 576.802 26.8068 578.504 25.1014 cv
580.21 23.3999 581.272 21.0228 581.271 18.4224 cv
581.272 15.8218 580.21 13.4445 578.504 11.7431 cv
576.802 10.0377 574.425 8.97533 571.825 8.97656 cv
569.224 8.97531 566.847 10.0378 565.146 11.7433 cv
563.44 13.4448 562.378 15.822 562.379 18.4224 cv
564.879 18.4224 li
567.379 18.4224 li
567.381 17.1868 567.873 16.0911 568.681 15.2787 cv
569.494 14.4702 570.589 13.9778 571.825 13.9766 cv
573.06 13.9778 574.156 14.4703 574.969 15.2788 cv
575.777 16.0914 576.27 17.187 576.271 18.4224 cv
576.27 19.6574 575.777 20.7531 574.969 21.5657 cv
574.156 22.3744 573.06 22.8669 571.825 22.8682 cv
570.589 22.8669 569.494 22.3744 568.681 21.5659 cv
567.873 20.7534 567.381 19.6576 567.379 18.4224 cv
564.879 18.4224 li
cp
0 0 0 .873276 cmyk
f
574.414 32.0669 mo
574.414 38.1133 579.315 43.0156 585.362 43.0156 cv
591.409 43.0156 596.311 38.1133 596.311 32.0669 cv
596.311 26.0205 591.409 21.1187 585.362 21.1187 cv
579.315 21.1187 574.414 26.0205 574.414 32.0669 cv
cp
level3{
gsave
clp
[-10.9487 0 0 10.9487 585.362 32.0669 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.9487 0 0 10.9487 585.362 32.0669 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
581.255 32.0669 mo
581.255 34.3354 583.094 36.1743 585.362 36.1743 cv
587.63 36.1743 589.469 34.3354 589.469 32.0669 cv
589.469 29.7969 587.63 27.959 585.362 27.959 cv
583.094 27.959 581.255 29.7969 581.255 32.0669 cv
cp
level3{
gsave
clp
[-4.10718 0 0 4.10718 585.362 32.0669 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.10718 0 0 4.10718 585.362 32.0669 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
473.417 234.668 mo
473.417 236.912 471.518 238.732 469.175 238.732 cv
373.234 238.732 li
370.891 238.732 368.992 236.912 368.992 234.668 cv
368.992 184.058 li
368.992 181.813 370.891 179.993 373.234 179.993 cv
469.175 179.993 li
471.518 179.993 473.417 181.813 473.417 184.058 cv
473.417 234.668 li
cp
0 0 0 .873276 cmyk
f
473.417 234.668 mo
472.917 234.668 li
472.917 235.647 472.505 236.532 471.829 237.181 cv
471.152 237.829 470.216 238.232 469.175 238.232 cv
373.234 238.232 li
372.193 238.232 371.257 237.829 370.58 237.181 cv
369.904 236.532 369.492 235.647 369.492 234.668 cv
369.492 184.058 li
369.492 183.079 369.904 182.194 370.58 181.545 cv
371.257 180.897 372.193 180.493 373.234 180.493 cv
469.175 180.493 li
470.216 180.493 471.152 180.897 471.829 181.545 cv
472.505 182.194 472.917 183.079 472.917 184.058 cv
472.917 234.668 li
473.417 234.668 li
473.917 234.668 li
473.917 184.058 li
473.918 182.793 473.38 181.645 472.521 180.823 cv
471.662 180 470.477 179.493 469.175 179.493 cv
373.234 179.493 li
371.932 179.493 370.747 180 369.888 180.823 cv
369.029 181.645 368.491 182.793 368.492 184.058 cv
368.492 234.668 li
368.491 235.933 369.029 237.081 369.888 237.903 cv
370.747 238.726 371.932 239.232 373.234 239.232 cv
469.175 239.232 li
470.477 239.232 471.662 238.726 472.521 237.903 cv
473.38 237.081 473.918 235.933 473.917 234.668 cv
473.417 234.668 li
cp
0 0 0 0 cmyk
f
473.417 234.668 mo
473.417 236.912 471.518 238.732 469.175 238.732 cv
373.234 238.732 li
370.891 238.732 368.992 236.912 368.992 234.668 cv
368.992 184.058 li
368.992 181.813 370.891 179.993 373.234 179.993 cv
469.175 179.993 li
471.518 179.993 473.417 181.813 473.417 184.058 cv
473.417 234.668 li
cp
0 0 0 .873276 cmyk
f
473.417 234.668 mo
472.917 234.668 li
472.917 235.647 472.505 236.532 471.829 237.181 cv
471.152 237.829 470.216 238.232 469.175 238.232 cv
373.234 238.232 li
372.193 238.232 371.257 237.829 370.58 237.181 cv
369.904 236.532 369.492 235.647 369.492 234.668 cv
369.492 184.058 li
369.492 183.079 369.904 182.194 370.58 181.545 cv
371.257 180.897 372.193 180.493 373.234 180.493 cv
469.175 180.493 li
470.216 180.493 471.152 180.897 471.829 181.545 cv
472.505 182.194 472.917 183.079 472.917 184.058 cv
472.917 234.668 li
473.417 234.668 li
473.917 234.668 li
473.917 184.058 li
473.918 182.793 473.38 181.645 472.521 180.823 cv
471.662 180 470.477 179.493 469.175 179.493 cv
373.234 179.493 li
371.932 179.493 370.747 180 369.888 180.823 cv
369.029 181.645 368.491 182.793 368.492 184.058 cv
368.492 234.668 li
368.491 235.933 369.029 237.081 369.888 237.903 cv
370.747 238.726 371.932 239.232 373.234 239.232 cv
469.175 239.232 li
470.477 239.232 471.662 238.726 472.521 237.903 cv
473.38 237.081 473.918 235.933 473.917 234.668 cv
473.417 234.668 li
cp
0 0 0 0 cmyk
f
468.642 231.066 mo
468.642 232.99 466.917 234.552 464.788 234.552 cv
377.621 234.552 li
375.492 234.552 373.767 232.99 373.767 231.066 cv
373.767 187.659 li
373.767 185.734 375.492 184.173 377.621 184.173 cv
464.788 184.173 li
466.917 184.173 468.642 185.734 468.642 187.659 cv
468.642 231.066 li
cp
level3{
gsave
clp
[70.4836 -70.4836 70.4836 70.4836 385.963 244.605 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[70.4836 -70.4836 70.4836 70.4836 385.963 244.605 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
468.642 231.066 mo
468.142 231.066 li
468.142 231.876 467.782 232.612 467.178 233.16 cv
466.574 233.706 465.73 234.052 464.788 234.052 cv
377.621 234.052 li
376.679 234.052 375.835 233.706 375.231 233.16 cv
374.627 232.612 374.268 231.876 374.267 231.066 cv
374.267 187.659 li
374.268 186.849 374.627 186.113 375.231 185.565 cv
375.835 185.019 376.679 184.673 377.621 184.673 cv
464.788 184.673 li
465.73 184.673 466.574 185.019 467.178 185.565 cv
467.782 186.113 468.142 186.849 468.142 187.659 cv
468.142 231.066 li
468.642 231.066 li
469.142 231.066 li
469.142 187.659 li
469.143 186.544 468.64 185.537 467.849 184.823 cv
467.058 184.108 465.975 183.674 464.788 183.673 cv
377.621 183.673 li
376.433 183.674 375.351 184.108 374.56 184.823 cv
373.769 185.537 373.267 186.544 373.267 187.659 cv
373.267 231.066 li
373.267 232.18 373.769 233.188 374.56 233.901 cv
375.351 234.617 376.433 235.052 377.621 235.052 cv
464.788 235.052 li
465.975 235.052 467.058 234.617 467.849 233.901 cv
468.64 233.188 469.143 232.18 469.142 231.066 cv
468.642 231.066 li
cp
0 0 0 .873276 cmyk
f
486.725 267.814 mo
486.725 273.026 li
486.725 273.942 485.213 274.686 483.35 274.686 cv
359.402 274.686 li
357.538 274.686 356.027 273.942 356.027 273.026 cv
356.027 268.211 li
f
486.583 266.547 mo
487.29 268.022 485.448 269.242 482.458 269.242 cv
359.951 269.242 li
356.96 269.242 355.12 268.022 355.827 266.547 cv
368.533 240.043 li
368.982 239.104 371.228 238.354 373.554 238.354 cv
468.855 238.354 li
471.18 238.354 473.426 239.104 473.877 240.043 cv
486.583 266.547 li
cp
0 0 0 .736389 cmyk
f
486.583 266.547 mo
486.132 266.763 li
486.206 266.918 486.234 267.049 486.234 267.167 cv
486.233 267.339 486.178 267.497 486.036 267.676 cv
485.826 267.943 485.397 268.224 484.781 268.422 cv
484.167 268.621 483.374 268.743 482.458 268.742 cv
359.951 268.742 li
358.73 268.744 357.727 268.525 357.076 268.2 cv
356.749 268.039 356.515 267.854 356.373 267.677 cv
356.232 267.498 356.177 267.34 356.175 267.167 cv
356.176 267.05 356.203 266.919 356.277 266.763 cv
368.984 240.259 li
369.034 240.147 369.189 239.971 369.453 239.801 cv
370.243 239.275 371.893 238.847 373.554 238.854 cv
468.855 238.854 li
469.963 238.853 471.062 239.035 471.91 239.32 cv
472.333 239.462 472.694 239.63 472.956 239.801 cv
473.22 239.972 473.376 240.147 473.427 240.259 cv
486.133 266.763 li
486.583 266.547 li
487.034 266.331 li
474.328 239.827 li
474.153 239.469 473.859 239.198 473.502 238.964 cv
472.432 238.275 470.683 237.86 468.855 237.854 cv
373.554 237.854 li
372.337 237.854 371.15 238.047 370.18 238.372 cv
369.695 238.535 369.265 238.731 368.906 238.964 cv
368.55 239.199 368.256 239.469 368.082 239.827 cv
355.376 266.331 li
355.246 266.601 355.175 266.886 355.175 267.167 cv
355.174 267.586 355.334 267.983 355.594 268.304 cv
355.987 268.787 356.582 269.132 357.32 269.373 cv
358.058 269.612 358.948 269.742 359.951 269.742 cv
482.458 269.742 li
483.796 269.741 484.93 269.513 485.777 269.096 cv
486.2 268.886 486.555 268.626 486.815 268.303 cv
487.076 267.982 487.236 267.585 487.234 267.167 cv
487.234 266.885 487.164 266.601 487.035 266.331 cv
486.583 266.547 li
cp
0 0 0 0 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
/ZIUTOU+Calibri-Bold*1 uf/ZIUTOU+Calibri-Bold uf/Calibri-Bold uf/ZIUTOV+Calibri*1 uf/ZIUTOV+Calibri uf/Calibri ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Bram van der Vlist) ()%%Title: (SemanticConnections.eps)%%CreationDate: 12/4/10 15:14%%Canvassize: 16383%AI9_DataStream%Gb"-6pO;Bi[P7X8JFA%'&eY8u#2;*P)sm2hH7.Vr,d\D5B(l&\^%QA9DR+8WbWI]E,l[1IJn7NSBJlo'-'N@nfP*0(+*.+JlNn`N%$Ai5`:2iXn8ga;$(L#_P+Nk'RcU5%?5k@[DaGSZF+H#XgQd%>!#Z"I3ojM(j%*nK_?0h7.h,[VGY:&C3Xo;&M<kFn'HsNn_RW!Kc%DPXD\)7eL:i%L,jkfm953m(]@+2_,R-_@LOHbEHYCJ<BA[*QFac'G5Molb26@-B/$^1>k4H.Zpj:58-p9j^]WGl`>aJ&,MtokPWf%N.jG7?gi4(X^ORY"5pQ+IN*2!d1,%<J$*O=!MBq"a1sg[a*3:a;UuM'<o@YWJcC!]jGS<]JS&%#5);&5(D<\PQuTGscte8G\+?t9%:.F^Gg,8i@O1Luu\kjs;%ueTk'?($:/J^c=_22E_'nj6ibb`nY[;#dQe$6^*!/3a'_2:RFcPM;_Dp5*Z7JI0YJD8F4;p7"Bke'I8%`YY-fi,=SJ%e6sARbC!W'?@M,ZSUh=57J$m2<tJ7-%/U,rXU-8.26ILphefs(q):"Wm_q)BTr-Yj3cn)6Yi)siTJ`l%AB*-(ZYEO%)I1kc%rD:TghdK4mafdMNE\['UY6eaG6U%oBq<H824efbOQAG3R%1'CJ.-D7A=5bN'Z:,-('+G\,QU`XMY>tep"L;aonRk"L&l*;%c[[06p#\cNZYiN9GhLW:%>RLX2Gl;[@5tP]ih'o_1F<O7%gH4X"9>s?I-gJ-UcGTpLe=RBm^<]fJ16[;0N&/NYLWS*mb+6&*I)ta%UE6AHR/7bE#?i5GC2"!:c[G#b^GLJLR$/F_9nth/S>='i>T&pCfkT&X9!(8sBXs<-/0-<dC,Mc,=8!:bUIbphQ34;:JQ(E0g-9X9%ViC4o%<l-f3nNkb<),4jeVH^QqpD:gIFDlY,hb*B2BCR9Q0T?*]11O-dC*i"m2An@)GPuVe"P6TapmaHNS;F.VWSjO5u#PQ!T1He%5grpCMS<+]gm<@,[T_B-f;n-A"23##4OL<S)K.4CP)e-Ro[_+6]0-^++.n0*XSIU*<dDuXK0<JJdiC9PpRJ&?:A_.ss-'b'lEuBF%G-`uH)Hm+?d5ni3d/,[Xda%^(X#Jlmkc3=`d-#SS?QZ`'+'+"4HuG&E1Xu7,a@>nGSXfE"HE5W:++_%moi__EYb-5sL"u$R:?)G0%DG+bh#;,=ki;@.o6>Nut4Tp&F#@]S=)8qV1Ai'HcEa?U.SH_b:VmZ&ER#qEg\5V](UJLfSo=a[*U\Rt)0o1fG)s;G=Vg#gd:fJ=t%>s)&u;XA\h^MnBrm_&o,S*U/#kB\gW[t,A!e(Rr;Dmd;k:D!O,9a@<H@38U)b"2_o.`>uAi!dSrS78.'htVYmACl7AdD"#le7`qr%oOl!gC:(K+>$R3G>T(!hLf42#1IjQE&>EI2l\OFa!T7Rt3aNB;Ou?>tQ2;PE5&0quh5UnhYR\8cm5nCQ_/n,&JgDghn8d1e9sU?M%JX_C3_.$%$e@WdA=\l\tC>N"i%lrsVS9<!dc^4Aq#9`W>`tOg9:qQYSe&EC;)\m5u_\j9jSTD3/i=&2W(a$?ojtcL=DY-4^C&-"G%C38?lBg".4A'-XTrqRQ'LA!F)[GVQZfBg/&C`*'n,S&f=g]/%C<^Rjerh,W&K*2\j^-T*VC,Fi*Er]kmgG?C3hJE\e+;UHnirBC1%ke8J-:>=Jm/O=qNP637iKLg\,Kj:_b&,anHKilQ![+:n9@$uVWE^A^_O4O-R&o<+gNE`WQ?`JV0Dr&u;cM69c&C/)]$fLpk(_irF%lD04''OT-h6b'P)GDEm1c?kmM@E\`%O?rK#3.:Z*ahEp/R9qqGWl*sabLW,qQ-bOVKBl^X\-W]+5HXs\T<;kr@(87Y)rE-9^U.%N%7s&Nr"*,Z,;q$*@?%X``!>`N/gH?W9_#u`u!KN\aSaU$0=rVj@$NT1sDtduDl0cmm0"Sf4*SEZ'6IpqjcbsD(gTnG6hm.Sf^W,0*%pAZ"?SDa]6V]>k*UEc09]H`"'q]@a(Zjn,XDZ2$X%PkZH`.hF$mPf[BI=!7"hDgIJ,uM#+G5-phjpXi(H:t=<!L'`.ef2I1LuAOl%+r35bCqK'UEn_8XcWX,^I1AG@gp1[=a<A)iMS;c=.OO3d+W,Ecn-/3mSk*.03jlEI8:6e3J]GDiq0i_"24osr/Q/';+^ZW3\:RO*%(;tf(O:.>*;G]BB@lTdt,<(Mo\0<;?10<EKT&po^jn!kNkBVV3nffaW110/o]Y^]N/MNF)$@/<fn:Dbs"]:?a=XXXm5nVTj>m+/+%A;g7mTu[uEU/46B@SnVt`H&4]<8^YC>%HQ#`Oo:a_*Oqd*ZVed#X?fs9K6D#F*Tr&jGS:<0BM;C3FBlYH*omRQi_&T_de3.3+Wmc%E6AGW`'BS:Y"V)m^rD@!B>FfaRK.@F6kW$(9Zhq8QnX_:oD.%f(<pQ'3k2&):7T0WQgh@jig`%bF_gQfoI]X$">U"^5QDoTJAHb&%_@rdoq-dME93cb"cI2b?%A;'%=$Rs;L_a]]QJj=B'j@;2G`#p3-I2ZQ^oS+JK-DNp1/hd7N5DME_m4*M/HD:B`>2U5Q.ZMFi!IS<%=dC@:P`)gIn8`P8cHE<5aL%a8MH#_\Ot91f-kubN*cP2Bne*H-&hU,X,$)Xf.#S]l=:mNP7k@^AmUJ\sVufIiJ2_&t;%\%Q!3YF6%Hh0L.VFV(E&A/'tQN;@U+Ai,dEe)h*i0Y*i?3RE3pbE"@OFS<>?8*^2RI-4f==@k*bcI[8!RI-3`Y0uRZ77B2Rl4iPg;*:gVG13l%k%0p!+d%/7FdP*=&dd+t#O@0(BNS%F=BdP^0G25j&QYAt^bVTKroA\bb3(:.+6\X':GN(l<cnRH[g];WTS)oD7&pdJ5.W`5$5nZj%q$N2#&RuY&'[=@o*fV8-\<u34o(d$i_@]EZ5&O7`7M/0pOVCou%$8%#7-B*m!jFp%(dS:J5Ss5p%_a?`Y7P*E;=\rGmhhgJ=+W*J%k:8YiR2EgY5rAJIH;sC13`h^Z^*oVWD#Sb]9X4`EU"D"XF*rRls(E>,XA[.Vs-n$NT&R^5SJRh9/>#@AG+K+W?p&:Tcf>bX@'4FA%*FQgk0e=h!Y$o0C)A_ZHoPYZa^J"$>l2?$'n(4fB2/IaOgL%klJ#?`P&6m7PCJ%90^._s;'RU@J!fC*a[UE#9@DRTKaFj7A9FD"C%(PZWI@$:ZV@hu+\PqWLqF+D0NR`WJDKp;kcXUL+_@Y&!m!!QJ]cnhcE4KM6qrF8g><m,F_9>Kg]P.V'9RDYAb]qHUNFH@(K/:.O9%5LN(n&4fnKJG@1E!QeLj/3*5f!X):%?\Xg8r0W)Z1.)BOC^Rt4TG+U*/J?DRj+CrD<l+eU&;rH&"XJ=@pgl^hi-uIC`hEbcO!-)_%).pdC,TEl>TN^8G'`9`E'l7PD'Ae<KhE2rS*Os"\GMkBXl;3e"gO[$>:qMR"^n/S5Q_Ep$._[B7,*t%N&r'aITeDe[P>l,oFqqoU%UqB-0RDO&h;qdnQ"hOfK7<->%52aJ4Shpm&O@EelZq793*0Q&G@9+78Q%FuDVT]+6'Zs[K8*[`l/;n'G)O/D[\.ksE<p0lh@4QlZ%8cdEp?NHj".9=BEKIs]SV,C1K;M!]?,mp[Q$'^%Y+n_lAaM:Y@"m,mk>ZiLSW3)dBWhNrZJXV3!kb_h>%i:$Z'kEpDnkfQ&We-VG%Cd*5Hn>2M=8u_U+1*hJpG@5V^m_E^*DS`KKTdUlRJdm'H6J)nB'ahj]fW[.DY`B%&(N)1V/\'Unk?To'+U>4PE689n7<Q_*]OF3&%A&qd]Gp(oTROB!.8]k8AO&B:&J__,g>Q$::dO>N+L>cutk&\R>K1l;HUj4b'bgIUB>`.#1rcIFao2TECnrmp5L4)#fgD7lA5kYAe%0FSm&=W,<+@'N8>p4d:$+Ig8'Q>?rT[.,iJQtDS&LW>^F@?t<="Ig`mEFP:_Uk*!C.#*jnROJrV;iI<=Vlf-Q*fN8k1P\?O`pUYs%FY%%C0R'b;6Qqp(pC)4,#Ne2PXAT'H7YECUWb:])JnY&YN[Kk:*YSGpp2-KV)/>0uC>;W+N[Is&pjui(8N&[YgB$j;S1*HBN8&E4%IX-W6rf#6Gr*CWE,^`_')9K+q^_WG/6S+)A>BhIUBuEOC-DB>Al.-F7]7tQs8XPja\4#5T87!"='<R07#p9u,E"<iIThUFIZ!R[h%>KH5o0e5k\Bms.gLgslUZ2_ksG)0R<>#kp7^FVIqZ9OH<V,4&B-/4`^@,"e/Cf*/]P<"VIQfNLMjBn-c9o1c)`l2HG%.MVD^d&f/%6FJ4V!fK`eL+p7Sb-nK(fIrP-kTpX#qWHL>"h1mV>%&1-n3r`^&T%?.['FOQbJ9-&`8b,53^h,E'@FaTJFUNe*-(+@^fTBu7;^fs%P>pK_1,i1T#</rF)i$Y&bTgFEPpWS3_aXlSTgh!g#Wm^]$&1kGMt=W,ntN?/C0a:"'(&=IXYf&fRoTp*<Xl+SZ=!))l]!Z:=(K>o%9?+5J*,ER&B1uOTD9k2m$t7,SVY+]V00H[I6u9&kZ&N4k!&n^+Qf*3*ac#`+`@*o@N!*Ml,6cF\NSl)k1UP?J*Q:b+[.4Lg2AA6l%0eP3=Ef_D@"=?ZU=SVC'LbDe&Ui995?@jjEA-JIr^S4Q%"mk.o#WmJ^/YQ#ZT?SN&%n;XlWX=->7aW,@#7'%V:(7TFC05GS@4X<=%m-+jZ`lQ4][_n^W&c+'=d&3QDnlQBBVK=YjVJ%@r)8#?K;l*sIZ\Ch5',r=[N_@a5%T_ALCD1@cQ`!1ub08f=L4KX3@mW)X5m2iM%S6-qC$TG@/L-VFLeWBg2)'r]b>CjU?"8rpM^cCC(fIGO#@9#_K3b_'MVaEBY=>N2pi6\um=/%npcp,oWq_Gkk4A^dC?q6.miaQaL%,B#'^Jn]W-?PjSY+He(a4<;#`-hsk[=SF#\!"L7U$S#9[5p:m-."VHX6($_a\J\5n.L;LNL`I@$OGF('JAi1WjV<q_=PFurL,?L#%2&kQ#&qA1;.41mA$d2U$;".5)Gril;6"#6KWQ5-H<PUp=n/u1&E5$Q6`Is'Ub!6/9-8o[fW4!%PYi<W]qZl/;$J@Y7kjiiZ`^18I%+V/DVE!*rZ5Cs,!-:Ee!)]'2X7_r&=%R+^!&6SJ^`d;,6;'(rrI<dkqH_:Gd(AYVFkHZ39KnK`hMZQBs[BN])g)-IL&10-<N/+.2%qC<c_a4XcIMF-C?MFR+@&KCX=+sEGeJlSCQmi#<"*;8K1cc+Td0S@E1CS-+rM&iq@^8-+r1-Cjb]:ZkK/^MST!K6,UGd\fVX7Nb9%kOm^P*-eq&$5<M*\Tbjc@UY_i:\k`U%hUmQ,W:aN/,8,AnR`f%i,+2sOSE3H]*\KXp`OuX!AoH<P!K8.L!4QY>N*["2Ib"6*H1])%fq.R71Vcbr@a&AIfc=WOUWr4oZfe'EYs->Q.e&2W01hh!'Th+k<T1/hK)?5M6YtZ(o#bcue_Y?9DE.-MM%/p6KB2+Hr+G%7&0!;j%`oIU_2?LG,_+,&\"Q:R*)[INArX$JtS`++^-,t$`3&:Y*1c%sIrWtKh/OS:FXlcmhiAb;DM9XJ5D-#h:T?QlK>^i(Y.P.'lR:<a>%W[XAg[k(>:XWNTG7U3Up-2:hHi!ib6%qCJb#:g!bMBlg'A[inD/!@q-1k[)m7OT6].q3UoTNg);=9Srj.V?1koseY9m>g6jNX4Se%38RQ\Fh&]Q`"`i-$k-HgnR3gM10[<m16q32-+mDpCmeE#.$44C=@^<0bJK.uVc>:,QoHg0RB4Y5Urs)^Th'ZL">bN%EPe`i(DV24%l\m9sSBJ.pOV*VD&Ioc>/2kIIClF^cQB=k]KXZq]djujUF3=.+/DJrkSWdA!BpAKSDRM(TGRY]INO\n]BE#/)JI9&p:#\MM^k[OS%"!7_:3870t@"cDTOP\,.7LC2L`Qrh9>rKjGTCq__IBJ)K@phjUMiTP%$-%e;,DPdo32'%Gc,.RN<eBl$M]9gZZh<j#IBJ);!#9a2%co9Ms.nZ7N,nsMH7)gPXD=:rU[`@F\[tMdh`S%kDdWHBg;p!-[Ed#NKHhYG%:;ZQqnT\,(b'#;Fi#NsKR_3@8]CVaB!\2N`(q,Qd%3GPXD(+1h,+gQ-Y]G/c=bY[Y3N'+@t6/$s!s%m^poAk/VN]?9jiT#nXU<6<NLnTt)h_=_AR//a8r>VX5%9*:]WT/c5a4QsE:b@P<%Go"B#k`02#)OO<(IBdUs?p)AQLV^HiJc$_O`F;m/"=>=1DRK>-a3F4i)3B.3[o2_);XcoM;UE"V+3qM%Hkl1*dq;NM0'5nrQmm21%)i]Jc88mZ?Nl)0l-q2T50f5%c.l`duV.gj)RRXQUOfDOmX(e?u1cW,>O=WS;QQQ&?+HD[/;H=7dBF1Cl:?RYY)>TCa`h\9grFB/`%;T;$DH+kc2r'RlA9S'$VUiL&ZTRfc=Kk1@7-Lt9NNj2u%%je_h.B_m7:^DbC@3D!,lE+joX)&cTD59X:33Cn(YM&?(AWk]N0JeS&%)_7/*'XK3N`/2H6AM_jQ1R4O#CSgr48\[7PQSR7:.[K_IMLu]uH]8_6;HD?//;bcAIc>Lkpfso`1;_:\)iUl8,jR-1GBD<C(3?8i%PHr=c8#nAHbPI@F9>hWAJHp0@i#4p'$Xq9DL`LHY*4ZG6Xsm<rKgKZ0[V]T^\Bl]*+OgADOgP-D*fWk]kDV/fb0'*qjn0QqrU.Ni%s3efhi^7XPVfhfF`/>-6)k9,N-r`Gu@)FFK&Bo/fc7XfYbb@b2m*])>JI<JH]G)AkO<p:^,#&"lb`P4cb,K[Ze;me"Xbmha,4X^O%`ZHil<[]nbN8PtC5CtRUfsMn+50/o:Z>\!C)]p;YWKajrGUA-DHp.qE@hKcFjmm[?TK:WXl<dMbl@%D06cXZ?QB/R<RNb>C?2Sm5%83+Y7C;qhc72lgf$HEGU=SK,3(MC[Vgh$<LUAWCt$!?:8fQa[$9+8dD);SK&2V/:(ft/PHb=(9A'Xhm5ABG(2;?+q0,$2]LQNY<S%b<X-q"t2-(nY\NRX&!3]KmUsddT.L;J'tuH*;I/dJb"u`DcF9rF?%RS8_LMRjr[43JJ8I3%T!Q;"U\o_&?+LuLkKtqKJF'-@0,^G%(2+AVOIu)Eo)DJ^h`PaB9n8'-9-aN^)Di+_rtei1^38Shk!]<aBqHo32!aaaorgNJ<KC7a+L]QOM3&7fANrc1A:eHl92G3):Ae*S%^P_2Unbf;B_V])-.\?Zd`T-h>5^'Sna/*rUd[6_O]OENZn]XI\\9&!*Naldc=fDOj18]lWKGZ0^+9QN02=02s'e",,kMr]'fuT<U%'ltL)'j;.cOb]dUL`D2G#><O=T?0MQE3*12qqs,pB%H!lSRBV;mQ:CTVI.13h]NX4'B\d7R/SC`anH7"Ki,\)p]r4EI_i#NE%aS^%?t,*sr'gFkSCdYE6igFHi.sm$,hR^j,oUaB*+cjgKl_+==]<8&%.ZH=i\^fCN+^$]Di:OqZ1H#hF6"`JEq/iB@#Dle4T1ZS*PY:X%3/`c$jQ+D-fKo?-UD4)YY.9[-5+7_Vfa2q_26MfEQ]/2mGi)-11U-!ai&"W_Sk1!$Z_Gr=g7FFl"(.qL;@,0;.iI34+GX<giHaZ%%$aa?)>Jr4)OXZs2Q7n%\_6s7G*eZo_B.WR05%INdOjFAq-o:2[^J:U"k#cW<,3;n%r/-_GOYW%inU9XCs!pur7EVf)q%Y=lM%nh`%M#"\JlrU"\MNhJ1ngdUIL_Sa51)4(=,p4_eS$skm13ri(H#]].j\"d^Rr?P/lN#3(oba*dmYk3;-/YlWHrFWt/,?&\g.pgQ&itFS%IYiGZqj7t1,fqnpjk#^c4.>9R$P^qW"[:8=49I?._=-KO?ioO'%aI1k_`EIGN9bX`bmnY5<8g$D!E[-7j9Zftdj`@9Ei8E\>tWD1%a&!UahB6F/=Kb$1e0$D_Kq[kES0*Mu#1\\1>Cpl!o@;:?HeQ.I,\^p<jruhnDH]r304k`C2*4*(Mlui_lL+7^/CGHT29F&5"FUl9%<D;F.:=kg$)q]"";g+"`5I%o"F%F6;,i2Hk0[6SZ2[DD3_Y0Qi@ZfLo^00Q)Z0UfI]8`p/AVIhhH%a*OOW?bM`$S#m-=0oC9mb#.%5&1b&+MY_mPn=33ltgfsr75>s.GC$PrVGU0q8mjH([QNdo)8Dr/@+%Kr>]B(69$Jtbht$rK,G)@+IReU49tAoAHr/ZC4I0Mifk4A%)1poL.1)MG4qKAoLrTjU1#ZWhQkfh1AOoGum?SI//.@4HM@>.Q@(#'(E[h\X1/OADc<t&r$4pMH;KG*2)Q6dC.LJGQ4A8KN>)>Kf%%S4J;8Lct6d<,LW)&;u^c-q[i>T-bbB]_HHL=QYjH2A/+Z@*"1ERGAM?TM7SH\;F:e:g62obKaS"W#tHn%iM`V!jc\qYBmKTipNf%j*HekT;*dE"`FPXH`g=]:1:f!r`f[n:t(sc@9.afVu0E+-Q0MA0dKOL1^XMj'+D"s5mcUU)'k^r!r(1=S<?!R56ksh!%BD;4KZ^!%X<Pf0<7)-2LdK(,TDL8lr3F0m/,Z])n!j/$E-,A,qa=4an!7?Y1EK61@NL"aYLeC;i6LrXfGtkl^S@t-fM>9(R#?ER\bPKXs#T;W%Nqokgrp,sO3p+2;q6+9LVo)jTr7;)Oou;G`iKk:.=lIseO)iJ'$hE+2R7t[pD;\1G\8t[i$oGX"N]cm_o1Xm)mh9Y(iu%jP0]+%B%F+Q,ZFo)FDGlSr$i6-Tq$Amf]_\8SSi9tS;n:,PSD8&s>#li6/s(V@[j80>#=2Edag7tmt-q6/H@uTSjq$hi<qskag+l`=XNu9:,%!HN3#TTk3HSRq@9&,5,qg`,&2:b+7!fIX+-+TZ@OKLSBREGJ5jP=IRad<6_'ji'PM+kIsNOs@Of(<q$$X*<?"QJoTKU^ns"qOlO/%eFYt^FneR"jRtZf7&kRHqbmBoosDn,4`)LML0Bd8'=j=pi'OJgo`j>ebp5jl6?3lGX`[kfkfnTDb=&?]m9?Z8q;0ZV`[t\fNC6BR%FPjGABjZ7=$!%:\>2"lj[b2#eR0:0>=;57T:sAcQ;@)<6:S_#([l=)?8gp$[ZU_mnm[3o\1uU-jBU`$b_&iER=?q"&G-aN$UM5a%%L.N<;OmL[309.md^W.:gj9fO[.nVPW*!f#4ap#sO2T*t/gr#caD/q9pi\@=KZT=ab*<`Z)]403k(mD!VAfHNO"9s]=L>_Ak_0DD^%a8oq[6p&VR&Uhe#IGm'ADYS^C\budMcJOr)A5$$6`oE<]YBKiIA!0]XbtnNY1>jul1=5f+6jQs9pMUe#'5I99\YA))3.iIhAiF&c%ZCAtp-<L&N"'o9@)*FuJ3N=Iss"8s$cn(b"SBO8Q[O$FRjaSAIp^qCuZB37K[Q0..s-k<CQnt7$0:Cg)k+UUbGqYEF$SKrf7goaf%Ma]7V%d``GHb5ifKJ^a@,Ff9Mn6#d7OhkH>^1]\32tGXL^0j))4WA/ZWa@d!?ZSB?+8K!@LF@QKNGG7Bp6m\gR,FnTk)@2TSE#u^%d3JFmPL[l#\rSdU/.)T-c'AdUF7>.hC=_DN7s$-UG5#p!X.sY*2mNoPSnm^@K5ARQ%`e'&[MaD4<\c4f,KgC8hO+J[mq5YjKRLjN%dGDHA4$Hm0);@CamnAc,m,)KN"easqA/69H`A5kH9Z)fBAqX$BeVbD%9=oEQ2t1l38Y4%kF<:*Yl"kq0D5T7u00,c1J#D$>J<dm3%AO]6MOg-h<-HFaLLrLGCi]`Vhlu`9T_1)H);GsFI=TQGCG^t?M[FsuU2!Zd"fA^]5gt!m?q<2`Z@ai^mDsj\2;b_()M-NJrL];e"%Q=(OfI!UX1=c`F[hq!Oa_,CJCibku/bZr(VU_Faj-3,/^G@2,?lB//h<blEbQ4t80ln.pA;\']6FFTt8coQJV_+W_[Ijjd[e61UG%'@,qJ>n=k/H:mhNf$;1989X(37L\($f]Diq5&>I;p;?=n;<62<lj4^tPATAb3$)_K*WZmFQ5lSMDD6oX?teS$ohYIegHs`oJ*,A0%Olso<cHWn#](KJNUgg/YW*u*3rf)V]cD(eG&'%kK3G^&q[!oJA1ta4"eS3UH%9R$m^^%sGI0Pq;ePB0a%!r;gK`l$Ydh?B*f%1*4%ZoCc;EdN1U!g!5=#bq?km8aI0B:o@?q)04+IIfHjf5!jVIruP`kauNgs(o+^]%/UiYbm#[m\4%j>K<V,3rPEEq`ct=bnbcMQ@IFg%6`V[4^)t_)A#%eK8Dj*l^E1.@n2$d-7ml*N2="EcYTnG\n"VYjnmKf`2Gja.A'oI3MeYR\=<T3A4;.nBT/aXaq7D2,Z>;EpkLh7s%rm>Nj53"n=2Z.oq![f,61NXn[I;7#fcTrPTXHn>h>ekH%[i5Cq>B_db[Z@fi_5Z8ojVJ0/d:_I^c$ukBX*08E?'Dn<:*Zq>qq"R+%r?)'q+rDia^M8)p5?QD6NS"8U:5a[j<k&(12<&#`CAITrN7;(<dt!910jk+G!*e$Y>GL.%>Q=.GZiHh4mB-'=DJP6Hd+A;T^!op.%^R:i/GkGJeFOo>"ao6F1\DFE_J.D-P@>XsMWm=ib0UMg4WVl-sBkr?)"%Y994N&]3Z-Y0L&TP=NBT0[a3A/XGj%K8YU8AIX\i%0`%W-;HO4i&E#lu?^^p;G>hX.)M`hegmJ)DosJU'Y]7h#XA)*=`](H?\!tahZ;iR>tluXS"dk(Ua6-e!pAij)[U>`jG0e!a?))1^h!4%>26QtV5*XhCEBCk5n>:\4qj7GH(`bMrE]rS>5n[\BJpM%k5T*LBAoLDOs1$JO_nsn(`,>SKM)8;93c63*$gb<F&74![[I<I)eBA"%T;-D/UKZhj=SpGXBAK.J6Eg<rWF'Eu9t=t\#rC&TOFW%t7^&4;8\eOEkg^U.RJ2'aJVUei[JmY[g!Y=9)@j>:`CAN]9_<'_9aA8:%LTR"474&S"Fr0q&=mu&0?)pNslsEe0cd;tH-g\udNKQmYfNosA':d-T=[C+F:eh4Y/J^dh:e[tKa.NkdEd;<nRLn04TcqXZUA\kS%\e]#&[E`-eIas05AIMGs"dY5VBS-\8.<kf;j#H9P@qJtC&H1AO&Y:YI.kTgb$QcHQoRH0"NdS]5"oNW!?T5BBOR8H&(0V?1^867#%fP4Qn?>Fj/-jOrd,n6Di\"g/MAQm?=QKSkOm^K%+R=N:?CI*(Bde"T<,5:-j5(EfIG"pH2WZdksQle,6C%VM.agYHSeu=#PH-[`.%<jN#>LhqTk_A`CRG\tVLkLtNHb(6c$!)2;$H>[n\mjaZhQ'$f6+7CH'',-q>K:G?9K;[>g2[:,Aq$53%LcLrT'cI]2-]ru7Q4XnT%-5J4)/-q9_1R]4t5'Ll%=E`Yj<%g^VCE#0/lSM:`j,rX[?!od:KZGb0`^<jGH68#6!L$@*Wc<#d1_*!lB\QIL.B=`;PINB:KcnPJ%\'[;VE&WZ6VkS/N_7He/:=&o4cEYN5+K&E^m`:)O$o6M=5A4UI7ZWpl2,et"_Ri=!RI)"V.aBi`7N66S3jC'_CW,Yrn:'^OR%f:`%Z=0r7B:EbbeCg/]5)@g2co#A;-OAZ_F[mkpBdUKp&R_sLc"PQeCAX([qg2Zh6oFl61`O9q=8*/Cg2DF^C86NP[im*cRi,TBlOc)B%^,K8"N-;W.>BA0bb$/d_UQ+\E(4NCO/Nm>,G!Ps8O;/Hb<RfG4dr2?lh6`5F_7-i/aED^59PY4RJ;3M8M*AQJs-O3-cjK(AZ7d:T%U/>?ZX]dCT)7/.+_/npj[(is*jF@=FD[#))N$[Q31X7dAZpAb@F$Q&QI/+g@Kggth0sMT/3;"=DO_3di)pq>,1);(&@ak"PVY<H>%M]2`?Zj*TZ6:/V(C^Z(:D$_p/UGXJKpqZ%ZRf;,ecT4O*He'q*'!mVGR[gdXOE\T%lt^"Ob3705Fo:)6A/hYBrnd$q/b`R9MsN-Z%+oQAgk\!1n+p5.R9aP)iddj$DXR6fp=MOa@r.lT1TUdOD#\,m%SRJf/pS^%C^3dir.NmNj1916Mi0!?mXQ9H3gOHq)`1YS`48@=t%&;5\51.4eA?U,Q/q3s->oG8oH3BDbf=C?bbOdhRa0V:T32%jhW&euGb<BW[c_=N\l&u)7/+tZ>WCT_eEMFc5&#>ASu?_f8ZF7[q/%aPMeP-i-??b(2I#&O)b8X+%b5d]C/,gP)RZUJ\3prtE8B\4sZc%mqeQ))PQ."O:?eohf$r6lR\ZU9oks8Q<GR)Zn5P'&PVGiL:!N%hHt60[(itKW+^Nn3]XJH9fguubmE),MGc.u3oOpZ$kg'-CWcX08)j6Kf$JL_mbljB/Wg3$UC+r62eLtu3l*ibQ,29_4iG:S%Jh6@%is(KOW2CT?K&Q7h"`+J1@Ab/>+Q1hY:</4t3aVMNX!fD*1>Up;e5`rG:#'E#i,[ER+?U`EeXP$oa-FSMCkNab<!2)$pc0>@#!%i@%/,6heLLX1T7C!gYOCRX:9Nj'_-U'C#2"?P+cp=cdD2fOoNVaq;4$6obJft(!@8FosC:1o_otQtZn6.jr3Z'a'5pYZB%8BWZ2lmbF%NN[9%-OA@VVLq2H2(K7#-L*nkD'*S@J!(_G#`1OP_`A:4Lc3f;?eR5:&C"NSPMADm<\KCuK>p$SW%Z^+_1&FB`(ig(8%SnSW,f"Q%lkM?/k"7cJXV.rLg;&(CBKha$*2:$HWT/.<iT>pG<iu$"Yh2eY3cki_SqGT!"CV8qXP7L@s2:JPAXK'r>4/,8+>D4)kHOp9WARlq%FtZ(2'T&9]-,AM6R.atjXEd3nIc;HA=sq_$rIn'QlQf#!+CUM5p!MC$\0M+8fNW@K`)Rn'$,>;erTOe*4]m>nDC;+q7)qY6h0meA%*>JK!#$O[8@.p?9J2f:IU+Y_7U5<C![7%(h#As@gH9K'6Z'X#`ej%RSp,a!/X`:p,7dC%P_-'BPhjr_qrPYr3NTq[mi=&0eXfaU0%i?!m,(bgPCm3Q11L!e+N\hQ1hE'l774i6E<b/fX1D*OWRpb2p#CO]aO>*[n=$3V(jdd+kZ:Ie._dFW0@)HXbDdfq;S;&>&0_02@O%+u6$ajR-M[s-J&<I>n*lkiGtge2e$ML9UlqooN;lo&h:J<f,T>MFOO<`!jNIMO>S&@84k'A(:iV:*!P4kQqP3.@+i9U"BGqSer(M%(pj>pf>qehCj*fCNNjR4mWKMnaOP*7!Xt9@-a"3rXn-Sa%H4jPK+;G^"".nW^g70<7]kgY'A7B:&"Acf<1B3Hj<*<b)BX/bh>4&+%D/0Uq^)K.R;)%S1R"IIS#'a.QZSJ8bO?i1.Yi\IthcQL&m.%N:$?HDhs$p/jQ6X7q1&%FF"k]7%:@*2iTP6PYa*9DJ%?Nn-P5+V(%=K<,?!>E?R+J(!d/5E1IGMd.fUY6g7epFKj?gKFHp<eVYo[`skQLk7X%H<*25s;=<*HaL8&B8J[JocQ*ZMcnJ*8PN5V4-jIbE7Z]%7H6q8GW?4e:nSD-#%MuW8;,#-KDWY@HmG2e":@tmg:J\g?#[!sMNQ@G*m5,g=NG"T(*bhRhiLe7";Ys"@3>Z'A_X+=],'19)W1rM%:9c,%:H5dV:2X5FW`1S=mh`NlL.I);(3WH>*n$N:>K[tngU2\3dV20'l+??/ooIDRJNC9+=tVaLg&<1F[AWL%l_UZ<mGl(/qU+?o%ECh8'"]\ulMb0dB=J4o-jf@sW7PC&cT!PJoc*^lme3@Jb<3ilN1oFQ;%L2LEhYC#_Z_1=Ac)pAZ-(A3>(`DV;E<kM1'fENSh!Y_&%?Vb_$5-lTD]17;=aTnI&D15ol<XOaDnlKW&L.YM'l%:qPc5$TR?+<(JGa'i(g$@Q^a`cuGV9NrOWO1O.[aUMLjA8S<2VtDY7[ElX%Pcq_ah$A&%e@Jq8QTk`::Z7mbU#U9p;J2#=8t.oc2b$"cjaR%$j1,PiQ@:=\NVtjt;uBg`WgSR$0o+Le@n7obY>i*9e@G0Mq6TRr%Yph!j95434m580!041\iD7I0*IB`4O;6STcdALS[GsD-^7V:jh:!fAfYNsHrK8//RmOW#Co]&b/W\47Cq6-#@%R0J`P2Ecu.S63-%E]^sW]TEl]O'>=EaS"H^P$[$YdbjALh.+-=d(]dl$-ScVPG]Acc#TrkoOX&l;OKC:D@'rm"+n.[A?!5V\T"=FM-M.dZN%]nC^]@m%F*dGhnZ^<Q/Ni!0[l[.]BU`@75U:X5Dtro6_UGsk]u"DUf">l?dEL(VE@"]@>Z0b5pGs4H7lR#Z0=V=RUu1>/$i"dh>MV,#D;H[r%7e?2>nnN9dhQcsn]!ld-HWsW_.m"hWAj84YRi@?jP@mQ\Hc".eWQ^d*5U6*?T"pOG!@G3sJJr5+r#I^D='dS\_;a?$nFui^?+R+b%V(;#F_]P^U>@*Qi\#XT?/9uRgSX/BDb'UPl;u1cCs.GNqiU69U5it5e\6!"(oX.r6PtolPf?Ht!q8MMThV6-_[J[b]!!9W:"lZ3'%FiGq4J(f\+l-\di>$5PZ)S!$`D=B_cJ'cB1Vg#:Z56aC-I'H`+\/`^cQNr0%-tj[G&pUVdEN@Dg>ub=pS<aCZ;Rp]k5M4T4SI2J_%QL^CH2IADn$?4&N>$C?OcX'ec0hW/1,)!cm4.lHp`Y-'Rip#B7=*cl70ZS",HQ0/'lMWCed@6Ksm)n>ZVD/ZA3r%ZfW2ZbmhFdU-%^\CjX7p4C$<*0-E>pNjY8cs'H#o6Nf#s_]s.=Z^pI:8n"FWh(cm#@>9B7$ar=5WV]8nRHboHT4fXW<_,Ui^n;8:uTK(+\t'h7)9X%ED*%^m[`hWMah,hG.2EQauP)1Flf^4TiS[M2SHg$R\>lS>Q@e&>u`AE+S2#MCFjG1bhi"2*jh)WmB+N<K19'_Ffr@)jlc"TFE*\V%46S,/h%Ngpap8O+`V\gR4SH--oBE#G6X$WlhO!t]Qu2THOFkXJm@GW@@=Z7nbIh$TfXaKQrjD;tpq2`lP4cQ$h3)l"q9UU?[5+4R%U,e)27WIj?&*Qa`44S,HS%D@OOR;cYX#1M;TM#Q!c-UAr-+3Dej(K@W?/Xen5koloC"8@C`Rjb%IfCE6G("q*R:5DIWkKO=c+B_B%>2%a^B;*H52+W:n-(2:c^.?f5A\kp8)hT,_0A7_c^:n,SMd2mb]?QnqE^pZNCCBdNi1WO\VV2CTC<6#jdu]Ma#BsArI(J-gmqO0>%46AoM:V\AhbF87b@HsV(4no2Q<l?fS)=qQX!2CX2Z^qNkFtV_%=2ei^2XVHXf[E3IaF<V,m>A@\@e04+#N(Mu3?)I#BQCU!Qie8G%!#,*_-FG%!NUP*:0N<92oX#E'p6<7C*c7@U=[@f^^upIniou*3kpA6ug4<TA&rB4CI-S7Q@<(n/5_4L4qrJKlQY4FV/<&R8PWrm&%-%q$^p*f:_Y(\EoW7h)WgVT-^*C`-R:P3".kFdr-k7@Vd*0O\8N)*K8k$?T2Lb00D!Z3/8/ahe^8>mM/)+>=TJO]/sQ2rMUKS9m;%B%5HLWL,UMQq[_;)"U''c^<bG?+=N7/5cT*LMbY9W'=e=gMOT0*,<$`C>]TpBJ]rfpam5%6))EH![*mF&+sM\"l17:eWKc];1<;2%k4"a4GiorS)1Iet@REg%'3pJN]TU[p/,ZC>#m5jr0HaYMFIR`[dcL.17kH<.QXK'mZ_YGLV%2_3O!F>jphjB.>Kqa8UU@T(U8@65%MdX(p^.UBm=!-Pdo1MZSJ,_&;Wf/VZ\A;=P4%#GWko9!7J1p&.B^eD?+.8B7_t6%F?[6a8SBKZ](J<<&.C&e2]XY-b*ra5+5k9g[%?$%QoV<YDd"r;$Ue7RL2Up9BmIR:MM2D_OOf6]G8^[_A"k]K\#Y?g:$IZ;S`INp)PI8mRRA^@W`OJR%Q'HP,Z<nLpPP]5GL,6D+K%jP,PD[JOj/B-SGP(>uGk2g9Z>.%tp;V$,@1G<_(.'#QRmQI;#C8IX4h[/+SKbok@AQeCKt5(>X89!OZ3pIlK1-,31Okk79]AupV4%VlTi'Scs;5/UqO(Z#V8ab:p`SRs\Og=I%3r:BPDCdg*LDi.EE*(Vsq&bo^OJqd2\75oY%a#]V3fV9YZOh)`-3:9P.Yh-kFEbiqeH%aJgl_\]s`Hp&`m3>PuMD[f38%A,hTb<'.5KIO@!T?K[e+W)8=GCP1I"r0o+32[Ur#DN=jhPg*c,_X'nF<[eJRJ,D"nMk*eTF>YG7%T'GF;#0?Wn6ob/3rV&YSo5SXg-N*FD;?&'Qi+?EbbMU?SE(&".$haX)7ukElr69-(3B(bdVq2mT(6-CWi:<"U=l!$uZZ\!RqY[_3%TIQKUX@bB"[Yk?&XY&ZVMF.:*5X%C_SZs\hm1XQ8_n2^dIT!jK^:&1EjstB0\@Y-:hnuoZqP]`tmIj=5h(u@I.Qq:fH=SL>Z_UdQ%p!9\UqXMf?*ajWWfm#sB?($-XbPO]bV`f<$/du<[=hEtF\S1L%/;Y=$)>hEbi@!BEYV2lTQ1Xm)4`tmYXT7AG#5jsu7L-<LKrVkg%b^C[+o;0^@k>(:(4MA-$RBAG6q2&IGcO&hu'#</C<"AQN=+eO_3G)%>2Hni#f@=$:e][O3'%VR]%MQ7!o1mXeI.\*c6)tf,_<uZ\%fl-F0WfVK+qa($,H[:Y0jV-IAc[k5e<c=S_/K_E?PBE`^G62Q0jmHq-*SrL[K8a#i-]L`n/Zr7#Q^S.DI>=tipD+0KPj-J1B8o0,%&O!bZimtNh--aBWhH<TkAM4na[+`?.#F.,84Llq*.50#h#FPG0>j4b-:>$QOe)i`R])6"M0Hoj/Sb&PfjmJUU)[8t%#OK'lqYKCX%/1'9;\6!h=DPO&4R9)6,q=O%XCm,;RE8FZ\HCB;I$7YKb`8=;:YQ`80o*_D>SZAU0I_5CuF4[m(l$W0j6b9d$X0>on]2+%VbqsOj%<&#*0<j&b.E3tL]N=4MEV"83KDt:ljV8]J2ZESFPGmA`=XlA>DjWLso_T%SKp9>q6Oo,ET&Ec"/(TX/lK,-_/?M'NT.fW8D2aj_'%Mu6hk?5sC?OcP%2+*7A<8-P&Mjt<tXf<+-pHN.Dte*Os&Y;ejqr:U''hHW6/#*Wq!;Ccs<X+$_Pg2UgV\ae0tGRSA0]dfQ%2blM1%2RMY4D]D8O5P`rF.Vmje"sbG686&E5g2.@$QVk@J9>ZX,d6\psaml9;aR&E*]B,7Ioo=edbhWYTmK(PoT*lc^l%cJQc*$7]T_G<R%-1M1q%h5hK4qDpf9E!PuXL+!I`s=S[pq/:^H*=r*bK]iO%N)fs.Wr2o]7)kqk^o2iZs3!Ua6u#X3aGes9,ho4[(OYOD5KpO7N<V?%>`sc<`_#8tI*F,7g0i$T:[q(b^').LHma&$:KIR,DJ$/u-2cr$1O5A;c9B&jgKT'^O$U^&8\(&gnH,2>09u;'5%nIo<1(#J>>WMk%dt_*ZI9c+jDDD$OR/<3IRn0SeV<c>'R^uW>&@2C/]J*\r^X55;`Ld'\j-$14..#)+VA4'tfk4P\%5Z>dbN<^.\=MIlG5"8:r7l5G%fn@M#TN(b99RdQ-n[2?-I_Qj8I;e]^_b0WsOX[E)I!l[J3W-JLkLE>\gj65ll]8t*!VP3?rESPnDWO'ik>r&A>(K)^hW_8MpY>4=%f%sA;F(I(O"h]*S,I^IX\P[f9T*P&^I?,qU%427!Y)icbm4qag^XU*QUYjhE$Jb)7^$[5t\\jTEn3!Y^GP/$J_ht*E5??.fcE19!%hoRt'a7N`#E?Lo>XC5S;Mmm%fRcV7J/%aP-%871m2e'#alheEPm=q(`DqlJune'!"gPWH8N*M'Fg2R+p?(Ut/C8K#9)`M.>m=%X)%N1:,3Hfr#J\_UI4f:lg\_5Bb_^`qTA]B?Z,$Auc5%aU91?q*Z&NUT?.<VFjB-dA\^*Mq&(@,t")`<TPhP#+;BJHg=2;HJ0?q2YTE%5:d"]OTOj*r`DB[k<Y;<0$V@=W@kV<kRti/G4;%D^`pMZ82RrRSc_p)dRsI5k:3=AhN-33Xc!TKhI*/8]2B#T*1GGIHL'MgJA;Y.%SL:roPSUMS@;]WHBQHIA*?ocKZ(?6ue87au&B++q$8&_j]iU6sn*h0f[bm<.H?5L]i6<<gj+c'`BkURW!H$E7dREnD:g#mYBip\L%pX#KhWF,-C91jW(If`DX:03_?`Lb]6pt<8=_N+3,H[BH5h"EDXZ%[QVJ7F\n8er'Z7L?=K2K"cOl#I[Rpm_Y+[s\\.n8Jt/<jR6"%;b;?&S'knA>p4'(DeIVYFbc:P:\dBj?a2phDti]h7lZ+-6m-?Cc<'FqLN8Pn0!&u[#-HEHI;.efOHFpk,i!hs;K9015[3+`20G"k%/i-Srre@kqe-;9n<lgE4J(iP46o'%cY.:Cj:b'3P4p[F("n)>7D%CHr0"pd=e9%nXmB0K1`"Vja0P24Qao=&(($t=fWg5i!afE>&%7Pt/9f]gA"5^pL'Yg3adp;lC$<*_!T>s;:Nj=$BUQ25J!74MoTo>i'84mW@;W2%Igmm_rE^3[@C$9R@_o&iAM*dLlZV9SW0F62n1%F5Gb)p-&]SQs*]l8fLQ-@!2n?Bpr?)WIpGMrs#%khNKQqgl4r4f5=7[Q.u,WiB\O;IR3Dt#uk]lrp3t$Hl8YW%&s]sXi^mhcYorq%+.N3%c`.%Qd-?\'WRad][,mK'ROjk;b-A\F<1GP:[n=Mb"m6B27%VOf[F*e5CV7.OS8j.Ml]"C4Eh0>7T#n)CF1HXEJ(k"8$tL`S%B/DVoIN,;j:W#tmD6]%JUJ,=fZ@E6I&t;AZ/iTa!T$,mhiNH-WkO#$_b;NF_cYOQd5U+7cea542YKoR$i*?u6gA0++C[fu9FEo0;%3k,j<94(0hH2GSrZ:%fD]`AkuU\b\;H.!pHU)7&(o&aLp[@+(6Y2(,@;K6Oqos`ER=R]M%%AFuh>Jr6J49^Zm\LsEom\0$rO#r""%ehs;qGu,")_aa$jqZYhl:AIM^MV)bqcaTNJ+E0)[50[I1X4)hW;o0NRO+D_[.t`ha;Wh+@q06JI.<P:0e&W3s7\e9qmiSUR^s7l4%9'3;O+W#%e)1q_0kHtibZI3+AIh$6U>MpHu^q&00guI)$XDYk#H!C=*W]W0-('mC9qn[/5kaZfm(]![nB;q#mm'k+r*gKO-kDp!c%l;0)7?-_li\chr63&khLL*lIU3T]X+i>fu')YkEl%XSX)YdP`$pEGWs+<NU>2r$-SFf"g.[3g$>k0DK.e.[`U_dhe9m[\NuBD)5o%]WlstGJUK??G-@jRVJ:I^hTaR31rKdqI&Hf^]9F+XI`d+G`%bi`/--]jZ"j/W_9P3)S58cp$Fp+l>!<--se>5MrMbdprG.q4VX7/%5"h67o`:NAs4asi_;'<S(&YX.S@IdIj;@-&kj9!gURCki8Rr@,Bo:I,>uYc_e?-@?%:R#t$.Y$+U*KCrh-%O4$_Pi)e-WXWCA46u%2V*.Cl.!>jMuN:m%=k51m#tT)G%^$XCknJ9nX[3f1bu;I,faZ7Bal;,Ecd$QK*WRt?ENWENA.tf5hd,-J9+I0E?>dDZ7_-3,7s"=%HPFcF,erlo=\NaTY<mQuqCP5#d`:VEcK?=25-]gdoC]bEj4sWeDf"KY/dF.6@(Y<C$Q!#)j>q/4GM2W>"ogTLb.RH1erF[bDOsMi%rZ'4cZ-(g+C@NI$^>7&rO2SU$p?p^6Tq>[Sa!2CD:1(Kp^"7lW1p<W^<GT0.<78fW2jM;Z\Z0e]nt"%u\NTqfI*sN0*TUUmdNLUJ%EoT6*bH+>%?#HgXEc1S6p>f<GHWtQZh!tVBnU#=pjlBa<>Pi5gh)r1;qOX6N&(difN65C[5%a'7em/VM?k1?QO7=2E5^Bo-07o-t%hrC@W(+.=4HLF9Qlh^>+S$^a.3@Go*I9;NK^!3%Jg:].E/,J9h?+F&*0%DOfWt(d/*<NTgB(Z5F45tm+AH7Cf^$'/3?;iJ)eCXAQ%rZquY[SQ&neJ(R\Qs%2&%^+LJme7@M=CUd@VbX_t'A_Q!^5G@BOqut@SDnF[pp9LEH#0qn:Z#0R#oJ:Yl;,H]kPg,%$I@N(rc?Y7%d-&B3,L<$-'Q[BjH+4eIkiQ,Bmk[PkJ'^"6YqXM,YPJ^^?X>h>:rr]>\^+5lq+gH%ZuC4^X7Y\^n"B8eK3namFQ*^$-(SIYp%"sm%0IX\t4KD(Pd%IT7m_\pfs.Hul&sZ_YJ'6^F,5C]/`g_UP/MDILRbnsh)L,*:`Abb1dl[Mb4ZG`[Y2DTc<jY6ElpG4I\=A:>$f)Cq%HJVU'#N]-eo7N]%5mZc%9?Cs^=P'3\SaS-$H/CpbdSi>Cd(Md?iNDJT$9Ue`dX8(0/1g%7KBg?U-Fo;nH$Jm!PZC4a4((m6JP%Oq%YOr?S=:9=K[/..Ri="n_g>>GMkH:l"KC5lO:Rj_%0(*/7[?&b8s.Gj&3PF<3>==+HNhH,O?/6)bF2ou5d.7YQ'';`Hn'#5/1+CPB%I.c_#g)*e7r)R*bhO!H$#DMaiFFN\V075FCo6=(]l%SeT<Gr'O>5E[s9*'Z/XO,L?Xm\1sQ0cg=Af_I%g=j=Q<kA.5ZOo1\alD6/%*&M>s^0\N*i^"0;H!id=(filX)F`OLYE,&gi1O/`\_WS/TWha1fL,MHQS8.Zph4=%qYB8Rnf@@7kA<(qd$GP_E.\ClP,#6F(?h[F%b8(%C:JO-gDC_3W^4STYZKH[hJkSYO[a3Ap[fHb`<9]b@T2#>O:J357K@DRO%]Xnf$pf^AM\jt(hV??^I:NaiRih".(X7t(]Qkou%6.7':k&b$Aja#L-JO-beB2B<>6c6X@?7_PLIZ(6J9s[50T5]$OG'Q0Wk8lI\pHK-'d%He(nSj_`HX,K/=I"lB;L_(K5'BA)d%-E,%k+V(1Un01XK0Baq%p\=(\Opf,D&o98F3^F4MCAn9R#H!koEBlI6gp[oF(`H3FT">fL32lV:+gDC61[0>7n51&(EWG.gB5T%K44!V%"J:KCo='ADI2J1hOj:Q1f""C#o:,`'jl5jee^<E.F-kBcqQMle8aem@#JNtECWkI+Xade;G8FqcY0A9S`<s3B-Xl`*3kV+<1?e]C%gW],7p+05+GIO=TVb_YE^tli"aDB`AR/0#@pQt#7V`2bD^tliHiVpY[huE*frH+9!F$o,n9CL1Knh2AemGW*$dtdC)lb[eapMTN^%T!:+$]B4aN,C7b7jXAFsnOlrk#A$!TmUkaq]QmE_\1=c>/F#s_^mNIH]sX1^J,/;XpK1>.[T;rLrc_-j5/6qI9%piA`n8E#=$,<c%YlRY0J%D%dXlt9/mcf\FW+C@K72UATIB`Noo]_^7CJ,`Fgo]D<>OuW^l@2mI4])IUVcjYOhW^rajfeW.hn.""o>YofmUXB,Y-)]V%SEEQ.W>)q5*F4s,(+\jGT$(tm5<&/?o[<0R4Y9`_mg`^V;le$b\Q?PXTIYf$>:ZbNS(3sKJ%N1qfs<iU*YqZ.iniZ2Q<rLFSs=0E%9F,jek#N!O)"9'-.Mk$bCY-nj=2$LDk>Dg@6hKUOH(a90bi&r^6FYj(n_j+ApD[^C/`H5iO`SR^c8)o)[mTNKJ7sAgZj-ch1=t<-%>6,+M?3,6tkE_V64M/7KQ8.3d`@e,![hnU+r#`9TBBO.%inG'rjIh3l8*hOa_\.UIX3[3L6"s?]:BLg_(D]+.N>GL]]8""G%N0A4%NXHnMG?;Pc#L0jb/acKXKcbd=BFVT.E[1@9*4/OJ,ggsF\f_2o/1iG5K;LS2=!u:daLZ=6(i`d+J'c'g?1=NYl3A=h.'-&%3s<>+%hB_k+DaB$,63c8Bf3N^[4Y4$4!XD.0a]/muf)c1GE_P:rnkbTS"'Yj<O$B%c3#OV`[6%[@4RKq9okQR;\ht;!7t(1'SKt!7K%Umt%1)I)2]7?g2;JE\r5;BYi5*_9/[uV,2&_(.W];HHqj5W#gf+(N.Dp7uQ@I:pC>Ag&bJTtFK.%@QA?-#!'[bXS60"mtcL6ltR=s]#S%/_C0,qLuIf2@gO7<W5l*HRs)WiJ>27D'_dO!m0ZYgR]8<3L])ke\hUBR4s')-'P9.!WGIQE'r@Wk0-S;#V,*+\,7:u5Q^Ph=(h$c%&i*C@X+!ufr-`'QrU<CPS_>t!bJ:#oB[]6BdEk0>Nl(T9*WN\nI<$G)G*p1B./;^:ZGp[hQ#I)mGHNT[UZf11D"<MC&%UW9UL4?d%<l:%7T74E&Ne]j$pfJZE69;`=c0PW^#:#.U?iIU,OL#qN)QU0ee/"DFVSTp)pRE>^9tH:Aq7$?*P/3)_p^&%0nlj'aHBcHjNuYri%5#h.kd2k5(SeX_?lL3G4jS]\#HamT)ANmV&*`!%/<B2fV/DJe'Y6QiH3eBEsH-h<I@QRstXopH4Z]\\N3'<W61`V9r>_klBP-Kan%-:2LUQ`EBMW2'UKaqBHO?aejoort0X&0OW_.$'XpMpq')ki-Ye43K7eD0;"8gUiM2IV?Q#Smro*I6D]pUnuCSVK&tb3eW^]pN#t9%r6G4Ah&G*;p6^3_e`Mp?TcR:sf2T@RhN5jSZs6P\N*dp6R#XC8]]J<dOOM_VVA-tRF.\_&Rm1Kd43N%qdp&U=>5noWqetg3/)Q6i%rX?CcVgPSM0Tpf"H^GqapBm+9Vm#_h=W:H7llrg8%a9/t3f5B?AgHTpfQBj;;70qCO\/*jpU`DTg3PO+5"trm/f\""^0K```;'sM%l-(N08I+:(/d+nJjK)L>Ib7:#TO<FEpG-!690XmDA^\P'TAN)n<`S"ZW8n)P23r%#=S&hpj_/:EKeaC)86<gkq&#Y+>'6$:b`T:h%^mJ?#N<uBuf<XEjXF,A]EBC=MBW3CY>K?!q_6tLGn9Tq5-2cB2a'N$BRS!e;$@?)TI,\0%Ym2+m)TmhF36DE>A/9ihSReBm20EI=%m)4,F7WDp?8r288mC:G.&>f8T6@hbKR#3b`pb&.N,).I_9I3:<`0lG9[^7C@[4NVB'".'hT&En&`O941.S@F'.?*GR)dAbSLmq)b%>/sk.(G8?p-WM%C2aBW)@im_@]7Dl!TD/[o+Q/"Ml?L&mR<_CJPF@1*!!sn<IdPHP!!%C>j8/Y(nEm<L+-.SM$f(g]K(pJ8<q,;+%!)&o3l@1QgY_X6^WHR`VJWbRVqD^Z)55EeorQ`XENJ/q=$d-$u7Fmi!49SgB(qO`%=mdTM28DkTS1AYG)"Ha7R4PLbi*#%?&X&D*%1IC*IB[#FE\C2;HIKqr[E?,2iU7C3[+kZt$rGI7Bf00LG-toRd_])!coO('=:D!87+4+3kqo/`"\S!W$5R53s@rrr!/AEV4'IH5,%$S=#X7'+]Z$IZcC$&R8qU;2n$A?<UW9V^*Jg20G(H;3Xs!M$P>?qc3'?^MUQLKG"sf"Q>lYq=qkTj%tP3J&/:&[%bP@(dP+F^U;1%$K:ULo/X;NbI_W7GTki>c;cVa5!Z8E8<\8c@`6nd"[MP'U[:VN1)=?SMCq-o=GdSchm-jBYTq*%:(1>BgQj@hZo`a>TXq7c[I-@d%=:i=*W58['Hk^tSKYpL&ep"(!>TEJ.M7/GcACMJ[X^!:W5"idQ1-(S#1"G9a4SOl$[i`((3U(AJH;no#rV5h\35&-Cqg$T0M>_eo%Stl%"BC6eWYr_K0`HS@'a542"-%$XX1ua8::fhOWj,W_l'mN$N%GC@[f]*>p,&T&DU67>th%IuG.UQ7XI3dOse.U$"bB8"5'!;3$%.tgI^282KEIg9ogpdm<ToBu'>U!D;i,oS`KebSI]r`'A`(2*#A9eFbss+:-9g8;[!b[BlSp[]$-F]P6E_,\eA+dXcG8:EM>2X%qq%K59dl,iV:jKpiZX`]NYDX.H,i#nnD.TYJKaFJq&<@nRla)+2JCa`q813X`@\_hG0r-:;EEB0W%O*O!XWm_-VHcH9WC4dJnMi%aFC%_N9[9S#e!k1MK'n/3taT5J\itg*A%i'6%U.'V2c:=Y"8/?"h<aS!ht(O$A*)E(l<'q,e49bYK&/&]KmX@_%QIfbCBcJgUaa&Ymn=%[DhC<fZhnh/Vj2Og\3XX\o9b`Fq_d-pZmO7ijAQM6lQ=Am$J6=-]bG?;+gVP7i+4S0=Kr6=<$+O"dR?^.3kUW8Akde+(k4/$mLN9%Q-OsigjMQ86A.cFgX:eY$LoBkSCP<EihE.S0a+t>Ytb^Kf@M,:Eq4(kFWRu<$;82K](SOpU=8A>;[Qj,"@l:.'iW](8\9n]QDhk]%H>k<#S?s-$CMnY%cC7HKKZZ949>:@rT2E$KlKflb[1N0\I.mhf2OK_c7kkc,SkPLgY+5SP,sBAZ5quKJZN(Z6SBZa5hi\tAF!OH3%UcdD)'BQ6WG-[5EmPCI#`A/6f_VEl.<u"`T*R//QR29*q(LBBt-"g.D(LBBt-"g.D(LBDjGtYrk20@dlFKTAp.;J(`/*Pd=Js4g5%KicWHWs'lQTaS&sUQVs_TaS&so2H)m>XK<66"ec_9jL+&?:!c(n4m%PQO^-j$]L1+=[O!35tAjG65,N7bMIP"S6gCLHuLB.aZ')J%mZ_PVok[3\9&/9L9>r:ioZM8pqoEb%q.E>4\`E9*]n!#eEH9/'8[gf(Q)><4:YmQ?GA7_$lM,VC@-OrcjE*9=^S&m'Ad"`32eT>m%O\E?rn7?*'$#/H;PB(U(N'/J]nhD<s(4rI*OuXLXNee^rA(\CN4j`R@1P__4W.N3VUJaB?*oF:Z:"\)%>)(,o%*;D*!,\6*OJ#;E%]="5;1<?tZM.XDFW^s<+GMC..P5LXRW_X#2q.";%!*Y1Y)93<qEC6D*_"oUpB+`gb3s?">f%m^fLeu!;nhFZqD>lFIVA/"]H?4G_%\4*9W-)NQM&V$*?T%peV6hdmG0SrT&8k@ko4W5Y]m)CFrMRd6i>mr@PO&6)CWT/=BKUWYFlhF`$(7uTA1$ZOuCPRq^A.F".U]rmc%!GXB=Bd&MP_k_m*i,)+@(B)0?5Pe*;75,@jN20f_*FE>O9Pe<+F;]K;_ShrZ:a/9n=cCg4865]a)"Xr!R1NlE>9RJYl2N5dfGJZ7%IKePs>)t.]U+3_5);$$XOTg^+@LnE%7b>feFQ%<Q-ub^!a%OGI'sY=T42.aWI&k/7=*,^p)rg5[RUW@G2o"F6>*%R[m7SG&`S&fZ%XVhEsQ&A;/d@HD-T-q.e/Sa["OPsE/`f>b5(c?=tH$qS3_CV%ekZ=?,KZ1seFsQt7J'5FjaSi';=H=17bfNZZc8]6jW:IH[MBTIY%$*K)A;4\cR*eR&'WV?hUgiV4Z:P70F9^oFURF4V1;-Z5;LNbj3&/)Oj[;k4p)M4jie;nj@d3r?+9dr;u((71I)_3*GR%<Z0`D(q3%G=6%u3TuO:]-G'=p*+mq3"_Q!k0Wu0PR4YF%`XRN"QmM/%qZN<!RR.1cQG9)&WrdHPbCelO[7NLim6*\_?]$3)58<4W]k?YLl<("%7u/%`4=@Wu#B7T$ioG>e&uFPX*U<Ls>]ehI*+QO'3/a6DSLZ$L@j%qLETi'tr8KD?"a,-H0f!C@kVBNIQ)VsI;!r#LS&=6OO+k>-%N/Fr`;<?G0oqR8^G;s$FhFLpX5RE:Z;E-^'";fYn^SE>eoocb[-WL[H?<HpfUr%>Tn;Jo*7H`^Gm%1Ut>n?*?kFZl[>cd[\9jJ9B%AjLbniauI,2dV7(V"J]`]Y<Z)W^j_pE77bo`ik.R7L@9LS5DG><KHLLLmrNMS/G1oeXfu14e1D6!g[G)%qiSd,qRSeU3a<]?S#Sh%#K9SQ:suTuWVqX!Z.M(!SsKijgQli","Jpa-<p@Ke!JZ2+VZ^G1.FL'YI,3oLDTXDELnPJ%5Qq@Y2hqJ"T-I3*;J`VkGus[=@>0#%JMGJ+o\%AS7;QHb6dHruGnrZ$WF$!:p:LYJ1V<C@e+&cunou0bjgaDSi%e7Qn)gNJS_(r4R=6%1ok*bQ@,0'Fb:k>;%J;N0AVbXM%oqf]Wf8\0RN9YAK@36n+:hT2tbXB-].O6L'@XZIJg65Tk^5GfqnJl:CJM`:BeAn1!<hr&pZ`?WFr0]i>.PpNF\s]K@[5NNI2O:u`%W(;VkAfs%+(Lh#fWd`s;:QZBknQuA='%4'p8n`d/]JOcd,U4QUeso0BO0Y@7+@OFbkZ\DWaK]`cFiGkaZRjb%pu#s\i<YC]MW[Z6%$9);HEmdjq#etCLV/U+]"Dc^oQ,4D9Kc$)P;jG5QnZd=QG=[3Yn4*1<NVq@O-V-p-=6BR?<orCF[%>PEErnMn*fL[r7\'^qaDcMG%k,n*$amc*q$b1kLGb\#EB*$-UjW+IS)9`[l15:)tlK[AKKNC09d8<7oQnb7Tj4$%qG'9F*0"aE]$^H)3\m!5cj<I*ChKmkdXF)g8%3HoF@=jRYYQ(<$iP"KV7?dh,bhE?LWb@UA?;/NP\g[c.I*T:rj&Pp+^XZJ&)m#\VWT&\fGY4'Y@)63*;YjM,S_d-*DgML?')`jCJ%nI/#jf\p>J!s[j'd';;#6,d`8'm@9<=G7bV<]b7sFK"n':bC7UV\[Hs*ZrE8K=X^kn57[.T\a-:F?jFgT^$>>[)-]eX^qS>V:EK.%Z[b@;Kk0/<netbApC^Nn[`A[a\pM/1+##*(O"Ye44K\iffNj0[&tU(L#7mg_=/mbP&&U"<0.a=kRC.:WeZG@2q>p!SANIJpF5$)o%'Vi_@H?Z#AWY8dS.sMM#HNV;cVaN[g3@s>W1?I)N-GM$M/'\WeU%^'I-9)0qp2'OOQ?i3UiZ7mW[Y1ERjI^JsP:B)`PK']plUU,C%9luPgc]jSlg`UOr8TJgGE;6hR1Vm#AXlcDMqSkN`/i!bmq&scui3U^WMjpad25SC##%Af?DQSFF-/YXfN:Z)h:C2_n6;Np>96Zrj%!4n:`n'om0Z/[N:<R^codLd=c;)OmdB[k8,l%7L0CocftXaHXd)r&c]Z`9noe*D0nHtLoNn_Og4D)L,d)L73T3]B'Y>.PPJlS5I)%r8K9G)lR@J:$5SN(S'59Bf2HR@H`p01M&EaOgo2YdY5>8@DZb?^KN\b=3e1Ac>Q=.I[O%jSR3t>gJXJ/24^@ZC.ES_<__aI5Jr5D%AMp$N3B675Df@S)?WYYJQ/booKk"q"eT?8JFOOVKatSdifMpCCIbQ9%3Ud\`dh*VQJO'ZR@s8M6E6)3DXH@.!:$8,N5O3&F^CC[?%4NhJ#^[a+,6LIOJl27&a.Qet>5rG2D1>)A?Ta=+W%.tD6L;QT`l244QniXXb"4Ntb^n"FnpGd]i;u^>m`F\&u!jT:T]Ml'CT46F/%qF#B1R6789lF)+9X.0%BKV7r%r:nb1?A%b^H*V8mSfB<?4P2("+s%+k#(bsa3`XM2-8gf3+K"4L]%f.?jI4MT*bC>O`Dbj^ZQ9Dd%1+=g7FW5cRe+&2%$0/Adgcf\X"J>Ue30Cb(=_'n=4Qaq:Vb4Hj54pXSY1)Llljlm6bh^A9Q'$cBPIqRaPFq2kd+u23N?!!U,V;C,%Pf>oLc8VK]4m6e-MM0Aem\2^%?5@#F0m>pkDt,`HniKq;Kc&#Frgp1IiQUR<G1P!+j3TR8kQ]Db;cD<=oF>Bm@Z9lUX6Oun.N.Qb%SVY/d7uN8;IV$/Y\oDe@I<6d80FU_9Ljs:a;>_@$N77h0qCleM&b.K]ckEk5g8"=/BC33d/n//rQ)eJo5;6r?fhg4%Aj]S=f67.Y%NtX-0GCAG-ZOpZJQV%&\YGlYj1&T1UIV)I'\O%U??@fVYE7mrhit7\b\?iFJCWSVWDdfco.uN;tX`,j4s/ggMZa.&fALn58eJ0%p%N$1N3"etQ\>7F*!hg)D63RhH=X`t3ki4Fe4R_55:?k2j0gbYtJ.oWU_Z`td7Y%Dm0iH7(s+[bJImse,P:9?HTIoY3)V.O\dd)]FK%-eb]BrCg5;Bq8`knquEuTlLsI]AIQE\!4^3+Cc-A7.'IfgM:r-SnRpIJe2oHnE(U4dqt4O-esDf7)WDd;((.YEGkF`-ertt+/_:<%h=lT78PdJJDtsO.PW+ePcH8iGP%(#%(FM+)r<[])o3T+Cghk(li@aP&bu'WrXQ-%M$F9TY2(!S:.-g.F7P-0"k(%:d=BJdsIu=sq%#^'EjE/rBU.N`05/1:!O=%5DQ7^I&M*;Z'h@4gaj+OS<kMad@R=l8XK`+2rHG`U%;\A!B5,C1YG;W#.rDl6orG't8L,0'c.Qi^+[%U5,):f_I5+b*[&oFPD6.E]^U/S"m.%D4`q.l,Hi8mllJ5M$cBn/7Kg_A#RW@3`n(sB,I?lH#j_?Hn2t`0J$im,DKVe92%>/X\H(u%Zb%'p4VI4qLd$sh1[n*J&]['2fOO#ZKNf/fePsm1(PT-h26Q&BpYC31gFslJ)rkfg\Bbq\^;^m.OuKE3r2ZE!'P<*6j3=VE6Jb#h%XC"#d^1@/]Zc^M!ZEEXM8Y\]BE_!X?goGXcQ$YqQ8ULBs!L54Zfm:1[k71?-B=2BOSn-#-4Ys\13J["%f6ZqiLYJ>GE%7cEfS-C"%msP(mA0k;?>^E/o)H;C1IBFnUkIQ+p;Fsil'jUXfT2uuB^d2]-;EbU.P[ABE`(]I.X2J=3#2RO[`1Yt.f[eN"HVgFnNCmX_(N)Hu%2?IXnk#6i-C&7=a#qj(fDf2r(2hQD!n3Tn%/)3:@<W9CSb71SR1pq[Ukm&^[FQl?nC]k3IKb`R;hn#V[[g_`d@5hT@ih#K*6LUT1%,;dAdioUC%Zd%b#IP$!%D8^0jGW^#u<sH-=3A]BWC@[2T0flFjWt&>YB0V*iM+`;#j^Dkel-Zu`SLntsFc'=0.SO6',e3j:B>Q*C%p@hunA#7$F='N3dh.]VrH)O-m[1R=lNJJjN/OuV0`?62p`?$MhV,i:LV>2K>9i@5lQ(^4\9gS4l5ZN$%bW,lTGJ18e#=IDWB2*-2%8O]1r&i_33D??iMMpBe/2^L4PbBmtnadCDQVrJOog$X[+\m+J(g9P4ZRI[FQ\:*VAHhDZ&>hiUI2oZPmq]#<b_\`mQZSI/=*WYSI%gA'=,K&^%``lEVl0t+0YhJ59<aKf9pa/2@#m!>p-Y6B(2ITKduQi,LadZZNY`cf$qZaKV(E1#ZXQoB1J)^!`H$k@_*E/\(@2)Js+%E;SGdQ2shtoFeIfQX.Q9g"EFS5#qm&)8_Y(YT*PlKa<%DnW=d&+j+f;6F,Ud@upDTR1d+Gn2^D0#@l:d7HMM#U9O_t_U244n3%"2%XDr8QSoCSj-#AX%=UOAYpMiecK.Nj;1"$qq9u$!fZtBucZf%8o>OTW$b]dtgHsQiO1-oQ8L]>Ad(Ge^C"Wt$-!QK^%q3_4mKttu'%b(YJM6aI!DX^B)M!Xr1/,;k![mi`#(@dFd$4PoCk<If()!):R"@6?Pf%:G!/)5@NmD@L!T;p5;^')tA5OBU$K<If()!97&3"BPWD%YH\F&a*=e=$*=4Jb=<&rI1*4ZZn$l#M!VC<VEL.sr'[tr*Qg<I'Q2>dq']Tc+D=Z:*m3Ye,29lj:d0@h2X<a+W$lpNP=,/MeV?o8%qj/AH(OTE;/.^hM4MPoo6hriC3\!8'G=BW4OK2K[_:H/Gc5caWopb1$:d4(=9oo`A_7>!q(c+t\S&N"5d(+VSBA:Edf.SmTBdW$>%KqIWHqqY'\kPE/G2q2s4qDmYnU$m`)nm&s!PXSQr0oL,O_@:\'%&->=p%*e$51Rt<VDQ-"Ic:)r<-1Aaf"$7gTM`haSEi+l'0r;<%oa;#Ge7)@KlXpsfKtZ#aqK)VP1X>o6&go4p,#_;(iZn)aB*4Iach6n1D0&b6<)mXp8!1`<"'+,trPDiGb>Of&>X&VNrhoUPIidJU%C>L=%f.[&$^M2!RMnbqu>Ve.l\UL5d@(7D'(?bO^)_(ldq@PTte!?nbSEf:[]9qS_^X0+(F>."?44he+[*Wltb#t8#(OiCACoYq5%E0qGt4hdo@oaB[@)Q=IBn6E`t;uNRQO)KtEK#>moS,+]Xp8NKs3KGiALlYEX&aN]:n1A)ngNKT<rI!lOLf]HHUJ,g5+.9GtHE,kU%<G>t*B4+K+_7>#gqor\Sq_L7a0AMO.k<-K#cg#\Ea#AW^k^TViAEWKBlV%,g]j^P<^TigYo605DUWsS:qLtR,(K1&gf"$6.bHY14%qLtD!%Za>.Y+K?5*j9mQ[l4&QlSh,2Dh<'/JpN:Lp4estqF/qnbiW0Fn6U'-kr:ZB5%`&<^o;cm]K=r]$si&m3L*TnJ-SU&a#ho!%cO:r(fPJk+$V)L(=*,5@qUl_WNTQ26(G8J-e*+>kj2ESt4kD@"@++5_P7uG.^$+FQqMgb'(ilcd\7%qLZ)Q%A$TAJaFqQ/bf.R,h%k,Eeq4!WdWlPI9F6R?AdY$ZE;Y]"[O"R#Ub@LQ<F7.2G@4$kTJ"34\Q48HF9iQAu@`B!1nIf@LKW0#!@_*,q<+_8`M?3kn7.1Yb-%(WGj5-a65irH9pU-JlAX(;1kC-\c3rasGZF:US<+(Db6gJKVHr^aambP/2%F-]73*k#)^?_mrHYq&%^cM2PE0UV<n;I;*Tl6U/n.%P3Yd:Rq#4QpiQOW5M$q,QM7b\\@V:9GX"F%5?O>;e;N,[h(ug[=M7k9,elFkULii!Qf4u85;0ltj6391rHe$+,nID`.%WQhrENEl%hVihSo=Wbfg<CWKY?uHS;D0]boZGc+pN>1R95hK;deBShSuefTFZmK!2rE/s\Knl`\Zp1)<521dl/U:ecXQd-DBq:Y?/JdLRp1<p%"^'nhq6ZFDW#&(59(-TFlK+!tmk/]XkhX^O:L.o,AG"jDp2YY.mGn]W5%do"DZ;-LXl@G),0:fWH_ZjAiC33b*%]II;iMn5)<j$C%K'Q(=qh*&).NPKmdT50a!n'%uE*<1Nn4-N;.9&O8(4YsSLHh3=3B9cC8?&C<XM`ZVip'G4p2%"Dd?9]+e_Pl>fBW?96!QJ5dro^Z%OQfWa#Y.Np^_UXl5HjKfk4Ie7%M`qhJ8.*p?+u]28f[0^2;*#h<foCN``m!Z1e7G)Gh<Uof9a'b6+N,-Y"Q=AC'>lA=Er$2$G0Ak%DiYE$moPi'dN8F7OqtU1*E?@WBU#,!(A9GXXF-@8%%bIOiGJ&?UsKTE.U?1M%b9(cr][)>YA]_r[2agTdo#Df59a8a\)/(sAafY3%mn;:G=+[i0Jc>a`>Za?o+Ln_0U>ge%Lb)C@fd=KcpHJ?Km9`j@KRb0JnZ^Zdk;\Wd:+t/d>?+s7?#m:.r%AS$r#/$mGjoDibanU2%Ya>=.OQDo@[X[0[`XqI$6jNMn4gn^QO$OTX#a>)N(OY$4kc6gBU>dML$Z"MOO7Ab#mZ;jCfRMc89!>6kmmD.bh/)K+\D]:%Lo_DO%)fG8,/6?"X2f:A4>L,B,`XUL@_m>YTl.e7AOHspDoXDJQc"6`lidiPA)oP30p6]bUJh17"lBED3ZaaGCasDIM*^B4!fnG3(U[1pG%p6@ssoAE-"!B=j;.eY-5b:037WT]7J3N"E")p]7_-fh%/D"74Z,A%;K]nsA68*@&Wgq@Zj]=c#t/9P9F_.[aq*GY\AYFG]Q`S@cZ%@=O3K>Vh9`5c+ab`56n;^$<ZL-$oG\*)mua`5aKm23l7.^GiW-fe(a`Rh^uOrZ<Gu2Ob\qkGq""U!7e/W*2tU=4T`o='(Ggn_tSV%dVGcF=!hA7UWFP+"KsZHk+fC7:)!M<nO1h*WapDRYP-cSRHf1DOjE85GWs,393?kC'p6,a`tE;.Z:BVp<PWi,:ZpGEHJ+@>CI?fn%GuJQ$[n8lE)knj+H(EI=;D?gFCM$c2:Xe1US]85IAdf@j"(kTb$.&[@LthFNp;+JPg"7NO'5cng-NdeSn!%-aiX`&XklO92+O((s%4<V`'1,L<AneZh2Rm@Xj_oMX$hY30;@rq,3aD$L;'*oiGDSeoY;aZrM[r[[rNAf9>IImPKaG+T>psS.RkRX#[2Aqa<Ip7QhVekj?%TF1tnk?\rqitpS1gm]s'6jnbf7cY>!Mfe/<Wr)rKQ%D'b7L7;m0qe+q>kqEYF7':J@R?Vks(*tVp_kW5NnOd)+Ii]uE,^iY!R&hK%!DQP/8kNX]!>s_W'8-n*%Sb7nb1JGDO84#5+fkik&q_Gr[pJmNX/e$p\SrSPMPo,Zp<!<<`te@%,@/jLNcg&5o]`h3:!'XT&CsKj%>1cZ$aMNZfG3U[JAg?Y.ZUN.Q#O0U)fr&SS*/rDim%OAgM`m#:*kV.@%?X;&B+_;Vk.`\Zf]AX^;H+Uk?3^q"5*t-H[`D_$o=WC>%95J@ICWuG!T6Ys=k:"R2AdD`.p@J"@l^4nRrXm(Dc0C;D\N0-F8aQ&^m=*qs@h1=,gcBE4ihN+-!MK@]B:q\$m]h9Q?<)l'm`RJ[%YT\\K@)p9N_T(/4cI?@A)sf`!s!:"$9*q[%(r/),,^XK9\/]%cR3EXnNup$jmKfQM$@";@\^SlO+KO%g-MYm5I>GNW9s[d),tD4>%3H`7:o(4MinE>SHnhL-k.7Ar7FOrJNo2,d1Dh;LSRgJFrM(>At6<K!b+)^Kc]@,KmX"lSXh1ogN"0Z(fk7YP\P.Iht5I=N<(/"$^%$!H3]c5n7@/PP0L6'$R@G!`(F!"60G@[.QmNu&,Z\U&CYCFMFYiqskd3"s_MoW`"b6dl]1GZO=!9)t_;1KoqLn:YRMfQ]NumcFC$%I8]sT,N\NX.EV!@Gj/uMk?TPeCrDM9;*rKFE1H5O(uSoYV_ILJiIn],(;kr,g76^\b2K,lU9l1F?i9D$3X$1@kC/Zn?JV3'"H*'^%`r]pMcT?rKl"ZptY/VC,0o(t:kUiOHljBEOQ$,FTjnP57Kn'6GlH-^Q3pS=DKELVTTfq0#o^;8+J.Qa=L&m,iH0F#8U!`/kETYHL%FLEQ5*/?fraS]u_U%6YInLP2U9/<t6\\8i2R2S.P.70+W$Xk]8#>*<I1d'o.C-I<%as=8;[89I'+a(3frhp/CgV-#T5]Ian@??<<%eI[)K4a5=t]Jl_A\I%0ga)1X&GHBmhS3*)F_rSGC(cc<1%t&2YNUi*XB,mBk![abPU%NcH^?0T^E51.8/'X'kQ[d"omm.MQ.gWHE%8a3hJ["YM);XPZ`PQ5kQJHZUb]d*lK*P0t=If!QIl4YW<aXf\4q&Mk[2"&_R]++aYF5O-&oe]bRq7YP'Gn.p*\e`;jMLb)5Q5cU0%?ktTZHo/eT>O86H!R6?nN$2.#8*Ok"[K.Vd!3"MZWW&gbrZ!\(m!HqdN5^HHD\\oK59nnQaTuF94_>7TGD4Dk!smFE"$"?9RHPg*%kEC+:bTZ@?=$Q&h=T-kQ[04J@3u:4&EZ?[THZUEK&Tror8%,3)D/E\nn5?/,J7rgjiQVt/\e!C'<dNY?pBtE_EJ8_G@r,sW7*^DN%6/cW%7.V5'fpMj9XI;OUf>iUPkGIpW_Pqb;/LTuG6n&/%q[E9hBg!I$g\s[IfJfaQ*$3?'9V=-IWfd8U@+`>TWOY"_RC07/Y+Z9M%48+-k!Xed5A'RLc>OH#<As;Q`AMP$RNnui=QA<C@/TRr`)Vg$*hk@(;OJ&,b*Zs4=N_(hWFtbE>,>`n`'%VsM(`1!Aa/tK.`s2Uq%+&[J[\4,qN!VG[VYbjRD@p+=mU%ZQD,$_>?i,FHKs36NAA7mk*<K=t5g8aR]DD&P\MIChX&?i/G(uu-fVsG0qg$+gsfI^tC:>ZL^%[>g3\#:2'L`-Kp^V"KnJUES]6n]=s9O-g]Sp!"&blj4a(ZR(:-j:E_7l#Ed-U;<i^Zj70n;j<5N[1A"f\rVU,Z*u9\P3>;ZkSl%#%ID9^-fVcf5P`O\Ca0+6!gVXcp_PqNO^n(J808*e]0dJ/=fXM81J4>Y`*g;^.[of$CB1X*-/J.8b"?<'m%9gdp2Yhm:Dk.ICMdb4O%1?Q]i_clCm@_Lc($^V`W;p/lJ%j&4rBPUu3-jC/Uh+OoQ[d6_o/uBAGGuKC[9JBp2<7TS)G3Vi/GS/QT[RZ8=6<AGq\'$]s=6rKo%^=DoG)NK_^6uh6]&RhlB#VLRsi4=@EkS'hNdfNfB7lBo]THbsc#>trt\hLg.kM##Ne1J)/2la?7;KHuoI_st'nR:#mYI@YVgm]'3%0Sa(Lc,,#l+6DtfMFJn=h!I0kIZjM%>=7'%]1W=Qr@;NPX:f42'!\1bRY?1YY$tRA,//:W#(lm9<R8A![lJj#2f]#WJgi4t-3"G?%F46VmcdD-bld`R*VWDJj_`)e8T?'[mKse760)nX>oI"QN5&q+\"XLjZj2'LWr:?o8$+K%lkY%TE)JF6(?sdmGUsaYWFFiX%>sL/@%C@uj0D0$1ohg"#H"P6uL[FXRDB3tj1O3n-b91ePnP,ONPaV^SQe*>#'HaVT3X(([<A#LC>`$b!W1G)n:_i@*Z'9YSIDa1S!:1-1O%jT*182`n\ijLW%7ZJHfumhYFlYn&<nMun)cN.+7@6q-<T`oM6$+nL9'NfKP?H>)6tFjOTEg`L;9aT_Y"["eB3U)@M7r$-@*#/(4E%:*rq9&,Y]1"d%+RJktgZ(]1_KHdLQfV)h>H8<6JGK\UTs$t4*\co&%`0h2=&!11<%J?JLY/]-;%2aq7;c`#74D]a02!"JY)_?J.P%4SV,d<9R-Np(a7pf_@ll,4*CRHo!S&lhe2rb)mm:h\+%MV[21(kFF+#14:efroMMA(]VU"^UGg:7j$"597M#C+_0uK.Zq-"NB2BH%]d_rlEIVZ%,b@GgJ='k`lktjWc.3#.A\Gj7jP%?B6d8/Jir,gNp"9&a8G^c)ofD`d=E<kh+#2O">q]h)OVD"nG2#t]iF.-Wl2W&i%gCo9RQYXH!k_tH1c]8B4ER!qi.M5rUIW%'#SfPf`E:q$_]VXhMo]+5!W'b%',gO\jD`B=2EU^R4mS72%4a%RS4GmM4\['UGfD,TE%`9B@'2'%kfhtP=Ebth^#n8;p%1&AKR;,(E15#Ii=-,.B;m[TJPB89NJ(3l.tEUjTH.0T@DduSb3d;S)q\U1EiGe7b]iSB#mCEE65%lnZPHBea0ET"nIJB?:I>]87mGn*mY2T\h*/d%:Z>l=7W;lZ4$K:?=_b*]f;971W=tk>:iBUu#UWT;$]+dOk?@eR1AgcL,GVA$d!K%*Z%c$L7XEh!<Y9nVC9)_.Cj0Bhl5X<4N8HH#+<!WEC!p`f>ejO4f6;_bdSOM6c,s0QbPRWOS83^&.iFeA;m`bTE!c1CrD!g>/#CE%;pm.AhEVIMRq$.?c[%d'qj,D*$%lDaIsW]gPHZCn?po3IN!p$bo">:AN+pPTlbl>D6gs^YHZ4$HdD\a__g=Mqi^Ueo6;mQ=$/pCG%f_SIi*HZuP"".5G"?-#&]-L-:&+"fO]8uc;DC0Q4^U1;_$DEh<i49b.b&ajNqL,O>I%n+-A_1gs%TlZ.85R"*++C3a='On,oA;J3%FK^3ISO6f5L+$jXa5Yrr-3]>:NUuM3IlkS1mX3(/"pWZ(gqNHp$&@C.9g4ReL5[1]#lhCQ3u$7t>QCAON:G<-]b;tS",rdc-cAAo%&20QaqdBgO\;]j")R4MK?r>0IVY_1dhK\>oda&h6h71bRWuJ3tHZ^q*5OOC#HlEo;G+qCJ-q/S:1j<&4%#O0!@q1IJ0o+_P$_t/J%Ej"#='P3OWJT\O0>i2M$Iq)[!e9S3jO[$MsW89ia^>@ZTfHnlP2U+UVo;iV(mthc8iin$\[EWN84!rO$ho4km,J15GIee8?SY`K,%Laau<UKU.?)`k'E*G9d>Z:p@bh_a@?9`(uB%/h#)2\dMMVG;@t/rUAVPO4q7-b`MjD-+d0hV!"@hqK;m5tAcdC\]5h==,bKI3icb%cRt:9U<\%:pb)CD#rss/6797[>BY'R+V_V%aU)1k_RLA\X_eM%:Ba'r?FrB9aDu"of2[T51iP%UP?=3Rqf>rQ^Ru)9)To'$O4`Ej%/+].#H+&L@1a%+f]0"cWrpmD8O?.RYI@N5eRKE1:ioesHb`7le$GgR%YZ!W>rE3(FajIEOO@:8JrgZak)crp<$m7P'^-".)kjAl[%W`0Jufc?4t-Fh;8pR6*YZ1$/-Ar)q;J%YW?JZ;rs@LO>dc*,A?HdKpTE'l2Kiis%]EBYTZ&U`*W83fDE+pjWG9D5\2/IWAo^8XO4%FYHce3_dCaJl@#jWlBXY!WI@M:F760Og'&iE8UOCH8KJ-AjoX0VP2(!>!j$mc3j%'.Pg4s"BB&[M@;:3OjW/@SDu(S+HYh_0Mf1m%m8!Odl#uMbO+$Gc9rUjm`g>"kk+U=7>##a@)G!n%fY.nC4a;A;]%LF7s&`&*5TO<:]EKQ@H.0c-O!+`^o%>oRn0#U9\@_8pH@.=W%,r60rTL=.Q/4U4uO-4T0PJT?^)f0[[q<&2"S/XN%B"u+2XX)5sQXY>E$29<@77unH74*j74Bj(C&d(LHph9DS-LpJ-0>dKm7ee2F%iTKSu(^&I!4n$*.#h(Rh]a073.*T5/J.:WL@JDu7`d`ksV!B]V`"ak>dr5E21b1f<5U*.Y<mh\$`AuF5dQJjci!R>RDaFP_X>':;%r_pMLBW*&#BQ'\-CVfnXRX=7jcp/L+pI?&kA4Tsk$m]-E)e:)MqP`^i"qlg9j7_jXGr)^43q(q\F!a08fTEfB$I7]oZ:GC"7qB-!%:(Xd?%tf'fJ50bdXa8?u.3/D?Uh$XTB^G?$P4(pL]g5R&os+L8a__INqmK4"S.U(1J1Dp_Qp<0J`e^5@m6Num'LoInoI0ftVPsF6%'_^SXpXV>bqTgJb<mP0fgr>UpZ8l<Q&VbN(9ZYCa?,h:+TA9)r2-59D7L]FN;+Xsph>f8`mm^d'7Pp0G1](CrHjNHJbaO^iEEi2U%XouJ&WU_&Gg@MB5*+io>Iu:^K)_nB4]Bt7XekhMe/_^PDkRAIjm;._IqeYkjCg&QK))(9O'_j^m(6Q45drpl1]pm"gBZGc1&pa1F%B&c0#\_Vd@lfnjT?=<Ci=+0>eaFhtYP!TE_G@I:jG(<hmYnucoZ$=<t-2YX2okrkF#UbMDP5*0=LdROA2KDO=+&:8t%\jDo"+\=0%,2bX.YjF5]5ki>2J'Eu9HS6@i@=!&92ZgN85^kL33?oC5^+G!j93[#K$!!a.2nHI?N]_+%&=6X7qr()lE&]Hm9aF7;VobD/8Tt"]%5.b?F]`IogP2d@*WEf5gkUJnW0h$Pe.a^ZG16RW&m@CUXJC?UIF\V,F[+B7*-CTZXTYYAiR:>n6ZBs"mJZJBsrg!I'4M+o.;Se*O%>s"$gZ=X,He(q=)c/`\[GH>(SUHCK(GD5C4ZKSp*m^ZJGf6>,RmqY2K3/HC)f@J+@KGor\L>0<jJh&rrKDad"0o9NZ!+Z,.$I;Fd%Ac3hld(&q5Z"ISk%;:k&6c''(gc,(WZ/EFV8SDu]CeZ',aLK+#%R*:ODn%mVn(MXMlaY*D^'Su96e94&?@[I[cV8LWhB5#4iCfRd%Gc$"oj:$LeJ]mO1pPjnda@DZK1iu3Y"2sc,E>)L]OWS)O%pgK-\1t#0gQP+(M'<N=>gb:GZ.k;3X'\<pdHO6]clS=3"sgoUi5R*]%k-ip&ljVmVb+%FYqV_As5@/0J1%e'(I/iG1<Sdt[0d'(qZ2+_s%>6.nVa)&mE*O^oWNk:&/*e8]WHTMcF1U-s5`5Th$6G/br9<af%UAIGRs(c1qg)/OBcWZL*5>>@/,4Ut;oVZ-OPB0(XBr+=L;D/Y"&g&3k4i**l0)t]o(k4/ZmU*&&""*r"S$QZ7;ioXapn\XJR/(\o%[\2e*'@sU$#Q6f(p?^T(LaHR(ae"J&nEeqG$CKeGf)4!i1[XcD^GC_DStEqKMqaa`kJXJ\aWk^aEui4@`CT-e]t<SJ^tcQT1G4,h%(R&"jY)(Of',^p9*D%;klYV<_(+O^<\oI[N['Zd.jbObYXS(O@/PT0,oE7fc:lP[R:@G9SRVL?-3i61@DnTGIAM#Ej=p&V">T"F"%C;[r(HPa(JXq%4;Y:/*7!["O*_][7lo0J:<r<P2u=mNt`=tAVaCV@'QFlTWaZ)@hhr16pl29XbqR[<`iS$-0RH0hL4cY7O\b*E5W%3fG'Y3'ue('Z#ppgtDT`nQ_3Y'E1.FRDVC/P72=_(Y27)1nUgdqb9?(2]@^al\H*M:JYqF%rTIgK!hPCEH>%Q`*5u!*0P0f`-Rsi%O:6i*hC*%nOM%_WNc2@-2nj,f<ZOM)?M+F`kGtc7eJ#H4/$-=*?Vaa/7HSjf>9rjc5`gFBDpN=;Y*6>Y+DOgW(M>-]c3nT5^a2q2%nHUTHm44%_0;"@^!@[0>mcGP?M]L/o,&YhJ4h=#HKT=s@0!#4$LPF^lXfV0,b`3udZb\Y@-(dgg,IdbnS+YX.0\u!RbO,KXU$Td"%Xcjpi]KoLbWDY-]kUnd@V6Z.`c0HFLe&jR[:O.#9SN/AHn^@Cbi7LV5/7\^<KiKa)F.DHkFc<r?d'-j]RTF0H%8_KXC.6Fc&B:%u%HF8*Df@*sL%/&6aH0R8ADL)o^9Im1lb?9>!N](7GGb_GBF`+@Wh0ncU9BjdSJ/_]3`68:c/@C=TK6H>VonIiM\IQ1^k*=k^IZL;(%7RTg'YD`(5#+G\SlRp1A*]8+od.(G0fN#ipqs)']%hVWK4@a!f/4L7DE;MtH@rm]Pg[Fjo_;m>p->!d4-O)gn3f,!C#marOGh(?q%b\aUN%db^VZb*bchDhm?kg%b!Cj`!t,'Wb'qG;t@']%FmlU)]Hj12MpW]'_-mQ;/#A8\t>U$7dZd__A`qdCmHYJ]Rp/1%&7W]03T%,*3]FUAEpH7Y'!A$YDQ.&o^9M%gjb-22@_#WY%N;Ji/8F4"r*j<^eY*G7%T<JSVOfKET)e"A%;ZJM873qs!RW`F=nKLaK_^Lk&gJ%T4'mr_"FmJ\@WQ2?\`>N,^_5PRUh]8Pe3t_iA,fi.f;Q52\Bo3Pa2CQ<@D<XSo!r-]/:)6DEA;"<&WORjZZ%9luI6d'n2gafOENC%Y)h4Eiib;LfOOH5I6(P+?oF)HB!9qKUM#0sOFLH_PGdZ=*ors]ARqh_l>Zi;AUW>kqCu(8hfL0=!9c*W*8&/jU,_V?4D]*,F<f#M%<oo^G($SA#JK7SCT;/4Z;+F>".:#1hg1L(Ef6KCq!(%L3O7-#6`!5C)(_fX\gj%(T52oOJRF970+K'83f'9>p9l+Z\q'>@rgKH,n%e$6?9gKJsZU$'<S%+k9)%KgY6eRA%85qB@(X1egWP1kn#o'2/#R22Uj!Qs.SnTQ-f_Hdbe3*+^?6*Vh,;&Ng!\9HZTL9@nbDi4D^%(>;Tiqt%O%XM4,qOXr?d#sPrhnTDK1q6Up!m*7V$BOdV*XM"9Rs4bG%:lQ]A/GY!ZX2dR]#235DcNMS7K^BJHcAtZ^jKIEg&_#SO%0dJOliF1nj4YrXRT9[_VOL2o)9G)uU$rm2nVC=tKY,i.k.@a!uTqfrnRq/c2%?9;Ulfm5MQqg<ufrO#"VA%Ef-.p,n1Y87bDG2,^%ba6X5OGLa`qUg#sP't3d.e6KmPm4G21h0q)UcdXe`Unec\O2;r@:MBE#W"X`-\4@LgV1#;k=V=5;qA_EqANt^,5H0*\FphXh`X:0%Eilf\&<9&;4@Dd7<\V(;)!B1.VmM9BUjk8EkGiQK%.GB:d*plOV1FE^pi_/;',&SF(/EKCVnTKP:sS$VG#fccO(%aLUMZpBZ`7g7%5`\WJkrV)G,J:<Gg@3c@RE6iJ#Wps^`mo-j'o4r4iZ>r6JDLU[A.Y(!qI-7P-A/NjZhXCDK_YnBBNX7b2UL4KGVqHEGuW^pGm!4?%cmeP_>U!AZP<_<F:bVtLn5J\(d.JIB6Lg2j*[b>dMEU1V^tCY5I9<he-\SX?1[$+pN.EkM\baebS=Mg"GRhdWKdII%L!9L0W@A\7%`MU<DJLE"pQKb@u6PYkM5KnZ&&"S6G8N&e@@\_e=e("\jm!eu(4LW^pqSTdif"QpB!JKblL0"OkaiF*<]G<Zs;m6u%HS[\Jfr6PX%S(EHMLsG\Yhs@!/Knl9#.Hu5%OGZ=>LG5/VL9L>:QfkgXb`W4pkm_Z;Ucr%GnW:h$T<MX*97iG9-;>kjp`1ICq\pQap/l5^OPKE^%N.DqZN(o*Jj5L:>@JZ*r7i`C+`l/D2#WatdN/JXgB5j?&_`\3EN&#B6]-9)XPssaV)9r"OSCi!E%[:%S%K_]Voaes\(uR]c"AC=Z%(j.LX+RjW^cf,u?\1'II-D+bY#10+Af7:;7D9V;*j*rmm`BGjVhU9lJ4aIB*oil*?0Hhr*9FL)ZL>E/*NA/j9)^RT3_4IrAo2sU2%F@dOok1TO<rF8/-Vea%@Ir.\_fu\&JY)IRDbQgi^N4Jed[@Jp*OAf_;'rspWFuH`r7)M\<&eXZ*OV>ICEVGh[]Z`l/V$NE$1q<OL%lbcC9U0UGClt*,PU\cYpLV6f2R%QZhJ<:N<1glKU*k4KG'5c'Ha^GfD54Orpqth3^KFtsjpr_mY!Du,?YK_JXbp7_H8!<Z=\RZr%%5Oo=jLIlEUJ+"/GM(ct@ml]fE\H&\:0(*2'30>^R2aY%!iF)@^BH4'WcT!Kpn1,Vigr56g:'[6C(A^o]3\r.f^ZstABt3K^*>`Zc%5$3_L($gD!4dh!hcM]`7^;j)X[%jN[ArjrsT;]Jk+sHgm*uOc>b_R=)]&d=bgj3K3k!%uk+nW6hpSRG\]DU-eraK16)SGtM:KpEI%X[Vsoc4Meuk[)2<$V>-jM=(PhkoTA/iZ'fP#k.5L<mX%iI/sJagB#ApZc3S3=q.mLMbDZ>X/;U!7`M[!D2^PoK$%""^i3Ydn7FV7%lUr(p<tL'C\J9Y;72aV@a8oX1=gH%Q"*SOD8W20;(d0^hn1C+!jUSRg-C#jW9#AUAi@,!1VK%N`G!68_n`b^W)=gEe#X'L\,9E^h%">EdS!Ba4A-G(-d"OXplN;XDLC&@N:L[5#I);b#Ni#VSP;;=R/do1Ns?'Vc^0;(G>&I^sc+H)ELp)QX%gr1`f\mp9Yj\#FX@R0M+%Wp=gaZg,)^>nQfeU?+9SiHi3&3rQLB?ho92$)lRDc\Ft>^R)-BHBH?0qOL`"f@ri-8+0loPHLIG:1G9KHN'&7o:?V:L.<_+Ekaf4%Z=t1C2TOX:2,Il]d4BNg<&QCjJKcO*Bu1+=iYd+0T^WLIcFTEO6i.]>ZEPo&gsGI-]HPJcmc#FLbG<2ramXb"KdY#"CYguXka;e0%f`>8%lRucZ.*47N(eLHknQ2CL[FW6\0f5<"]T_`Y]fWcHN5R]m`'ZnB$'8&s)**L;q0H6NDd4<tea#&_E>O]5$23V+\sLQe%$M+[%o&CQ'hT1_\+:^bl4Ua4p>Y0nA*I>oWIRHC>?/k4>@fk$*nV.-)Is"\a3AA:X@gka]iq`7ODpK+@Gu/];O$DXVf"BR4E_m3fCn(,C%J)!=Ie314F5&CaIOFGekmn`5Al>6/9lCJoYGLUS.AV8iG#Ltu[l4KCZGDS9!QG)J;*qYc_#P].M$S*raQG)&L\SloqD6WUAcNgB&%.,XabJEWMXVOrRNI<kp+nlZBt>O%m(O-@k,oV_=K#[iJ]or(u>.8\>kj)<no90DBdp*o1sN<()2GO<H/@gqkR1[0=.''1S)*df>l%nq-!F*10.I@dZNEoO6)B1)\Il&5DZ8LgDps$B;Y/=Gb/,,r?Km-2M?H;acg8=RsIIr@(=&nU.U//:9:2Ec:^Gl6sO.3R7RkA09->%+/5S;gR*N\+b>LI"22u5$-u9TJWdC+Id?hcmqX%(o(4krp?cW<P-"%eBW]uOO#aSUp<ZHt>'3?]&n$8Ve`#Q%k/`.d&N%3[i)_Hl%f:K%4Z'Xf/+jhi(=&>0Okf5eeM:IS<'(n`MN*^a]T'5]$]Q]6Xf2Y".LRG<GI'D5V\uQeikno:Gk+226m=k=dl'C@VR'fm5Qu"eY%k[6L,7.:(8#\>LL>HEa;/QR,5B"D!$((tWW9G069Wr_#4JD2M*]H%u-J(*beSj]TlK0p,"hiAGK3IoK&0^c2lIYa(+m-I#m_i=+L%/p`]T>\%fGHlCNTd&8Qu0lnf]g$f-"kr,9GP_[tVRmYe/>R3JVmdu2:TMOgYG#o)WhbS.G*en!K_Kqr]XVQE^@0Z;%k\\!*,Gs=7%kB:A@drNREMdlJO=LndY=QUf(]S^RApDi_tFfW@+K:Q2UCB',daYbIj@`\P1c=qG(i3ni%BNf28KAkCg"(K]TJhc2LXRT$@OR2H"%`QC<"VgJZ&DK6URo;&jZ,8Zoi6\o'q=bXp_6#`2eRH[fp>cjbA9<K=qqOQFu6P`Jcqbj1/i1?'IFcUb5Y@3=Q+??#T_A3$=?*:Q#%nUJpFM&+E%c&D[T(/HtlP-ts::i[7ke+`?^?;-f;Qn`r)/S/e9FMn!m`pmJ`TFi6fr=&0[RP2B](&<m9h>Z1qrn,cZs$6/Dl+:Gq%0aq!oMo2WDga[/^D@QbPT;tQ.RaqR/*15mC*eY:sS=%SE"<-l'Lhu_d,M\V"6KK;E,ae[lDJ@6D]RAK;VSBnq,m4-a97tG0JhSOh%a(^tN)K'/)m<C%%U:Zk'>o8NK(B&#_2t\?9g!,Aq]Z7YS+Jq72l(G3"?!,k#=_,/u:Tdtc\jm[3\Qn&rR><A16$Q$l_X6G/ZtbMQ%CQ,3g0#CRpk_$i3\(sA6TPH!F2H.Ut,BjMsg2P;2nRFRAaTHJ(goM35r4Kr=]W^]4GB8mPrpfb\9?@9G[Bn3"<l9B6M]a*-7H6sJ%UV'V_!XS3jV:bq?MA$<84HfRR@H6n-Y:&GbbnB7Fq2@-S>a!c('@sT%dkg^k1g?ZLn*rC8G]Xj]r(*>`KBDajSm6?Y;BuCfNB9AF%raam?'@loh8M@kOHC%:&_kc?]"(qF_)b.N46$ptj44'*sL@7G&HMSsM#VenI#DS4]Qr=KinFlTOM$YkXaU?hnd7(5nQFtQT1VofP%_qJ.M+Vp\J38)+b`AB4(45NFi#1cHSG.P:Taf7O$LSTK(#G#Db:G0&KfXMmj6Gg.;eLj`c@DJ/=45ki4M?WX][Kk0$RO,*]e=H=q%,:"ORYA!BE>PdmSLh#->lJWF;llNc'Uq)L*V.8;smZ>P!?LX4shh7]T.oXSF^NH"UH"0oaj_Wi/E^mm6g:iKsDs_2BX*rr8A_e`d%T@`*>]<0Pl]I)J:KY?5sA);j1Xq,>hn(Zj)iRjAQ\`<Z8Gu/$_2n%m*&*E/qO%hKQWmi,gD2O,d5J;-t=kpIH\gEQ$Sb14gps_LZ%FjX8bJ?5>r8^^<G<ldf"A8B4i)"EoU\?<k9s%hOg4^oQCcU.WPl!,JDQM9=kefdnG#PbJ5M6bZg;^)R9G'6W2^lc&D?Xu3K8Qt\h%q^AYGGqN'l5+`JXH/gQA;V'k0mhmGoi)le]a*%7n&+I`]d0mA**_)`F6.d.H:<Z]CfJ!PY'g4spj`OQuikF'$Id#D$h%h),X[PhH%HBQ%"IroQU`XVt!Ecb*,bH"S8qGD6'i?\=%QFJ=#cE0.F@dEVD^M5b%617J+EeLcGnP1aF%h7";4RhCA]/,e]1%KDpnhcI(E`q]=%e9"2QH_CC&Vi^;^KIq]tip\dg'7(QD3Eo>73B+@P"[R;qHLb,KKbR>_fi[o="4/QM$8b6SMK$b>-uABU;>4d7HkGL/`3bE)N^qkE%1=Xe7bT>/r/e5GO=cu/aM0pq`M-jF&fn2[4bdjM!6Xk]f80m2,s*a6t/PI=9%Hs(7$QE;o5q)Hi*]h@s/p"qRkE7*Kfs,J0:<hGE%MdPhi+(A<6DqFJ[n2B@1jt`T`j^du',C:]54p2tC>!,N%D+%l`j`Iu\p=Y8?CH\hc..nWD0trW\g<C3`>B5r)>6ii;L)8-u^\)kb%f92,,jG#Ftg-+[tW7nTV2WD.uMLPOP4.\4F8/P-mKW42tqT)5mK5<r-aht2JZ<BDN^du>-DUsu9364SMh"L&>9L+sbPT:A!97P#B%3QpTK7qF2aBOR8MEQd*n,q$F2rEggmLk]b<:L*8GSS!1_8J`JS0!b=skLT;``[UV73dGuZ7geesAlXA=(:,.>q`F#j#O,Q%MdR$h%,d-\)JHDD"Ki7!).F8CR+GemqI:Bnhg;0RQ8QKQ%GG&bD_NRBNj<P>U6R_gn'>uo3\0fD$fH1E6/I%m^J^=a6A-#@pa5-u3+-Erb%"BU^G+c35@b"*sE7W.LP`-Z^Z`CB$f*j@P82tiu*M"g?&@irm[p3sY5]]I&adWQ:XJL<Qab<o_t65Lui9MOLVqXTa;5/:]YR(/eS%m9"uN\p9*>jDaNOb<nU@Iqj7"2K:)go>,J\0:[8jC'4uaY3uK)ikNgsU?gZs^3\;-]o895'qpWj'd.JcR$jD`5Q_l]1RF60ROE(e%"uVgSl'#68=Me/Bo*Jk!q[)^^aVf3Vq_=CO%q^hAlVk&^E)g0?\^O\ba_g_7G7s<gp0_3\>l.4_fC5XWeib]'_2tnh^"'R[38DRe%oaGG:+;G2=ogCph0!)eUk*kN`Amem@VmqG*/l",?EK9?EDD&:R-dJ5H5j_1\ppEB+M#N(,ft-&!UXear.?!?/f;%64&[ePVCKBGA%2WB"!OGu4JZ>6t8(r/hI\C)`!#MOt61O-2-\(f<>c@*W1+?"7rms)WSGd>D(1(Y+]LL&[e8TMo3An.3+`$WM<bMZA4Yl4L$">h8A%P/F(UGF#is<XO=a81'r#I2Ld.aP"?39$TE's!R>[*J/b$$BbM8n@[?a*]^SliO4mM\HjNc.g5cA1]-%[hB<__^AYbL_6LZ(+3oCg%Gt>q0p@b!Eqki6E9US[2RniCI6(TOM$TG5,atk4!R)c%=02?P(iq#q&#*U%dn.,K^PiLic@L)a<,%)GX<Mu'HWR%bcc4"=@ZT_+g%'NBiKX.ke-7"mCNJo%=r:#&)p^u8K)79@e>30Q/Re@4):!a1;rK4;[$4$Gh!QDIPY;bmBK6G2@(f=T$-#$3E[65s&h\CE%dg!faV%kAE[uq"e<e/)Hg<@9=gXGB]N25'j\^11;dL/TQ(CcL>t1]c68,mb>u@8]&M&4Ph?ujZD-lVPD3D(Ah4Na"\8GJhZYsfR5juMOihp%ddhNVTZH%D%&V(hOsD`f,!5W]$r/fS(8l.rm<.CY,DObdAl_^Il)>[(e=R+[AUT/`O7qbK#Tn+om0lZ09>!Eb>U[Xt38.i0'^.N%%:g]g\aI62.#H7$+pOWeLAq%bA!aaJD_Eb&:(^$(oQ%?uSY2XmE-YB]NHr."gOCYC8)0BEiQe`<;Nbl*_Tg*13`p'bRb4s>D&oE][%1c*>c!ZYaU%u*')Tu\(U4eJaqk^ItRHY'>J.!_;WgK=0:+I*nqFea.NM%%Q$FqS:TSVKMlaqXD^"<IB#dfu?AF0%RnfbjoPA:=KK%4XJS1;*t'>SNS8tfhir'A/>YMB5lKOo"cqn.3,9SbpZZc28blG'QV?1cM\r/E@`DhN\B<l/=@ii;Aa^"jJ-@g+Y=DHrqm<P>=]$[%$#*A%@f59:C2(+9Aj/*b."<79Q%Ta_%Q#k\35b/a=$%8N;`pb;RXh!-G$;g4Jrl'sF^P-(cY`CBh2M2I$uFBHH0X-CqQLF(#c<^h%5hO8WdmLALH>KY_JsY&A!<hK:SfT-%MSaFWT8s;68%;Pb"tS\L$Wh6V-O_+?(1$r#,?#*qGX"5prAH@Ydo0F\XQOlW[IM)VG$GfD%BD*;U54A/]SgW=P/*_:!JMi%12_'Z=d\3n)hBe+eGPOdC'lbte$[cVEElRW^!A/p_nV@ii)0(kUEDPH']`W15E>KuM<218t27nbI%k=P;?D<!('?m+kp,6T4lna[h7L5RXI1V?dS:cjVUmY@F%2^/7j90&(*eD<qDM/1sV7*EbgU"9r45oqEeriRn\cS-%-aQ:*pmW.&]%r%O\gcUn$gEiV,4/Y5FV/4<ll1m=@M7YWoMDHi0@*6Sk6rX7a=%UQJgQkP>;/Fs\qW@JQQ61f.c:Gm%"@-hBJ?i!`fQ1_DIQD*al%#D$U42OtLUJXcABGirhcO-.a[[$%5K#Zk\Y,4PS3!g?Z_LgL9`il,=I1fD"7RUuQI`*FO.oFPQ*Z9NQDigC=L3:[I9NRKj:+DES>%THB]jO^T(>gLI7m*nu=Eifm7<RWR]smOfNuga$O!^8:_e.lqU7IeAls'65JTpFu+']g35^4aX4kq]9!\(0?0"#.Kqqpt/Vi(HlLp%0Qa9*3Nd(TLmJ%HdGNjU^k(0FMPIYuNg/]1C%Ld,Ai&u?E?ZG.X]FXF3A[R.b\i<*D0_k843]H,`A-pV@Ge&P,VYJ`Al9\ln3k4=%`73CUcZpY.oL";uYS/o9P=ImC5-hJS-`CXNOcc9S]"-G"$f'qg`)2.O7:Ot_Q.GpM3PUbgk(2-^_dqdDAp[":D1@>%(/GtUW:!u5%Vf)M)OA7)PM4cOr\t;S"n;_n5R,ZPe^=CpTiO8BbSl'j[BgLGipsE6X!DIZ$5OT5deY9aiYMU2f['1lY>Nj9'P)k8WotPr*:4;4/%3>L9-,+=j9n"[fDH7(lPa0_c]nWXKk3rGFU%;u.G,2SJS7DXfM41[A^/V"d%/okH5?+ZA/MsPP'76KC=5_-.eSJs"rpBF1,F/X0?%KJRL.k`I$F*G>*bfdUaM3tZIVDjfLQ822O7:;EcS(Ki<k7f(em)eU/d#XYj)+#EfMZ?*tI$.n0SI5a[::5HW1b<(CX_@VH&SZ)%S%'/-Yg)rm@;i+&&eldQ-ZS%02_%:99\h%I^$4&Ilo"\b3ShP<<3*dd7Y7W(@dDgm&NE:*Yk;e+(A/\8^.:0^WJTn]sG[lgm%5$DD#%*d[1LrCuAtRO[^+)Y'+Pf3Cgp06fjd:@X?:m^k)X2gNg7n%;f9$7A5?E9fS%$<aPbp4[8to*IG8Y<.c7P_USuiITmO;`p">+YRs:%.Z'r,I;!!68;SDOo\_CtGjX%RID',PIm%nMX^F>D*H%,Fe#eC*+\0&1Im!SXN@tW_"[k:*a7fAg3Jf/X$jJlJM,'$(]j5;\nRQC?%Ue=anM!762$fk<$%#FcH%GH;SB(*G=-.RQfqpr1@^/P].Yof6iIp6-oJ]WA=f>@<Zh0@Sef0cd$?c6pp)!FEE_pKK'<&G7m%UGmI%`n^T[C63.*eo4ImHjs/kePK38.ijj9A6lhHb@K](2,jXrW=eRBftJ;d!2kUdAaKL2qF59U&l2CQ4+T*$oU+ltPl/;P'u/YP16NpY%D#l@61E6skc$S$E.-cXmIP05gmZjmhD^`SEfik?r<u'g`q:geXMs[NBCY=:tDs0<H8d2#h;QQ3!Rp.u%c>UoE=7<kI@@6p[MtN&n%abeX1pTpE<oSL97I<29ROPIZOZCoTQ:@@LEQsgkM4[(Ua`&V1I+'hB<4mWcaKfk`f,4dk.(5-ntX57`@*ohDCQ,&^^<pB9nA0H0W%pgF+uDXI^lgK.(]IOeaEeGEI9"R3mL69@Uk$VaBTXtsIa[n,8Yng!#Bc=aaqF^I>NT^l19X*.;<)n,4N83EJp<c:+%3m*^noL]_Q%]8YU9Fd#t)"UMO0"(XlDESe&tOoik2hJ4ogF6?$@+p>d73B*B&\f_r59:pQ&A"nQ)5dp?;`pM:KCr2.d2n-'S6S:bD'Xf8s4D:1^%Af9G?m3_Z\g$QW$NM+`gT<X10G3?k/]Z%gP"q&2K3+KPiU]%FS\WJe4FPde\66f0B:@+JGq8*!s7(g^h&(#l1^mda'K9M-*(6QY6%F'9d2'8eT@Fsc2m/?#=e-KXJ]PI6tX<6:pRN@HeS3-3(`0Q?N^KHID*@U["#1^/YYX>(2*rGPSE,[G$1^H#_KZtAF9nJ$9=`D?,N%qX1M$Z=CKo?G?<;CDoKqBAPr9XfP<)@[8#G)Z(@snK0YU(STQJ`iJ&[-YP?*r&T_ejUO[b#_mReR`Dn!G+7\odj>E7N5hBmqkumZ%/-#!7@oFUS`iWmd,O5FS9%tfcQThd1B1\jj:#UEC1?aq_N6#Oj&c(TE.p9'$hSbPThW]2Dgj0_tWkbadkLo4shb`u"EY=i=j6n=l%m[VT-5gp6"!1n@%df[P5$t;q/&)Ma;1McqC@pqlGrYI'32_'W6BLgq\,"&ME`*EDR[!$qm1@ESUEE)oHAK4c9aFJ-uS,96No[-0^%_9pE8al%Eef.A`q2S^.9\qkuh(f#!;%WA$3Tu6Ht04Ni()?aaAAq\Rp.]Da*.Ndr?lHXG&Q:#SWT6lgr1s8LF6aYPX3Kkq#KViP_%lnhn%3m2rM';7k3eDZjn,G9X+`2\l]L`UWoSFrm@3;oq&SR`gp+56Q_3`8+Y>#-<n1s_b<f"s(I_O$n'HZK>\9o$7bG<+5UKIa@:%(F(d^hA"g!h[!Lk-J,t[gYGN,V=e"k<Hm_'o*-_^aN\Ynpj0CT<r"(fqhhntc@h-#b.UP>&7$kk%`^5G^ZE:[A/t5]e;Z2%-rNQA%oZ4mLi5J>Y]DA:j'*p776i]Rb9g'#e/8=!"s*P1&iju7lU4XFSoM)s&<BN9.DsfQsEC9TJ'G8)o2!DohJ*"n,*.3[DmDg54;!FoJ%DE.!0GGm3Q$+Rf+4Zgt\l7t+Im8\PuW\sofo56q%Qrigcf6HVn?Csj`fJGS"2t!-k@q!D$d2tn\ra<J=bX+P)ip]jc6VMBm2AL;1%-nV!ged9ad\^:`Xk"]UISJ[o:h'50T/lNSAWC!<-"[T<G"Y8o!aDL18dg:?=@]'lYl43'3:)>nA9O4k=q,K@,);:i8klQrWrO#fV%kX.,:'/9@(X1_L%T=jGp^pgj?E^4Y[lB5OsK"!8_f;j%49^;g=Hump,"FFSEm!aa13:*MK>i/k9,dFgs7-WMO*.:87;*a#&8;GZ?%&\S@X#0dB.0&t4_LO6m!FT&o`cUXJ@%%YuGH0h;qiVc:f3\^d['IrPL!`mlB(?'Fq0tZ>4gMZ2sqF?J=35W2]6])^^,2AVXkrgr3%Ln6["(Vu%bSAP9)h+fXAMob@XoG6s?U$?IQe-fA]T<&<9N3;Nm$o7SSMr6ZcpqCsM=7]YU0[fPUYI",>[@4=bdD$L$o"Eq%N?r*'%[E:Q@lE%)%>D20lEpdL41,dgEpPpgJL5`epK)K@=9W5;'5$9[d96D@4emAenoP@0X4%E]0P<,YSP0d,-hiBg(7NT#dGdm?,oJ&-$%;5*!;5n`^BOl%)eIN7I(!*:7YFW$T[a-Fi^3p6skqGrodAnIH`SZ_=M]R!j>c/eUZ;/3\[q"iNnRfV<_XOXs:5FO7DH(aR''_\ii%1ip(23q.Q],Z*$t?#%YuN8u0;!4lT3U:R1LD=J]?</BqN.BIB)5O.t1_u@"$&2mV=c.3qq)pTL3T0'>b0Q+GGcXaSLEJ$"'Gi!^$%\Xg>k4DUp_cAc=h^9\()e+1LYQeB<*@#Dr5O826iLkBqgp_Jon@di>K[Q')`>1Nn\n?B'\9JH:lV1#>ii)#S4];J0$nXI/a,[Ouf%Y7uBs/E`6D$9]a3-Qi"jMmmn8a&<at),!^F^EoIpBlm%p*Wj&r^)h@=NebnlmC0NGG;FEg3e:_"?[-pA-VpF(G0hjsQ$(u%<]glf%J!B<R9!mXPI'p;PFOtY$4a+dP_jt*q%DOZT$6N"1i7u)qG;_s0;q`_=auV-clOMuh--PV([I50D<V)S&T@<i"T-Z$TdYc-%mUM*_%%#I<dc-!-]Cp&2`Q&Y[*?b3"^CL.s,ga`9h<:j3J]RC$Z/[o7NA.3rff3>ZRM>jNX[u061q':Gif3:]=jcfUB0#LniiRjOsWoj?9%?.iCaa$le/XB%)0+K_`K_j,;>eSa:]Ug.#I0%\PIIu:hSfsDh:IdjgR[W-]1`_-qlORR"rY[T!;[;c[\)@Vau2l*mVj^P8qYN=;a%[NJnf5"]Hd;-VDEI5_Dgh6P_-2J`l;%C[=eC.5j\N([:6T`KiU]a:P6X]B1UgQQQ`e8h8=;OVp*+]Ze%q,[$^>UcXE:&>E=o;69)%mTob@qU\QN]CqRlWtFuMS&H2?RVst3E`&qtlVB+0=Kd%#Q^d*JQY0I;H[_B=rG=!kB%_`reS@m__ra+;qUD*`$icd$Zob,Eok*^f%ODi_@<W.i%mE&Gc+)`t0DOX-t)]G3XGUYR]'a;QiSEdk7KNs<4='/Z4rkJH=dU(%UPbHl>+d2^C/Em5+;<nZ[D3^A5gkb&=&?YJK%EaGT+@g)mZ5?fYuo'`Mcq]2d!CX:Wbmlf&SCu%UYe<?*)oI4-].TW#7]<(ojb,_`5L8F%$+.InN2Fu?<Qu;?<XOFOg5L^o_Y?/*C%&QQr^PZ%9`WnODP/O_N?KP[tVCtD`h!2A+`Org)=/hAofACPW7hfMnS@Vo3.;X;:7dM+1^?j=A1@uRt2@.3J6_oi\]QR%ua,`W8f%4+b+Y$$c$l>#)drj-K"`I:]7GfSlo.QKh8i\?3E/7V^7PBOgd*?Ul]83Cai(@rgSAK'dPa<U5,7C\&igLSD/i'&[en?OX.?-d"X(%-[Z69eHVQ'/]HJ@`nSh@6V#%dF]IS]*,:aC'kOWZTb!$n0LG`_5:[dm%"I+-QL]6i&cPa\,JuP-9$G'"rsgqp=MMG&OC_N[(Ao^r%KqGU0cAVLU2(CLI2/AJpP5\Q]o7,[KnGQD:;M0<<S8k##N!(ABWSu*gI&[,.jQWYC[&u!g]^Nr[2glkff*BX5R.id(j/./e3:&R;%&,XVAkb>a5:MFf*/QTqRm+5c8/+]QA.k,s"bn'c0).UO/26XH)`Cd[LK0QHK(bC"NjobpF<7C)MAbtT"YD3+DFG*(OJ."5ACSIok%nXU?p-isfE!<2:-J0f^;U*;ju?E5No<aDPcT2,AoP@+*2PMaeDc([u4fWTJ/TaN!6r,hK?SG_BuS,ASbA;`MEj))2)DRJ",PF52F%Y<;WWY;c9RY;#c<QASLPEE#=?Sc)o5p@h%pccl'kfH=XK(J;F;C2%:Bn';h=c<p,O,uViD8$%FuIf*nQD-Iq'Ep\)(>)7_.`/NGr%Gp2$gXhoG*Z:EMA-GbTY?u'IRP6TYL_kVnoYba`JCRDXL3M@is/eh)NlI?*'WdYPKZmrhT,q2JbQD?&l50C5?PUMl\.$*r<Eii>[%^3fsYS5=qh=]2Q$A4am`lp`&XC[J$I&_CqQKl/Id=]uln7:jY6#F2U8gp4sg+]ck!g,`44=kduIH%s`nV+XFII>uILohrESZ5pET%"\P.T6^[_S=s$beR$9<S@oC=BN&_SUEGmP-bN5Hk(fSSBPUe1a;QcNkCgBT7e?-omdO_E[L=O!0PV_Kj1UXKYE+g\E;XU@98\(%*%kHIF1RSAJSRS-,=A5K8%\O:7*7[,YSAP1+0ZYJR3U6bBc8sRRgQ.i07Y,#;o\WV!p4<j)8Eb2gg[%,R/dc;Csj<Oh".?[RSV+=4@%PTg>i1>IU;6U`Fm/dXsA18'jU.7I-lU_HBLE_n",lLcX'a!IELX+O!CO]!F#7S8Z))@&.j=D@`5X08tlOXZtQ74o!;l@Who9IWoc%/Q:pZ9"C+*-0<9P2):H%KhCk%jj0.iAXG6<R:&E3:K!d[4@sg]o&S^uT!o(bV.D_,=a*K&$U^04Qs(M.b*8,>.8s-AUeEeYOeG[\%>Uqa;C;*^IXk;R4MY`Pj;GZYbcmBXgM2%9n-`'R1SWl/aFUjgmA>c!#raa3f4J<hLARS8L>jG1O8!O]6,tppuPV=Op%W:?)-pj7R%Q]*J(9^2C"AP1+0PUYc0=Vm2L,P>fZ>q<D`fsD)b\m,lZ1^;P-\5LVJS4P`)E[KnlG:+P.S\BcaWK/W*SPGT:1+-YY3C_XiABn^l%/_QjJ`rAHtNI2>^'?Zh<_ONToA8'<4s'r%EPVhQh1p;EaRk;fT$n60oigaA+>t!\2A4@[e--Cob8rI1Nl&jC=V+4.=PTJ_=%8j-J%Q(!lZ_N<?(PEI1;8P5/1,Ul:pDraJW_7c13e+8(6Q9qpr/dkr'")E<i.;r,@UqA_^]_Rt<BK'-5[GGTB\glm0M;6'C\J_Frq?c=0%L\&b8H9K.<H:>Fb;3cN%.>@euWXTM[4Kac.$idEO2S6kMIC7L0a_E'W)PE1&;c-cGB$^Dj,.ZUIG#M85b#8s;`c;P.<$@LcfGm#B%m0M5VVU&lk0uFlXH,8@l\U-hCZ80bbPGLiG^-?*Y9BM][b$RdZ^HY-+1C(70Bu,c/,+B4d-LY/^iB2V32j?iZru^[*U@L;Zq=K(U%q7IQD[Su^d2t7U8Y9BP*!Ys*O'N%W<\,UA+cAI2bPs(8.?grlVYiH)r1@#8A,U".kA<n$[rs*QqE_A(+ou_QC$Le*'0OQI3,p;o*%\X?KiQ!0"E/X=`&P#:Yj#jJ1[2S[<c+Y.DGW:an8K_M7FOe"uXCDqY6*HZ5[XD9TkT%R/T<DeQN2TIDP?hT+=09"TbpW$;uaqogA%T6\5e[kuFm9Vmc.l)ZBis.WjuR`36PNqcka5>QtL7H/;8B3g91$G;(83#o&>V-\P?U#aNr&JKFZiafg#(l3Ru]J2/nGCLTcn^*4P%:K8jPmd6a<r7jB81q]8YT?B*-@6MUdF.nI0_Z#7o_%JMnJ[Bf!@,N?N098=Zrfg'X(CN#ds8ItnJEIf4'eH$8Mc,"QZ!rW7*ggq7%IB8JAr>$;TZkE(4S:/&:+>KT5=R`U4s&s-ph`1aW`2#&Ehd4*+%\mI*VcfKJXt!&P<iX%RaX;=AW`E$s_IoI\9%DIASI8XP_i]F?%6/9ngdn<sus%fRkINII!m*fptO3PW`C#mhBZ^PgF9Z-`jo@AHOS1ZaeB#9bRbh>&O@H$DG++-%u5CUJ'5;po4A@q`Tg.H>WqJ:k5%UU9%0kPf/>XbdEJS4<np<nE:sZe^uB]YT2CBEYq^^-[9gSL09%Y@8)&b=iZp[trdL>&)g?BJ/R&REH!.hB)RE/iO?oX>pk.EG]_#%0qNJSd&6/_FEbr<77)ABU9kgD8U5@%H1In?-s)YW9>.3M&Z5J%6[:+X;PKsTq6c%L-spaSjbp7LME]JMk/o?@H=>5fV<fqGls[C0%B\!>ZQ]s+8e]<\Q0=?]iRs%7V--RYY9RU$FO"+^7b*\DJ.:Z8q*"&fnQ."d"d3X`#j\![\PUe1ac7?=U,Zj9^,sB+d#rtp'>C(rM%j\EshPWS%H@i(7h6d;Jp%F$1D9erZsdTe!),U5pLOtn=pb#pUm>Z&]?$Dko,U.T9%.9BEMUg-L%EZU?c&\0Z&03UR*Lsk?(e)VbV%8h#p$,c+%(Od%$p2)<sA01//W74nm8:,8K,+t5rYMPLqX.<860cg#Y!Y4]*IUXd2Ve4?R$;Br#-8r\HAH*"CPeC@XT0rZ(faJGP#%I8I&+.:pZ4AP.A=.9BEMUg,p\7]%rL:^OkLr7PGl$ra#Y'9"@$8]m6]-RhhhSfHP,o6-h)Ztr5WlV<:W@>If#;l`8XR?B<OAP1+0%PUQhr1/t9>CZT/$c*tj1'cVO#;4g=La%9ud@;(i5n3k/dWKU4-V+sXRPWFRn6F,(c<e%Dd@%L2Um'8=B2Ql^#bG.Z9P7f2g9M1\:%0F'Q--krAuQV0f60W&sjOtn=p9$3B>MQD`WP`^:"g9-]Fs(kkm.:"P4>oEf\I9\46;U2).8NDuTk.?h=VG:Jbg=40/VG=&58XYbt%k8Y`5+u3ddYEj!%(#scfq*r((jp>VE-"0Og>;ESKjo;U8?qQl/9:AqtR*CrY,_hOC.<3Wd^b-gN7PZ2"OqQln&>d@NV"@4BOjYJN%7nSj2`.f\j\k5]=ARS-q_b!F_OsD>F8s5DaLH"e"U#=d#W9O,mAkSh#@[Dd$NIeK$Y*:joDc5G^Hf"\E3jbBYN*:-VB3geob=(dX%V;.#0'`E^VOi."W&\T7EHG-'/NMoI`V3Jjs;UksW3?D6mSq[2GA=MC`]=qH_Y@P$QD[fN6ZDjcSBX?n$$Ba-4@(WD:;<=b`+(Mi$%QZLfP(82G_k2>K?8$8^CK0Ho'),BbG$hiH&h)g4OQ)P7c/Br8,r>ELU1>f`@r`Vqjr?4@r3M*WO$Z61\fp"`[H/Gn8kP7cbTgUC+%s):%7Q-\]&k8+cXMik#$Q-["(:JSR3s)0mBMLlD)4cu[Mn;+?Rj9Z)IlO!>3+WQ\VQ5=uL#=9t^9/"6Vb'B-Wn,`nM!%e-rnF_"9%R9#oE>)<52Q-mR6;=;U5l(t+4^W8;A.rB+$okIuiD;!O^c6J6)%6q0/\iXQU248sG=0(,V.(\$R^US0b%naMh6J8F%eX!?-;QhN:%L<r'HhclOfBVpq_`c]jtR"+WZ.F$khqg:V0plF.REm^2PjSp[//b?.LZbZ96=)I+aeok;J/a$u6`3Qi;#%m?J?XAsWJqH;R3m;Q#%=BHW\d0`t?`RiegPo4=U,0rfMm'j>_SM-Kl7OCgs?_KA!R^(#8.`KuP?$):&H\[l@"'[sUCXrP>N+_9>LGe/k$c@TCE&[r6q6JYg%nM9.2!"FG#V:LQYfqEnF`df1O%*o:Ops"1`b0M_A%,&o.1N'.PB:4970RcBI<e>@LEtF<U17V_0/Mut#Pm75Y,7m@MqSF*;"W6AU%;uuia[<^f4U1A&93dd3?Jlega-06e-QEXD4oj?nRed?eYK-(kXY5bVcInD4T^$+to('bR:@9LG]bMoF%(,s4<Hm?g\LR=En@'++7%06O]#5G:^FH%]h@:B<=;2Abl5aK,,L2;`YH`i@&&>6B%C]%e8AMs%](2<@W1>Z2h"H1f@#bP528)[T5DK]N%PNXlOV%.n!dVA[<0%(/,;bk#J`VKZ3WK/^j?M7GK[T=d7\cmZqRdD+gY7W1.?N0>r3alrUgS5ZkATZ!,'\oGPSmdX=ERWo_Z'15cmNo6#l;C:#VTaZ8P+%UO&V=;)0!9n3r`857KTM6qN5u''7^hb+j?drKJtDg+#-WQCBD>9Ep5C#F2U8gp2^o,,!$o-s]`^S5gdiC;&+L[VXYpacnKGKJ<(-%[6CUT0e$U1`h\Pb)0745i[,pCQchga0W('b.9BEMUg,p`fXd/LWEY_],gRdt9PnV18Y2/..<e\XS84'h7.(I@RgM#0Q]*cCTMeF(%M:duM-tQ#nPa!V0e];f#/a"XK.[Q&C[8Ec*8\(")-0<9p7+Offb&k=1q8adQPB0E]P7/k984o#/+t5rYMB(-eE#ZM"'r;VT,SW8\%J5V9#'M0a:;C&*[6&e"-fBMhVb<h7j#Er%1V++(:PStu.%Vk(0deZmD?Z!iZC6Tp/Jg0kR[5t1L.Hd!Gob"$*8\(")jfBAgb1K%W%&ft.DR;tld16n886n(o0StnJ?H'7aZi's<I$T4bl3uV7G8sB]NPhML.*E(%EPUS%[;Pp6`3Ok3F;RKa[2d:%2<W9,Qi2_b32"L-;%8t-2URq.$s)HKJ$PWC79;X1(-3FibcST_I<P:Zn.KR.0qKe]uTXZor0<D&XC0I^F._PDiF\<0:T#[P/L19uQfV<aJ4.4J1nVOURq%>stQKe>q,CXk`bcdje&UE_5KC(g-+a8i`)U-KRqDR?TMbSV/hBq@_5R5.3:j3b;(/S<Q%s(h"5C3Kn`rA;dH)rtEL5njP6..!%!I%F5ki8Tfk(/O/3%Zd[XOi]E6)h[O`d\Ur5i]F++.5&W&<,)1dm6-l7Ud/WM-R7nSi,*[s6MH@.(u7&ea;C.^)d6WtR,8s5Da.7mF#%Ua.t5OXCSApKg0\ci5k,$I'3q/9GS7XS$S0]LdC4o&ea!k%E8=h/$ZPHD<LdWgmECEYgCjAuq`j-_-5;c8UgJoa'18(%#m,<Uq`<%'`OH!2F,@R\3fa;r4aH1ljheCeOk07X,V@>J3oDn7;Y>[4ni$6jF.?g9gt$k:JLU$bN8Mh_ZmLSV)U@<:M2b022)q?fgX,(P$_P"%pNGu]&X9@jFnfK]Ss/Wh(s\<?k(WBX;UY"EnaXinXBf"K4+PDL"L?/HQ<cJr?h+XP;T\rogSq-!:'WkqOFUYr<8FO$cBWctik>;?%_f8]kKW+6o7/_^-N.iQR5`f,E^aBHIQmB#NkkdRU@Zal@+g+nlP>m&K8:U_Kq(I<&^WXm/nuU>5"DFcn/s_H:?UdR>'t*j+[UE9P%@mdA")^B1B^.*8e=fc?4R<?m43O>m1r4B[Hj]4gt]O$3&\8JJ\9"coFfrO8cQEB[TY:5DQ%iIh-\:8F2m\-$U*uWd8=(;/A5Y5Z*%(Z+QV\ak7"DO-3h9I9^7;/M_N/XQgPVn-V)pT_0eqJ/*04-l^3R2.d=Z`_1SB8)%.&KIolV-\P?mIZd>hBqfP`6!I$CXW$qH"1BR%jSj:9j.R>@WiAs5h:k@Wq71]OBfL(mF1Gm7beeU:/i6WshS1a,=9=76OHqPX%0=6KH2J!>Vd*uM=I:*)pLfEi'$'LC@%iuA9)8;%%MY5\K@)`ZKnLP@C#KC[qd7PZZE=P<S7#(:@]S-Rh[F2k*F+iKX94&OQ]n!s>`[=#YZSl`,<Kq=%</7Z?:[lM+XeblKcN1+I?2`CN%]X7fJiS]KFTBgtWjIakX:G7%lK&o9%:KSCQ:9uWlMM:l(=I('<*Xd/4=M2Q#9?O`0Q5!]kCAE?GQ1FMPpMuliC49tOi2i&Bo?V0c%nM6*#NL@6[ba`dc3A*59G?\h)T1ZYk6sfHLQfFP/87Jq,dDTTf62#9]1E'd\)"/:GIMU-A,77JX;oHXtnL`1DMacDi1KiMg,4;(;%WGP;'\Z"7q/hb.iHgFhGgd$h)k07)J2>%hTIaXcRT;qJ1D)7(b_=Mf*dVA\4jiKOGa`F<2<m.Up;<<#4W-f2_r(j*7.9BEMUg3`7%\?]D5FLdWXM'7G4]NR?png-a'!dm#%,ZDj]PY!<f;Wda7ipsMN;ngn!X17;rgm%VG1)WeIW0BI-Q9>Ys3_a'Ol&sKVX;[L(l_Sd0%ANOd2$^<?3L+r:/[6CUT0e$U1`h\Pb)0745iauLhQchga0W('b.9BEMUg,p`fXd/LWEY_]7-l5\9PnV1M:e%S.<e\XS84'h7.(I@%RgM#0Q]*cCTMeF(M:duM-tQ#nPa!V0e];f#/a"XK.[Q&C[8Ec*8\(")-0<9p7+Offb&k=1q<1(9PB0E]P7/k984o#/+t5rYMB(-e%E#ZM"'r;VT,SW8\J5V9#'M0a:;C&*[6&e"-f;k,WQ\6E^%OS#A8r]&R.5b"<*7W&>V=gah^=nT=eL3j="\%^/C3<3!;pHsnl6Ap3%P&_l1b#pSWQ*H$8nEo>`RJpcb16n886n(o0StnJ?H'7aZi's<I$T4bl3uV7G8sB]NPhML.*E(%EPUS%[;Pp6`3Ok3F;RKa[2d:%2%<W9,Qi2_b32"EVK8t-2URq.$s)HKJ$PWC79;X1(-3FibcST_I<P:Zn.KR.0qKe]uTXZor0<D&XC0I^F._PDiF\<0:T#[P/L19uQf%V<aJ4.4J1nVOURq>stQKe>q,CXk`bcdje&UE_5KC(g-+a8i`)U-KRqDR?TMbSV/hBq@_5R5.3:j3b;(/SBK!DT36qmZ^"DRNTR=C%EdjFt?+cDkZ&57t(,0bgh`RXb,@%ER[(?oMag[L4pg:&T!$TD,TB'/MImpg!*Ob:7Q1dgN)tDJZPpDiVg4D50m]R2Dr=69*MAfKd%Rd`%tb6^1a%;HJIEGQ,Vc?A8`$8^nPMjWHK^V!tCmG,B"-s;u'nB'*@-f:ONS0ddO$g"RgrUV,jigJh0]<pL^!0KtsA<Za>]5WAY%RT?#F>3Yr25>!f-1-/Jlb),ldrsd"O;%TJ--PH([*\eFr497`[4TV0#KO^1hntPUQ5a"QRfd6I,?9(eZ!F?lL#*>+a"NV3lNE#KK%iUSXecflhY_UfCHMik^c.\H;ZT0Dd\aCi+M7<CgaPl!4je>8lt^PL@p8fJ^a^"O=^roe-.kE3`PL7_TRh;^K\R`rNj[T.3F'[8Au%itg6&qa%1t7dt+LYI9=6[:Fom09Lmk7ZI??QKH)TWVDUlSTQ7@Ih%^-AoZe]-9cVXOM/ARnj;)&iMTRifg9GQ?*;^@KmZfJg&@4?%0=HgC0.P3n%^+E7O4c;g=tfBd^&9M-0[-98)\e*2f4"ZVc0ld8<Obp[^<UoqbYYPXGt-e(^SR<TI,V^mEn>\g>_V^pN&=`QVZ+87%FH`>DLR!SrM*@8Aefog,BBDOg2<:<[_g(*Y#1E'RZ%;KMQiKAM%/EgS[9bE.%fQ8\"pBcmGZKpHDrusUIX\P2hf^'.EC5.:b67`o%nJbZ=&l)JtI2nXt0qodm=SOHH[F2k*Es1KY94&OR]`>qi#2)7KZSl`,<Kq=%</7Z?:[lM+XeblKc^Z)X<EK3C/o7Z*G<#A+iTL'p%$MgU,imZ'l^LWoV<:Y]rEUkpo$V[l\h_Y]SVHFa#c,-8j(+)e]0O\?tRf!YYi-4g_A^s_\..Js5[JW7_9)3achnDmI2a92:/C;J=%q.DSBGaZR?dEGesk$bjV*1,+9].Go%:Sh;p+trb#Ib*VWkkD$`4cr\#cVg+l@+^D:K7PNhD8gh'#3oTeHM-HIC4*gt0@D:'GR@\D%1:He#nPs;VlG"(aG#aQh(M+@Y+8nSkqH;&HlD(7@HKq8t7r[\gkeA5uE1F`5(8,(jIIoYJLob!XR>^@*QN@2B$WpMi=>V*_a8-Z[%'WI.BaYB<n7H+8&pckI!.s]Ag^tB4Uj%gW;pj(U9Rp\<]iGdb1LQ@&JB4QSffr?QS`%loeMf?q]aJ-o5dOXL5=i%<9&Q[-j2/_tV%SA8@$iSOa9_G>FR+.J(iQ"3AR8aonjJ.X*QO0<,+L@^89m^9FdRcnBPc6pH9m^%PKFe=(#>\/(HPq@69\[UF(lMm^[hZ`V>>4_d>%4^=$>KoT2QRg9CB^r$Q>&>ci8ftPf+QC>!7.tH.D,a&8Z$F`O`!_bih&=]]K2"J>X\m"K8;ok%&/@XeCpO\rG=RmQLH2eu+/a_X#%=dEmnIM,[Q.`$/,W>;1*]qB&$R7DP4p:%4QLFm^EkZ+LRio>?M)-L8[QPsut>BDDhF;@]no%0B7D]Hs,RL@WM9HD=+Yrn**cugmh%6#<3SjakZ]<6)9m':Wc_*QoYE>N7L(=C+N,+4mL9F+/l*=M`"`!lG="3gI>/A;LV3!>3#WI[8r<eo/8\D+CoL?j*&3fEBdG#_HF'%Wka#CGi%&cQL8)>!tli_4?AR`B*V]u4o=K(AtD&PWM>kBRcb)CVrhZY4Zr.`ql$9XpBce>kM713!)OX(s/1lhrT,R\gYi%Kd7c%+%ZG,!PRX+1-)qWK]Z0\4[fVk_$U8Q[7VnmVLk3RA<;'l<d1f*1GT%-f5Nb7QiVN0ea"Ga.Tq$UX6a)R''U^bi$4Lgr'j(S-@I_UT<%0oP1-jqpk_"oL(cb?6g4ML(a.'$*'@@E]S#08_s0`qa2#k@Mb9m9UGcR0iXJ_3SDiG`E)LIaNO[@ZPSPW7P23,fUA`\+-2biC"!Q%j7Df":CcmMCMD6Th?PC;N"5@FZ\,E'TDa/@o72K;eE]fAcID/B9,O4cf9p,O&(qB`;7EmMq&+`"B&e'c?I$`7@#j$f1_Hqq[kkKA%*]NA-[cho.dqLL\)Or<m3F=LGcJC76Dl[2_%HH3RRgR[@4H]5\<YL'GT;hFM3hPRI*4jGY08L(-i+HTcI-tq8U,np55(//5^bL;(%ZP(;Q*RBWLio<(jrOgADOtU2V,_69sr?=:n=[0fD!PWntl64Cb-rg;.QY_7LA-<cKBD>W>`(GL=;VH4a'H"[,#1/?G4?;Von`]._%Q3X3cVOhAa=f.eP=lSN74Nj7M(T.hk/-R<=n+4(QK#E;=./^QGAb'k5Q8onsT6Q[,'"fcR;t2D7i)ceTBSU![7D;SqCmBCUYp^YM%l:eYM9FanP+"[;_C7u%\@8!@-LkBpNYLugR]dG?`b-[h%jmd^g`HJSQ;<s5(_P`QbTa%(m^9EmF0T]g-`n/3\"`$W*POHiMGsRIG%p\>Yo#=V5j8-.Q`\9A'-=Wr]J<.&e>nQjXsi[n\a"lk;!B4Zq=GgT2`fErAq5@Nj=CX7fk<bAE3aNRl2g8`[T?Md7>rXlPf,jc\G%p5`SX-U@[9dQ(u(jfNcr]8t0i2k`3)h7)H7R,Jkq0:K"FaYu_kqCOo2[++dT\ERj?\b<XOD(/G6@cfd'hV1EBVUDcYpq)@;9#NYt%<I,IH?2nF"U$+NXF<.LH:iK\gE/h?W>.N0aPqN3C(D[1Ai[`""s$f'(KdMN+AV=1F9=Dg_J%l95[L3d`.FQKpdZ3Vj`J<'CI&6Wb%nC?5h/h4`Be.YPBFO!/DR+.>:kYf3pe\S%H8qE3.l#[+\W\j9]995(+E4QHs3n]Tm:o0gW6$53j(02pXg2k`oW\6H4IMGYY5,&jZ%#*_G(KiADYdi#BbHE$gA-Gf.D%B*W'9-j[$@ak*m^o9`\Peu[T_'o\*[+3m\_Xd/]pbIq'#5-X>QnBkk;Dja!lFc)USdgb_lV[ba%2Q@Ho.C)i^S^i7%e9\*"CtWc/\QWn/M^c@m$,5\7)kCeY.EYPQV'nF%RFkPu0DVJS/*1!$TSMOm4QEJ+W_n\,\u<\B4g#K%k71X;%rUjs9#5$JEPF4`IKq)9T=;Vc5V#np<$J$u@2E"-:(DUsA*">L`B?;:Z1[ECZ7l]h7/4/dEG#M85b*/F.EIi3-c8qF<GOGh.^1H2l%/jsb]o.,3ESRr@Fm:"[_(Ia*'.24HR[G09L`72u&5QPE&$<J^fZDCr%.]5'C[GU(Xr9-B$84gj\'&WJXBsh";]U5m!nQ\?L[,ath%7-RD-Rho8FHn(VD,b+^u^eUQr91<^sQX26nTMr*7r`=tL/B^X_O!OKF*mlVD4E<j^GrUA7pdIK16GD[`/\aks?E]kHWUMO%n,g1M%%<28LBs5Vg&M"<-W:aoCg8P.E8*EpBhGjCk7cKcWgM(34VUKP4VPD(YNTp5W1?nKX8uAq8^o[IX3p6sNZ`_Co/3;hMNo<UDpc@0Y%1hV(n)UCsEm'dZ/P:rFbnjSI&0ZHI9`[4\7[dNOWS,?B0(f^+lF1Gm7Cu'>J0(?uEG7"i?J\r?rbEp0P:(S9NaRH*4C;!`:*;]DB%N!Frq$*Za(r+<YkW81QhBBOg`2q5kSN6cF9Tu@U(KmFYo?_26>H')NHdD?N#nZS2^rcRj#ip8?=@He.e\/.u/_f\H4CY%X-X,<(B%Q0Rj=nd/WjWg/g`n6+\S>'9LFkJGdWI#!=r(4NFdXcS$).mCZ5nOmI!'g,o-_DDY\jcP816\3EQAQJH9Qb$B"T2;B^4CX__:Xq6c%2A\p3aK,,L2;`YHL9#"MXT8eR?#GZ1Hh6'ZRe!@SXsoL"]_^_t]FToI%M>%@M"mc`f<=.UrD1,/1P_4V=:h-V85qk;=$X`OqftQN%^FJO>7iHr7c6A1nieT$h_O1KZD6)Hl.%3?`?XSTWK2O@]=FSgTCWQ"5#Q/pA$f7JSe<)JVFX?0WoJ(cd-M]D3r#p[L<n2N.<jJ93%^]-/q9%A)bY*J:%R^VO@c"kK<g9ju9-8QWWqbqAmn?Ed67]dJlAeW12;'l`E_lW/X_`9Lb@JK*"))?,:'W&eD`'k:;YK[oZ-,5;Q%B0O_\bM3Ycmshe7Zb<3tCX!2cjW5433K`pF4hSjT4Qe)h:oC;RHV\dlg=+''+ei(Vc`QU=43+Sd59'L^&*&uTEgF&jlNpa)*E^ll%LJXsV:eh?^Q"'&-&(gfLqM`s+IKlqQ9HH,L.fuSf6iV;a&EbB)s)Hi@U1@d2Xf/@B0jh3"G1QEK>^-<`YggV-;I9tHGtqg:$]2e;%1g5e81=9"dP"//b$no_')G$X"((nG9":k5k.oqOoVA\:P+'I6Lrd\.*ps-Q;+SlTOZWsjPla7YTV7OhE,jH=NK\8S@2]7:@:4n,H%i$+>hSV'(u$ld!m'E0ZQ'qWpI1UAMq*BJ9e)"hai,<Bpp)da0sHm6IdbO4-CGt)<J$OF8H^($\;[_IM=b=2#>GQa>k=eCDAUs=sR%"EE"9#6-(CANa@@;fK/Iq"W=X14J*Ra!TH!<d]M7#SJfD6r7s_6blai?5$ik,PVAH/\N@5IYQka]QPkL$#o9Z0MV?85/XChP'\$G%A8N\jP@s[b!35]*C@oOn6<,:fAN3!HgI0W5a=L,e_?Up/PD/G4FS?\QK*h>NI]Ql=fg44`cTVf@1-;5Q(47fe[m$1QA@eS,8@OhC%!BKbb%EmIkZFP`d,JmlVa*-6/&IA`-s*1>q,Qnr5+LjS/"K3jL[uhm2b?6`2KD1R#&Q/q$';cBm_V%6b!qM"s(ln@dGnI!r(C1!t%b:j2Q`ru;A_L(I//2OA'ODMX]O-*rQ;.(8k^rO7p!WEXUj$En<?XS8_-lJA5&qJD@8a\d^5o[@bY?Pu/6KdH,NcE1]1G&HX"a.#*%:bu.Z)+AU1?pFa[`H].;"j6+0e$oTnFkY8ldc^_,o^3I-%["7!P[4Y4TNCO6)G5=t"u&t*K5AFA*+Tbf0)CZOIYXOsi2qSQ9'lKA%B9<@G2G`KH.3LC/jFbGRiVRo8A@o"I8?s?mU?q&Zh7qf/l&c)k=':1lGbb==e*iJH>I_2[q;KYMB^>RX`]M)g'iB\q'gu9hh`"@,%=Ip+L$+a3tTLpoRiA#-5K*Pcmr&,U2ai^n"CKXcuD;d1i-O;2:+ujn]+'rcB'P\[5_eP@]*Dqn%3P_&sf-;q4^D&A/iBX+-q0OEI%AL*iUC!Vt_F;Dq4[*:7HhC.:s$)^Sn!Ycr<N$no*mPQCb$p`:72VeV3eL]rrU[[[d]a@T%ED>N0.M0]q19Lq4(aoubBTt-bd)eJa%d]#Us$;O4,Wguf8>FkI)%iT:C$9,,0WaP6HYWDq,kb7.qidHdL@qE?_5^k\!AjfC[]=lb*T_Fbjo%e*DhD--/g2%J[]qSTEgfpkq%L]LX4pD1P<5`c*(c2o*q"E<pSC='N\s4b/O*Q`3[q??[*\Ifr;.YmK5;OnX2!Xc@j*j(,c9g`DUV)Iu8@/f$G";sL;AQEr]\d'qU%JJOYrRPu(B)[s`E.1j?sQba#k:-\Oa.qt(+EXEBsBnR5*fu]@c_IX?G/W=J%>g&oplO=nk111BI:,kOf(.A%b#M&Ji/5rYoDo<GI%=W$jJ@%3f'Zh5_d>Oc63PEYFW9hmCAdJNkkdN*@c.;j[6a_59_#I`m-@A\pj>Z'*XN?n\h]1]NqMWr:t;Ym'!KY.sWACGV;2QO&9%gUKl32Ri4\R0@/EZO4,^HdL>[`##_\_SW/NgSJIn:>a!5\32^DB7sLO%`$4J\f%lH*ZMM`67]Z%LGoS3SFIqS6-SR*E@-H+20U%+%2(da6a;)b,9A:SBHSq@oh]Ah[FMP/g82"L/5Y?pmn;0kk`._e%0G%9ZZnk_eQB,g176jGt<!\.n/W-\'.d;X8"6UVd@c[C(SKdUb%3%39Tj5KcXM5;&E3*j]/8Go'+3u--j748:6;moP%SDs:qP<`%5GpC$J_SZ,Q0UT`0@[j_5'0TOKZ"hnLMCoqaTh(GM`J.&t62$tR%fnf*QY].<"Xl&AC_>/.,*q^bMY_mnBdk;T.1F65ZfM@nfOSDeZKV`drVVePJKMP%k&>3Z[\T3Hd0A];]\I)hneB_4?$1GqOr$+A0%q0D!L*iX2Vk>Or338_B3dgXDT*>Rf&jDt)r,I-j"lio18n-"*V1&\UJ&[!>oJgp2-Y0%6VhN9S'NH<DQno2Z(D-bG+)hm*LZ.=o_%6KWA#LP5oCJDA+5M4R%jI[a,qLVr,o7Od@ekiq*:I%!#J.gMP=pt_6R=<<KPDGX]&^7ViY>PgguG/ah;m\:u7M9*mh)7%h2(d(j;%FnN6m@1f?RdVion#bP%uCm8pWPciTXeUPV!&3fq_2I=@V,:*3G14"V.@://AKV)65Jp8UZ"G-fHN*5rdK?QCeXjK;laV:cR9h-k/%E%El!ki_d#UY&L)N-f'%Tl^a2F+]K>'erfCM0'H+9PK`N0E`dA;k%"mq?_dA76j<Y@8H,CNNN=Dp\@uR2pQtP$D,T!"K0V9A5*MB%iY,rJ-\i`'VMBpn^BoG#n-Y[S?D7r;%2%_*P4f_E'YR-aCquQgck34nd)+((3Wj,pOC7"*0EA12+)Q$%c3IiVTcld+L-;CA28TRA%aj8T0q'<k]Q@G:\ilWs5r)*SZ2)'uU7Lr9'5JlJ^4`-"(]6XsAT=_30ScS=qYsdd"n5IF"o7Jiffe5ko]RC'YZFFU2DdgG:eUIal%,mV(Nk\1Rg-epEP"^Y^MfP1^&Jd7FY%>l'?ePi/7K3]n.9q`raa0lZ^$cgq,\KDiT(iRp4W#.4$i^4AgMSR=tSQ'VJI]Uei!$5$U%ClIq#<1^7,\+P,2AMUh4Cf!;mj\*lD3s*u+B$/0F4+RVC,7@d.)["YGU_j^@HX!X>0G2MA)%h8m.RC-gG64:J1:+tK[moK$MI(/T%/a9`KpI(p>B1rF]Yt8CN47T-^+]#r!(u<*5fTA]T.L'4a?K(m?;7V72k7FD1JROBuH',8QR=Us!4>"8pEdlSQ[""M0]jW]ZcV,=r%"R_r,1SJ9ro,nN9d?9:ZR^0[JH\W.Uii=al7q:F6=C6_s+/2DT!&kOVp;tB,56tFG7_5L-oHenGQtKH?A*h+lCJ]]_TM!;YaB*u&%Of0U##3Hamp)u5iRi"i>X4JV"-[SQlNbMsLp.1J:riePt@1=Po=&"1%Ps?/n_C[(]4..Q8pOZ`$TbhqOVIna.?rpQFXth3DBfTt/%5"o+UD3I4Pmc9ubI)*@[*)fr3V+4aE0bL9+B:1?jk$L"!Rua/bLGiK,HDfY'.=*<@/tA5Lr0nrHkT_h,?2^i/&7F!-Ah>/%.,-bh%-lE5/pD"OQ!8I't7Zt4TZotkJ!efuJ$E0:/7n-C%PS=n!j`!)g(PRC5d[,XfiULV*J.&n9"N]#V[f&AP5<kFYrSa);Uqb$$l;2g5%':UJKNjB4q.`m^k"8q#?3ZN<ZK[+NG@qt$@]WE/U5`a,ki&%)Q%'k;aT_h+K%/YPh*!&kZW.($t!'k1C&*+?:YGBoYid66X19:nE%eUT<5cC9S)@=nSQ,C0bn?:W#G/I-+--K>aKYKbMuHii*P"m\2?Yi_D`?j02F4KN,SOp4S_o/!&-;s(o9-(&>7!5;tNbTjRNWaKc%%I.d!ugZ+p_s8$p:fTXk$?p[4kka?\c9*>a'764;O;()uh+?(="(3Ud\?06dF%"JjKZ::/d'b>1s(m#_?d"r`ReX/p#=jSieAD?&E%9%!m7%O]I0$Kak("dZpN;g5.ThuqhX3]'[:+euhh8XBJ6NBGQdLj^@!aCGhn<&ff2^s%R-jbaahH3\`JJmKDRgQcG9PK8NK3Vlom%5Wj1iP82EUmsG;#6]NTd8jn?qU!G/BK81it;FBrq"D3C`/N(n1"7)Xu7c4OrW7b9_WFJWqnfgH:B#JeIU3"+;Dk:63m+"Q)WYNbc%P]Z$.E`1,Uh0h8HcZIfeacjuGoK'6C9d6AAk32uaH2^KZ_(T8u,MR#]]:NFT;f_4N@Q_O:$=X2&16g*X1m3HX,lC"EKD>R!'bO,f%h.FV&M(Ob^;hlGYKD[:t$(?C8L2@Yo]M^!"@`Q=cP2pRH$T$[W9j"1.$!L(;c'/PE)SSJep`?)R_0ZA*bgjU)iY>o!6@t"!Eu2:l%bCIH@LV;1`fhs50lmfs",<::F(]m'u3+I9>$eUlS*0#4a*!Ir?+S;jF`/dS+->$@BD$sfh5E_bGP,8@.ccb;m'RW-N[_@93AheuS%@%(S5[5]p$=:g/9g.2@(!$[Y##'lQT&-^>a`ls:a?OGU2&DbpK%B9s]jKStDTILh3`)\-e;1fd=#(KUPXc<E?Yla*@Z)8..5$NYK%[`h%grmZeNf<VrLq&s#Mn=jN6+"oA#=QBPs'(e=BM8W74%c&*\&ZhPK_@DD.i@SlleZ<7-koES]$8K@=gjBhM>+(.3R,[0DRp5uO%;0c,WaDn:LZ*dc3]ckL2?-2>TVL[SkA0,aaRH\8cGfK>JAm)&d$OJC8US!.9P6>+UgXU@hYX*5O>%J$H1#0!r''SEuHoUES#A8_Y%:+rU*@+NZ)BAeK\J5D2H%1r0HGpSrNL'q<nm-K%ZogT:E2;^YH1Xb'<K^Q]rpdu%,,=;#rkd$#j'QQ^F_SV!-=?7JLfG;t=p;EA-%<".-Qn;opNV`PQr8gUa/VY)g1!Y5Or7\OZ2PK`^*p,#TYRAn\abm"=amo%b\/pH8<`gm\F^k`pnMF!7$bb?ilgm1$Q=a.=;@IJPS%>Ct.o!9R*AClC*P<1^7)Uk%$W.P6ho2\4Jr&TWCkYeL.I@>LR=CBu*39_p+/)As8VehIhHaFLTMKX`_U%$c+oD4L(]"Cgn*W@pYb%^lC@T_@oMG#VEqB:)pQt3eB7-[<PN$;2FeC(]t@UOZdEZ<pCV:N7O9,DOC).=j-98NJ::JGhb#7##+B8Kh@u%Ll<Ne@g"fM!5%-n%+k4RKBu<&t_F=k)%1.rY@Tjkg^VjjpiOGgrfqXFB4=G56/7'&166.RSCopm??Q_i(WP&4-k1qt?JqM$g5*W7fXO+a!m\K7gFQg2<%#+d[d#B(#X=lAghMdKuPYNL:mM<>c9._c[4>TUl?f5MWjD$Cq@=Qdl:dej-g.l<[f@3+u[LEO5P>MRJ>,g1j=\+VL0.J8BW@+-oC%i6jLjr_j6lUbk[O):S+1Kp]&O)p0?=Btg6iCH=oRS2"TMN,bWbFEP3l&"WfpA0l*W$d/+Z5lkc;/":ril%0^?^l*tnAT5"G_<2+j%Wio$/+`$<LE=9#\FV0Mt\&.sR/U\h5:75:\Pjq3,am(K1s2[3KF/V'ij?/=-o>oj8#?uqH&o@(>7Z);l6)4*JDZN]leEU03In`Ru%G=]TMZEE_FPQC[HRWGZj1;M*^9uU;hL<J1HiVCYDUXNLAK)6HgreJ+Fpglit'g'+hYXKN7:C+u9o.^A0l<0g8?eV2nA-a+=.`;mD%9XCH?/2HK_;!6=W1V=#q.ViJJ%T9Y//.?7F<TT<T!8&R$'M1S6Gg$il:o5D%K!7'iG+iI;`CqXBDk)$S=8E'<UpH1LN4?#94t>u[%(%TL+c;'L("K@?%q&I%qf$fII3j2$8Wd*EW%2s3)NZ?O#[DM`cF*TrN]Yn7c(lQGA=Zih-H#[\?E4NW:B2_SJ-,4jA8CFC20Uh8N%K0(HsCNESq?Zos]^FQBD&X+Q)R+"Sb1rhd7An0eV1%oL(3Y78EKcl=`8W)26_[o<aega=!=CoU<3P@_K3hH+&O?"s08BZulY-E;&%KDjuZbjo3dj3FY*GAMoi0"b\=k#_U%rtH%mV`C<R^'Ye*p:J<a9T*<QKkFV6#TRWAgA(-,p<CWRCD(sb+MJa(_TGQ@Q_Xa_^.pGE%X\[%hL,XiH.5LuE=V@bp>Ul7ZQR!!TAkOr^L1&Uf!t7m_-o%&bff+KB.a]WifFQEo??nE3pP%P9K)Ok$f5su(hdU=>,t$7*"rU4"%;=\kiqeF)Jpi<_5q<"k><@?oFC83>XBT[7_?]1X)nY;jFAY-[Nc$3\""2&HmS-`slJ[F==1L@?r@C0slhF<PuV)0Cj%I?8p65:Z&%MMNJ/-28rm3Q(:H77\2>4k]_30YorOQ[uL\(CTCnP8$i3Mq.\Dlp&8DdZE1<p)A@:Mt>!KL2NLGdKmp!`qIAhRp+.\_R!%p28!b8%Rj/<7F#&>3E<Epaau:D(AVtA12I64H[c*6?p?*K(=YjI6&MqAbl+b*t9+`K44H(`6Fs!9QgbpmD7;a>2Mp_dGaP4st7>B0lZJr\f%?891V2#8U/K>W=TJicK%'Bt'.)s)Wb1H.@j.).f@O+=#A(d#F#%T.dhV?\9U(>'NO)^(K$;#@,G%HAl?&!+86_]%:i*E/:kS]tr1%rcX4>_YIA;N)jk0!e+>cljnlgLefYc3'S&INseVQ^)CJId[@FO<k>Wb'!J4K;\X/l&2nur?;#q=V-Q>kp%9GCKM<LeieeQ\kJP0:%e=H4eaFICfAA3K?B#+buKg.$h#(Vg+Bc&8_C=\"a"f8n_1&q'(Ui(=$ZWQ(Xp9h.``F;4T,#ujleMZkX)(cAW[4E-@9OfKpr/Nn\%,mJV:q^C[*[)+@dL?O$O*`@rbTh$UO-+8)D2JLfkMVpMTb!m937d4Z9&$Is#I!DXdVXp6E*%-^E1&*8Ibl^=EnL^4Cgt9ESS./tZ%9,:ZC9-Mb^%+Ii!d>'N2@`Aul=Zs,hKaoUPLm=&&S!4_T7PM.S0e?gmf:#GH4D.@@W3mD;FLA\]8bo2m*)S#VJD#gUIgl=nKoi3,%In$o:QWc8`Kf1f8,1$k#UGNuMWB*\'QTZ(h&-X,Notj-5p2!Rm_pTHk"isB%RN_VDI87gOV?Y\q*7nF&i%a?6`[m.8cBD7VZ9B'm%KR%`]c0p9@WU8hf_r@XRA*<Ac.WbHGpPL"NN/hsp7AM,/V5.MV9"<ZqJl",R59%$sh#)2r`X!HVdnO=.0UcTLUG3)6?RhRtD)Oi&%HPns!W3mBeFLA\U[i)j/3b:Fg08hPsflWWd:'t(7GR[<YN)?NqN(s`m*3>k$dN&=S3s0sO;jc^HGp?h?/mQ:>;ElcpCr[Y;CGJ=<%RrYl*fh.LUe"qJuV''3VQ*W&]r\<*TC&014MjSiO(VI3i.Z=7G91gbB@>Wi70B7lWSIPZOD(XfA;U!Rm1(j5."mo`d(u'!"87EFU%:,(p!2WBH.$_rJn@$Rk\A[[[p.#Z(am9CT'=@=J@L5['N_Ppu1jr)>sBLuX\hLI?\q1b]:EA$IJ3*stV@A\&d2pB0`%(m1jHjsp$%aTXSIk0@)0D$Y7,_<gj#@9d;Z/hTa(dJ4gn$]@,/-tT/!QNNV`[eUWrPniE'7N(A]l$@b"CFJUMO*tH"9%kmS+M6lN/66o9AXRK:%eAV@\nIPZrT"eY)ro_%H,6fs5)>M+AhS&l-r&b(2:ZKXi=5SH_g&EjX6/pmj)s2'"I/ha+SNgBL+2@gRa*6FE=YG@RcgL3o&VZ:R%V8G])'.DA3jk4pcWL70G!3dNd4%RfTQTb3UjSi.!l!6Z$9<08*$>j4jdF[;JY*9^-WS,,q66c+I)'q1!7Ws(1I#<lP;1gA<[8s&e%Y1E?P2Y/4P]BO!GX=cAW.=2!NUh9&FCA-)\EhR)(NSEg!`@2.@P2ng`_Up-Yp/%.(dBUhXZ,Ao'c5WO5N-f[jMVG,*GRp7^Rmh$7%F$;dc)!lK9gjNFl(`Xk=\+p_`3%V5`.-954?*3R:)RgY\k@.C<r247m;lI%'Q8\q7`=.;f(E@?ddog<",hjOg:@\9FS&g6;H1#OX%:(&E3+S,h-Bd$upH0Pl-I$A_XFEj(\\,GquA16Tua[WCt.&A;,q^D+UBtjS?,Lh_/[/&O#j*/`EJ'tW.bNWSLbPZ@QGbJaWbho;V%rS1;I.@q7\G(hS,Rg@Q'=#]D.W/dUi7`^\ehDYR\M&J7.+<l_HH>Mu69k<%W*rOY=@sLn]>ghdt1DscnViNCii#htPo]jsSk3[9Y%(2r_6Aa;]u$pbM)i4K^G2=6+f!es?a6LM1*OB4+S%Yn#AoT9u05/cSQ!T('XK6/1+qPI]fL<ZJnD\?E5Z2e'cZ'RI]q6cV"Ml5p;%)g"uuq`.(b]LV"uORkb@2<b$IlS6W7CrA8CZ>dN$Xa?S#s-2K?bAb3bL:IA4m9'Aug!LjY)#O863T.*%.%/4=@tMl<q-s\b:nDt)%',h&m2!po7N'.R>4$uJc6RE>>V:_doDHN7.Hm?oOq\2O>K<S_h`Aq'YN:NJH12JOg'&N\iE*c3'GP9-Y-BU$`I54Q1rI'&_q6^4@%_!K&i3&@@'Y"G:;[rq&lPNVA>g`4:YEgMLI3.@uh(\-.(X.LK(Nid2JGc(?5oGRJ0)*`Sp2P_[T^aiOJr<^N7:r7DHN&nFTP?T@I%08H\LHO&Uq)Y8P"(-l*"^L=cgb)O]lW%L4<Kf92LIuHd1Ko/.-8f9Ri%"i^<hWC_*.i)9mG:_T"m1#I'OHs>A_4c%#]pDC:prb=^%YimVY!HUE+YT:b?SL\9a3,Y/RdKP-*5e*.YU`l85NaJ51N81a8@U@Xt/Frd@06'i:VfM<DE\OS\GC?jk#Mr[S<f=_>5RSG,Zs(^K%@g\*gmqB(".l-ff@Yr&XDDOtN93YM5r"73#(NgpB?/Bfc?chU4U5A:ZDT5c8k3r?FdpMP#rr([!GB\fq^A.H35J6mbcYrjTa*0`i%Ie`$lJ%n(ZrTP[FZet]trWW2ih(QOWs7tL@QbU97)\G3,_nZ!+O8nqHiI:j[NcG=~>%AI9_PrivateDataEnd